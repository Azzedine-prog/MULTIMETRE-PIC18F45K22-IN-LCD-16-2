

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Jan 09 13:55:00 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69  0000                     
    70                           ; Version 2.20
    71                           ; Generated 05/05/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F45K22 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105                           	psect	idataBANK1
   106  005B6E                     __pidataBANK1:
   107                           	callstack 0
   108                           
   109                           ;initializer for stoa@F1176
   110  005B6E  28                 	db	40
   111  005B6F  6E                 	db	110
   112  005B70  75                 	db	117
   113  005B71  6C                 	db	108
   114  005B72  6C                 	db	108
   115  005B73  29                 	db	41
   116  005B74  00                 	db	0
   117  0000                     _ANSELAbits	set	3896
   118  0000                     _ANSELD	set	3899
   119  0000                     _ADRESH	set	4036
   120  0000                     _ADRESL	set	4035
   121  0000                     _ADCON2bits	set	4032
   122  0000                     _ADCON1bits	set	4033
   123  0000                     _ADCON0bits	set	4034
   124  0000                     _ADCON0	set	4034
   125  0000                     _TRISAbits	set	3986
   126  0000                     _OSCCONbits	set	4051
   127  0000                     _TRISD	set	3989
   128  0000                     _PORTDbits	set	3971
   129                           
   130                           	psect	smallconst
   131  000600                     __psmallconst:
   132                           	callstack 0
   133  000600  00                 	db	0
   134  000601                     STR_1:
   135  000601  76                 	db	118	;'v'
   136  000602  6F                 	db	111	;'o'
   137  000603  6C                 	db	108	;'l'
   138  000604  74                 	db	116	;'t'
   139  000605  61                 	db	97	;'a'
   140  000606  67                 	db	103	;'g'
   141  000607  65                 	db	101	;'e'
   142  000608  20                 	db	32
   143  000609  3A                 	db	58	;':'
   144  00060A  20                 	db	32
   145  00060B  00                 	db	0
   146  00060C                     STR_2:
   147  00060C  63                 	db	99	;'c'
   148  00060D  75                 	db	117	;'u'
   149  00060E  72                 	db	114	;'r'
   150  00060F  72                 	db	114	;'r'
   151  000610  65                 	db	101	;'e'
   152  000611  6E                 	db	110	;'n'
   153  000612  74                 	db	116	;'t'
   154  000613  20                 	db	32
   155  000614  3A                 	db	58	;':'
   156  000615  20                 	db	32
   157  000616  00                 	db	0
   158  000617                     STR_7:
   159  000617  49                 	db	73	;'I'
   160  000618  4E                 	db	78	;'N'
   161  000619  46                 	db	70	;'F'
   162  00061A  00                 	db	0
   163  00061B                     STR_11:
   164  00061B  4E                 	db	78	;'N'
   165  00061C  41                 	db	65	;'A'
   166  00061D  4E                 	db	78	;'N'
   167  00061E  00                 	db	0
   168  00061F                     STR_96:
   169  00061F  68                 	db	104	;'h'
   170  000620  68                 	db	104	;'h'
   171  000621  58                 	db	88	;'X'
   172  000622  00                 	db	0
   173  000623                     STR_15:
   174  000623  68                 	db	104	;'h'
   175  000624  68                 	db	104	;'h'
   176  000625  64                 	db	100	;'d'
   177  000626  00                 	db	0
   178  000627                     STR_8:
   179  000627  69                 	db	105	;'i'
   180  000628  6E                 	db	110	;'n'
   181  000629  66                 	db	102	;'f'
   182  00062A  00                 	db	0
   183  00062B                     STR_19:
   184  00062B  68                 	db	104	;'h'
   185  00062C  68                 	db	104	;'h'
   186  00062D  69                 	db	105	;'i'
   187  00062E  00                 	db	0
   188  00062F                     STR_12:
   189  00062F  6E                 	db	110	;'n'
   190  000630  61                 	db	97	;'a'
   191  000631  6E                 	db	110	;'n'
   192  000632  00                 	db	0
   193  000633                     STR_62:
   194  000633  68                 	db	104	;'h'
   195  000634  68                 	db	104	;'h'
   196  000635  6E                 	db	110	;'n'
   197  000636  00                 	db	0
   198  000637                     STR_47:
   199  000637  68                 	db	104	;'h'
   200  000638  68                 	db	104	;'h'
   201  000639  6F                 	db	111	;'o'
   202  00063A  00                 	db	0
   203  00063B                     STR_77:
   204  00063B  68                 	db	104	;'h'
   205  00063C  68                 	db	104	;'h'
   206  00063D  75                 	db	117	;'u'
   207  00063E  00                 	db	0
   208  00063F                     STR_92:
   209  00063F  68                 	db	104	;'h'
   210  000640  68                 	db	104	;'h'
   211  000641  78                 	db	120	;'x'
   212  000642  00                 	db	0
   213  000643                     STR_114:
   214  000643  7A                 	db	122	;'z'
   215  000644  58                 	db	88	;'X'
   216  000645  00                 	db	0
   217  000646                     STR_33:
   218  000646  7A                 	db	122	;'z'
   219  000647  64                 	db	100	;'d'
   220  000648  00                 	db	0
   221  000649                     STR_42:
   222  000649  6C                 	db	108	;'l'
   223  00064A  66                 	db	102	;'f'
   224  00064B  00                 	db	0
   225  00064C                     STR_37:
   226  00064C  7A                 	db	122	;'z'
   227  00064D  69                 	db	105	;'i'
   228  00064E  00                 	db	0
   229  00064F                     STR_72:
   230  00064F  7A                 	db	122	;'z'
   231  000650  6E                 	db	110	;'n'
   232  000651  00                 	db	0
   233  000652                     STR_57:
   234  000652  7A                 	db	122	;'z'
   235  000653  6F                 	db	111	;'o'
   236  000654  00                 	db	0
   237  000655                     STR_87:
   238  000655  7A                 	db	122	;'z'
   239  000656  75                 	db	117	;'u'
   240  000657  00                 	db	0
   241  000658                     STR_110:
   242  000658  7A                 	db	122	;'z'
   243  000659  78                 	db	120	;'x'
   244  00065A  00                 	db	0
   245  00065B                     STR_5:
   246  00065B  25                 	db	37
   247  00065C  66                 	db	102	;'f'
   248  00065D  00                 	db	0
   249  00065E                     STR_4:
   250  00065E  41                 	db	65	;'A'
   251  00065F  00                 	db	0
   252  000660                     STR_3:
   253  000660  56                 	db	86	;'V'
   254  000661  00                 	db	0
   255  000662  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260  0058EC                     __pcinit:
   261                           	callstack 0
   262  0058EC                     start_initialization:
   263                           	callstack 0
   264  0058EC                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Initialize objects allocated to BANK1 (7 bytes)
   268                           ; load TBLPTR registers with __pidataBANK1
   269  0058EC  0E6E               	movlw	low __pidataBANK1
   270  0058EE  6EF6               	movwf	tblptrl,c
   271  0058F0  0E5B               	movlw	high __pidataBANK1
   272  0058F2  6EF7               	movwf	tblptrh,c
   273  0058F4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   274  0058F6  6EF8               	movwf	tblptru,c
   275  0058F8  EE01  F056         	lfsr	0,__pdataBANK1
   276  0058FC  EE10 F007          	lfsr	1,7
   277  005900                     copy_data0:
   278  005900  0009               	tblrd		*+
   279  005902  CFF5 FFEE          	movff	tablat,postinc0
   280  005906  50E5               	movf	postdec1,w,c
   281  005908  50E1               	movf	fsr1l,w,c
   282  00590A  E1FA               	bnz	copy_data0
   283                           
   284                           ; Clear objects allocated to BANK1 (86 bytes)
   285  00590C  EE01  F000         	lfsr	0,__pbssBANK1
   286  005910  0E56               	movlw	86
   287  005912                     clear_0:
   288  005912  6AEE               	clrf	postinc0,c
   289  005914  06E8               	decf	wreg,f,c
   290  005916  E1FD               	bnz	clear_0
   291                           
   292                           ; Clear objects allocated to BANK0 (34 bytes)
   293  005918  EE00  F0D9         	lfsr	0,__pbssBANK0
   294  00591C  0E22               	movlw	34
   295  00591E                     clear_1:
   296  00591E  6AEE               	clrf	postinc0,c
   297  005920  06E8               	decf	wreg,f,c
   298  005922  E1FD               	bnz	clear_1
   299  005924                     end_of_initialization:
   300                           	callstack 0
   301  005924                     __end_of__initialization:
   302                           	callstack 0
   303  005924  0E00               	movlw	low (__Lmediumconst shr (0+16))
   304  005926  6EF8               	movwf	tblptru,c
   305  005928  0100               	movlb	0
   306  00592A  EFDF  F01E         	goto	_main	;jump to C main() function
   307                           
   308                           	psect	bssBANK0
   309  0000D9                     __pbssBANK0:
   310                           	callstack 0
   311  0000D9                     floorf@F527:
   312                           	callstack 0
   313  0000D9                     	ds	4
   314  0000DD                     ___fpclassifyf@F465:
   315                           	callstack 0
   316  0000DD                     	ds	4
   317  0000E1                     _current:
   318                           	callstack 0
   319  0000E1                     	ds	4
   320  0000E5                     _voltage:
   321                           	callstack 0
   322  0000E5                     	ds	4
   323  0000E9                     _nout:
   324                           	callstack 0
   325  0000E9                     	ds	2
   326  0000EB                     _width:
   327                           	callstack 0
   328  0000EB                     	ds	2
   329  0000ED                     _prec:
   330                           	callstack 0
   331  0000ED                     	ds	2
   332  0000EF                     _flags:
   333                           	callstack 0
   334  0000EF                     	ds	2
   335  0000F1                     _errno:
   336                           	callstack 0
   337  0000F1                     	ds	2
   338  0000F3                     _v:
   339                           	callstack 0
   340  0000F3                     	ds	6
   341  0000F9                     _result:
   342                           	callstack 0
   343  0000F9                     	ds	2
   344                           
   345                           	psect	bssBANK1
   346  000100                     __pbssBANK1:
   347                           	callstack 0
   348  000100                     _dbuf:
   349                           	callstack 0
   350  000100                     	ds	80
   351  000150                     _i:
   352                           	callstack 0
   353  000150                     	ds	6
   354                           
   355                           	psect	dataBANK1
   356  000156                     __pdataBANK1:
   357                           	callstack 0
   358  000156                     stoa@F1176:
   359                           	callstack 0
   360  000156                     	ds	7
   361                           
   362                           	psect	cstackBANK0
   363  000060                     __pcstackBANK0:
   364                           	callstack 0
   365  000060                     _efgtoa$1066:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x0
   369  000060                     	ds	2
   370  000062                     _efgtoa$1067:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x2
   374  000062                     	ds	2
   375  000064                     _efgtoa$1071:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x4
   379  000064                     	ds	2
   380  000066                     _efgtoa$1075:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x6
   384  000066                     	ds	2
   385  000068                     _efgtoa$1076:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x8
   389  000068                     	ds	2
   390  00006A                     _efgtoa$1077:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0xA
   394  00006A                     	ds	2
   395  00006C                     efgtoa@t:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0xC
   399  00006C                     	ds	2
   400  00006E                     efgtoa@pp:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0xE
   404  00006E                     	ds	2
   405  000070                     efgtoa@ne:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x10
   409  000070                     	ds	2
   410  000072                     efgtoa@m:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x12
   414  000072                     	ds	2
   415  000074                     efgtoa@ou:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x14
   419  000074                     	ds	4
   420  000078                     efgtoa@d:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x18
   424  000078                     	ds	2
   425  00007A                     efgtoa@sign:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x1A
   429  00007A                     	ds	2
   430  00007C                     efgtoa@p:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x1C
   434  00007C                     	ds	2
   435  00007E                     efgtoa@w:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x1E
   439  00007E                     	ds	2
   440  000080                     efgtoa@nmode:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x20
   444  000080                     	ds	1
   445  000081                     efgtoa@mode:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x21
   449  000081                     	ds	1
   450  000082                     efgtoa@h:
   451                           	callstack 0
   452                           
   453                           ; 4 bytes @ 0x22
   454  000082                     	ds	4
   455  000086                     efgtoa@l:
   456                           	callstack 0
   457                           
   458                           ; 4 bytes @ 0x26
   459  000086                     	ds	4
   460  00008A                     efgtoa@i:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x2A
   464  00008A                     	ds	2
   465  00008C                     efgtoa@g:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x2C
   469  00008C                     	ds	4
   470  000090                     efgtoa@e:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x30
   474  000090                     	ds	2
   475  000092                     efgtoa@n:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x32
   479  000092                     	ds	2
   480  000094                     efgtoa@u:
   481                           	callstack 0
   482                           
   483                           ; 4 bytes @ 0x34
   484  000094                     	ds	4
   485  000098                     vfpfcnvrt@cp:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x38
   489  000098                     	ds	2
   490  00009A                     vfpfcnvrt@done:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x3A
   494  00009A                     	ds	2
   495  00009C                     _vfpfcnvrt$1128:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x3C
   499  00009C                     	ds	2
   500  00009E                     _vfpfcnvrt$1129:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x3E
   504  00009E                     	ds	2
   505  0000A0                     _vfpfcnvrt$1150:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x40
   509  0000A0                     	ds	2
   510  0000A2                     vfpfcnvrt@f:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x42
   514  0000A2                     	ds	4
   515  0000A6                     vfpfcnvrt@ct:
   516                           	callstack 0
   517                           
   518                           ; 3 bytes @ 0x46
   519  0000A6                     	ds	3
   520  0000A9                     vfpfcnvrt@ll:
   521                           	callstack 0
   522                           
   523                           ; 8 bytes @ 0x49
   524  0000A9                     	ds	8
   525  0000B1                     vfpfcnvrt@vp:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x51
   529  0000B1                     	ds	2
   530  0000B3                     vfpfcnvrt@c:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x53
   534  0000B3                     	ds	1
   535  0000B4                     vfpfcnvrt@llu:
   536                           	callstack 0
   537                           
   538                           ; 8 bytes @ 0x54
   539  0000B4                     	ds	8
   540  0000BC                     ??_vsnprintf:
   541                           
   542                           ; 1 bytes @ 0x5C
   543  0000BC                     	ds	5
   544  0000C1                     _vsnprintf$936:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x61
   548  0000C1                     	ds	2
   549  0000C3                     vsnprintf@cnt:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x63
   553  0000C3                     	ds	2
   554  0000C5                     vsnprintf@f:
   555                           	callstack 0
   556                           
   557                           ; 6 bytes @ 0x65
   558  0000C5                     	ds	6
   559  0000CB                     ?_snprintf:
   560                           	callstack 0
   561  0000CB                     snprintf@s:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x6B
   565  0000CB                     	ds	2
   566  0000CD                     snprintf@n:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x6D
   570  0000CD                     	ds	2
   571  0000CF                     snprintf@fmt:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x6F
   575  0000CF                     	ds	8
   576  0000D7                     snprintf@ap:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x77
   580  0000D7                     	ds	2
   581                           
   582                           	psect	cstackCOMRAM
   583  000001                     __pcstackCOMRAM:
   584                           	callstack 0
   585  000001                     ?_strlen:
   586                           	callstack 0
   587  000001                     ?___fpclassifyf:
   588                           	callstack 0
   589  000001                     ?_isupper:
   590                           	callstack 0
   591  000001                     ?_isalpha:
   592                           	callstack 0
   593  000001                     ?_isdigit:
   594                           	callstack 0
   595  000001                     ?_strncmp:
   596                           	callstack 0
   597  000001                     ?_isspace:
   598                           	callstack 0
   599  000001                     ?_islower:
   600                           	callstack 0
   601  000001                     ?___wmul:
   602                           	callstack 0
   603  000001                     ?___awdiv:
   604                           	callstack 0
   605  000001                     ?___awmod:
   606                           	callstack 0
   607  000001                     ?___fladd:
   608                           	callstack 0
   609  000001                     ?___fldiv:
   610                           	callstack 0
   611  000001                     ?___flneg:
   612                           	callstack 0
   613  000001                     ?___fltol:
   614                           	callstack 0
   615  000001                     ?___xxtofl:
   616                           	callstack 0
   617  000001                     ?___aodiv:
   618                           	callstack 0
   619  000001                     ?___aomod:
   620                           	callstack 0
   621  000001                     ?___lodiv:
   622                           	callstack 0
   623  000001                     ?___lomod:
   624                           	callstack 0
   625  000001                     Lcd_Port@a:
   626                           	callstack 0
   627  000001                     ___wmul@multiplier:
   628                           	callstack 0
   629  000001                     ___awdiv@dividend:
   630                           	callstack 0
   631  000001                     ___awmod@dividend:
   632                           	callstack 0
   633  000001                     isalpha@c:
   634                           	callstack 0
   635  000001                     isdigit@c:
   636                           	callstack 0
   637  000001                     isspace@c:
   638                           	callstack 0
   639  000001                     isupper@c:
   640                           	callstack 0
   641  000001                     fputc@c:
   642                           	callstack 0
   643  000001                     strcpy@dest:
   644                           	callstack 0
   645  000001                     strlen@s:
   646                           	callstack 0
   647  000001                     strncmp@_l:
   648                           	callstack 0
   649  000001                     islower@c:
   650                           	callstack 0
   651  000001                     ___fleq@ff1:
   652                           	callstack 0
   653  000001                     ___flneg@f1:
   654                           	callstack 0
   655  000001                     ___fltol@f1:
   656                           	callstack 0
   657  000001                     ___fladd@b:
   658                           	callstack 0
   659  000001                     ___fldiv@b:
   660                           	callstack 0
   661  000001                     ___xxtofl@val:
   662                           	callstack 0
   663  000001                     ___fpclassifyf@x:
   664                           	callstack 0
   665  000001                     ___aodiv@dividend:
   666                           	callstack 0
   667  000001                     ___aomod@dividend:
   668                           	callstack 0
   669  000001                     ___lodiv@dividend:
   670                           	callstack 0
   671  000001                     ___lomod@dividend:
   672                           	callstack 0
   673                           
   674                           ; 8 bytes @ 0x0
   675  000001                     	ds	1
   676  000002                     ??_Lcd_Cmd:
   677  000002                     Lcd_Write_Char@temp:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x1
   681  000002                     	ds	1
   682  000003                     ??_isupper:
   683  000003                     ??_isalpha:
   684  000003                     ??_isdigit:
   685  000003                     ??_isspace:
   686  000003                     ??_islower:
   687  000003                     Lcd_Cmd@a:
   688                           	callstack 0
   689  000003                     Lcd_Write_Char@y:
   690                           	callstack 0
   691  000003                     ___wmul@multiplicand:
   692                           	callstack 0
   693  000003                     ___awdiv@divisor:
   694                           	callstack 0
   695  000003                     ___awmod@divisor:
   696                           	callstack 0
   697  000003                     fputc@fp:
   698                           	callstack 0
   699  000003                     strcpy@src:
   700                           	callstack 0
   701  000003                     strlen@a:
   702                           	callstack 0
   703  000003                     strncmp@_r:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x2
   707  000003                     	ds	1
   708  000004                     ??_Lcd_Init:
   709  000004                     Lcd_Set_Cursor@b:
   710                           	callstack 0
   711  000004                     Lcd_Write_Char@a:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x3
   715  000004                     	ds	1
   716  000005                     ??_fputc:
   717  000005                     ??___fpclassifyf:
   718  000005                     ??_strcpy:
   719  000005                     ??___fltol:
   720  000005                     ??___xxtofl:
   721  000005                     Lcd_Set_Cursor@a:
   722                           	callstack 0
   723  000005                     ___awdiv@counter:
   724                           	callstack 0
   725  000005                     ___awmod@counter:
   726                           	callstack 0
   727  000005                     Lcd_Write_String@a:
   728                           	callstack 0
   729  000005                     ___wmul@product:
   730                           	callstack 0
   731  000005                     strncmp@n:
   732                           	callstack 0
   733  000005                     ___fleq@ff2:
   734                           	callstack 0
   735  000005                     ___fladd@a:
   736                           	callstack 0
   737  000005                     ___fldiv@a:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x4
   741  000005                     	ds	1
   742  000006                     Lcd_Set_Cursor@z:
   743                           	callstack 0
   744  000006                     ___awdiv@sign:
   745                           	callstack 0
   746  000006                     ___awmod@sign:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x5
   750  000006                     	ds	1
   751  000007                     ??_strncmp:
   752  000007                     ??_Lcd_Write_String:
   753  000007                     ?_tolower:
   754                           	callstack 0
   755  000007                     ?_toupper:
   756                           	callstack 0
   757  000007                     Lcd_Set_Cursor@y:
   758                           	callstack 0
   759  000007                     _isspace$1315:
   760                           	callstack 0
   761  000007                     ___awdiv@quotient:
   762                           	callstack 0
   763  000007                     strcpy@s:
   764                           	callstack 0
   765  000007                     tolower@c:
   766                           	callstack 0
   767  000007                     toupper@c:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x6
   771  000007                     	ds	1
   772  000008                     ?_atoi:
   773                           	callstack 0
   774  000008                     Lcd_Set_Cursor@temp:
   775                           	callstack 0
   776  000008                     atoi@s:
   777                           	callstack 0
   778  000008                     strncmp@l:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x7
   782  000008                     	ds	1
   783  000009                     ??___fladd:
   784  000009                     ??___fldiv:
   785  000009                     ??_tolower:
   786  000009                     ??_toupper:
   787  000009                     ??___fleq:
   788  000009                     ___fltol@sign1:
   789                           	callstack 0
   790  000009                     ___xxtofl@sign:
   791                           	callstack 0
   792  000009                     Lcd_Write_String@i:
   793                           	callstack 0
   794  000009                     ___fpclassifyf@e:
   795                           	callstack 0
   796  000009                     strcpy@d:
   797                           	callstack 0
   798  000009                     ___aodiv@divisor:
   799                           	callstack 0
   800  000009                     ___aomod@divisor:
   801                           	callstack 0
   802  000009                     ___lodiv@divisor:
   803                           	callstack 0
   804  000009                     ___lomod@divisor:
   805                           	callstack 0
   806                           
   807                           ; 8 bytes @ 0x8
   808  000009                     	ds	1
   809  00000A                     ??_atoi:
   810  00000A                     ?_ctoa:
   811                           	callstack 0
   812  00000A                     ?_stoa:
   813                           	callstack 0
   814  00000A                     ___fltol@exp1:
   815                           	callstack 0
   816  00000A                     ___xxtofl@exp:
   817                           	callstack 0
   818  00000A                     ctoa@fp:
   819                           	callstack 0
   820  00000A                     stoa@fp:
   821                           	callstack 0
   822  00000A                     fputs@s:
   823                           	callstack 0
   824  00000A                     strncmp@r:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x9
   828  00000A                     	ds	1
   829  00000B                     ___xxtofl@arg:
   830                           	callstack 0
   831  00000B                     ___fpclassifyf@u:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0xA
   835  00000B                     	ds	1
   836  00000C                     ctoa@c:
   837                           	callstack 0
   838  00000C                     stoa@s:
   839                           	callstack 0
   840  00000C                     fputs@fp:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0xB
   844  00000C                     	ds	1
   845  00000D                     ??_ctoa:
   846  00000D                     ___fladd@signs:
   847                           	callstack 0
   848  00000D                     _tolower$1378:
   849                           	callstack 0
   850  00000D                     _toupper$1393:
   851                           	callstack 0
   852  00000D                     ___fldiv@rem:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0xC
   856  00000D                     	ds	1
   857  00000E                     ??_stoa:
   858  00000E                     ___fladd@aexp:
   859                           	callstack 0
   860  00000E                     fputs@c:
   861                           	callstack 0
   862  00000E                     ctoa@l:
   863                           	callstack 0
   864  00000E                     atoi@neg:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0xD
   868  00000E                     	ds	1
   869  00000F                     ?___flmul:
   870                           	callstack 0
   871  00000F                     ___fladd@bexp:
   872                           	callstack 0
   873  00000F                     fputs@i:
   874                           	callstack 0
   875  00000F                     ___flmul@b:
   876                           	callstack 0
   877  00000F                     stoa@nuls:
   878                           	callstack 0
   879                           
   880                           ; 7 bytes @ 0xE
   881  00000F                     	ds	1
   882  000010                     ___fladd@grs:
   883                           	callstack 0
   884  000010                     ctoa@w:
   885                           	callstack 0
   886  000010                     _atoi$1274:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0xF
   890  000010                     	ds	1
   891  000011                     ?_pad:
   892                           	callstack 0
   893  000011                     ___aodiv@counter:
   894                           	callstack 0
   895  000011                     ___aomod@counter:
   896                           	callstack 0
   897  000011                     ___lomod@counter:
   898                           	callstack 0
   899  000011                     ___fldiv@sign:
   900                           	callstack 0
   901  000011                     pad@fp:
   902                           	callstack 0
   903  000011                     ___lodiv@quotient:
   904                           	callstack 0
   905                           
   906                           ; 8 bytes @ 0x10
   907  000011                     	ds	1
   908  000012                     ___aodiv@sign:
   909                           	callstack 0
   910  000012                     ___aomod@sign:
   911                           	callstack 0
   912  000012                     ___fldiv@new_exp:
   913                           	callstack 0
   914  000012                     _atoi$1276:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x11
   918  000012                     	ds	1
   919  000013                     ?_abs:
   920                           	callstack 0
   921  000013                     pad@buf:
   922                           	callstack 0
   923  000013                     abs@a:
   924                           	callstack 0
   925  000013                     ___flmul@a:
   926                           	callstack 0
   927  000013                     ___aodiv@quotient:
   928                           	callstack 0
   929                           
   930                           ; 8 bytes @ 0x12
   931  000013                     	ds	1
   932  000014                     _atoi$1275:
   933                           	callstack 0
   934  000014                     ___fldiv@grs:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0x13
   938  000014                     	ds	1
   939  000015                     ??_abs:
   940  000015                     pad@p:
   941                           	callstack 0
   942  000015                     atoi@n:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x14
   946  000015                     	ds	1
   947  000016                     stoa@i:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x15
   951  000016                     	ds	1
   952  000017                     ??___flmul:
   953  000017                     ??_pad:
   954                           
   955                           ; 1 bytes @ 0x16
   956  000017                     	ds	1
   957  000018                     ___fldiv@bexp:
   958                           	callstack 0
   959  000018                     pad@i:
   960                           	callstack 0
   961  000018                     stoa@w:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x17
   965  000018                     	ds	1
   966  000019                     ___lodiv@counter:
   967                           	callstack 0
   968  000019                     ___fldiv@aexp:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x18
   972  000019                     	ds	1
   973  00001A                     ?_floorf:
   974                           	callstack 0
   975  00001A                     pad@w:
   976                           	callstack 0
   977  00001A                     stoa@cp:
   978                           	callstack 0
   979  00001A                     floorf@x:
   980                           	callstack 0
   981                           
   982                           ; 4 bytes @ 0x19
   983  00001A                     	ds	1
   984  00001B                     ___flmul@sign:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x1A
   988  00001B                     	ds	1
   989  00001C                     ?_dtoa:
   990                           	callstack 0
   991  00001C                     ?_otoa:
   992                           	callstack 0
   993  00001C                     ?_utoa:
   994                           	callstack 0
   995  00001C                     ?_xtoa:
   996                           	callstack 0
   997  00001C                     dtoa@fp:
   998                           	callstack 0
   999  00001C                     otoa@fp:
  1000                           	callstack 0
  1001  00001C                     stoa@p:
  1002                           	callstack 0
  1003  00001C                     utoa@fp:
  1004                           	callstack 0
  1005  00001C                     xtoa@fp:
  1006                           	callstack 0
  1007  00001C                     ___flmul@grs:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x1B
  1011  00001C                     	ds	2
  1012  00001E                     ??_floorf:
  1013  00001E                     stoa@l:
  1014                           	callstack 0
  1015  00001E                     dtoa@d:
  1016                           	callstack 0
  1017  00001E                     otoa@d:
  1018                           	callstack 0
  1019  00001E                     utoa@d:
  1020                           	callstack 0
  1021  00001E                     xtoa@d:
  1022                           	callstack 0
  1023                           
  1024                           ; 8 bytes @ 0x1D
  1025  00001E                     	ds	2
  1026  000020                     ___flmul@aexp:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x1F
  1030  000020                     	ds	1
  1031  000021                     ___flmul@bexp:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x20
  1035  000021                     	ds	1
  1036  000022                     ___flmul@prod:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x21
  1040  000022                     	ds	2
  1041  000024                     floorf@m:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x23
  1045  000024                     	ds	2
  1046  000026                     ??_dtoa:
  1047  000026                     ??_otoa:
  1048  000026                     ??_utoa:
  1049  000026                     xtoa@x:
  1050                           	callstack 0
  1051  000026                     ___flmul@temp:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x25
  1055  000026                     	ds	1
  1056  000027                     ??_xtoa:
  1057                           
  1058                           ; 1 bytes @ 0x26
  1059  000027                     	ds	1
  1060  000028                     ?___flsub:
  1061                           	callstack 0
  1062  000028                     floorf@e:
  1063                           	callstack 0
  1064  000028                     ___flge@ff1:
  1065                           	callstack 0
  1066  000028                     ___flsub@b:
  1067                           	callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x27
  1070  000028                     	ds	2
  1071  00002A                     floorf@u:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x29
  1075  00002A                     	ds	2
  1076  00002C                     ___flge@ff2:
  1077                           	callstack 0
  1078  00002C                     ___flsub@a:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x2B
  1082  00002C                     	ds	2
  1083  00002E                     _dtoa$1042:
  1084                           	callstack 0
  1085  00002E                     otoa@p:
  1086                           	callstack 0
  1087  00002E                     utoa@p:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x2D
  1091  00002E                     	ds	1
  1092  00002F                     _xtoa$1113:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x2E
  1096  00002F                     	ds	1
  1097  000030                     ??___flge:
  1098  000030                     dtoa@p:
  1099                           	callstack 0
  1100  000030                     otoa@t:
  1101                           	callstack 0
  1102  000030                     utoa@w:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x2F
  1106  000030                     	ds	1
  1107  000031                     _xtoa$1114:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x30
  1111  000031                     	ds	1
  1112  000032                     dtoa@w:
  1113                           	callstack 0
  1114  000032                     otoa@w:
  1115                           	callstack 0
  1116  000032                     utoa@n:
  1117                           	callstack 0
  1118                           
  1119                           ; 8 bytes @ 0x31
  1120  000032                     	ds	1
  1121  000033                     xtoa@p:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x32
  1125  000033                     	ds	1
  1126  000034                     ?_efgtoa:
  1127                           	callstack 0
  1128  000034                     dtoa@s:
  1129                           	callstack 0
  1130  000034                     efgtoa@fp:
  1131                           	callstack 0
  1132  000034                     otoa@n:
  1133                           	callstack 0
  1134                           
  1135                           ; 8 bytes @ 0x33
  1136  000034                     	ds	1
  1137  000035                     xtoa@w:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x34
  1141  000035                     	ds	1
  1142  000036                     efgtoa@f:
  1143                           	callstack 0
  1144  000036                     dtoa@n:
  1145                           	callstack 0
  1146                           
  1147                           ; 8 bytes @ 0x35
  1148  000036                     	ds	1
  1149  000037                     xtoa@n:
  1150                           	callstack 0
  1151                           
  1152                           ; 8 bytes @ 0x36
  1153  000037                     	ds	3
  1154  00003A                     efgtoa@c:
  1155                           	callstack 0
  1156  00003A                     utoa@i:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x39
  1160  00003A                     	ds	1
  1161  00003B                     ??_efgtoa:
  1162                           
  1163                           ; 1 bytes @ 0x3A
  1164  00003B                     	ds	1
  1165  00003C                     otoa@i:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x3B
  1169  00003C                     	ds	2
  1170  00003E                     dtoa@i:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x3D
  1174  00003E                     	ds	1
  1175  00003F                     xtoa@i:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x3E
  1179  00003F                     	ds	2
  1180  000041                     xtoa@c:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x40
  1184  000041                     	ds	2
  1185  000043                     ?_vfpfcnvrt:
  1186                           	callstack 0
  1187  000043                     vfpfcnvrt@fp:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x42
  1191  000043                     	ds	2
  1192  000045                     vfpfcnvrt@fmt:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x44
  1196  000045                     	ds	2
  1197  000047                     vfpfcnvrt@ap:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x46
  1201  000047                     	ds	2
  1202  000049                     ??_vfpfcnvrt:
  1203                           
  1204                           ; 1 bytes @ 0x48
  1205  000049                     	ds	4
  1206  00004D                     ?_vfprintf:
  1207                           	callstack 0
  1208  00004D                     vfprintf@fp:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x4C
  1212  00004D                     	ds	2
  1213  00004F                     vfprintf@fmt:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x4E
  1217  00004F                     	ds	2
  1218  000051                     vfprintf@ap:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x50
  1222  000051                     	ds	2
  1223  000053                     vfprintf@cfmt:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x52
  1227  000053                     	ds	2
  1228  000055                     ?_vsnprintf:
  1229                           	callstack 0
  1230  000055                     vsnprintf@s:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x54
  1234  000055                     	ds	2
  1235  000057                     vsnprintf@n:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x56
  1239  000057                     	ds	2
  1240  000059                     vsnprintf@fmt:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x58
  1244  000059                     	ds	2
  1245  00005B                     vsnprintf@ap:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x5A
  1249  00005B                     	ds	2
  1250  00005D                     ??_main:
  1251                           
  1252                           ; 1 bytes @ 0x5C
  1253  00005D                     	ds	2
  1254                           
  1255 ;;
  1256 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1257 ;;
  1258 ;; *************** function _main *****************
  1259 ;; Defined at:
  1260 ;;		line 20 in file "main.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  2   83[None  ] int 
  1267 ;; Registers used:
  1268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1274 ;;      Params:         0       0       0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0       0       0
  1276 ;;      Temps:          2       0       0       0       0       0       0
  1277 ;;      Totals:         2       0       0       0       0       0       0
  1278 ;;Total ram usage:        2 bytes
  1279 ;; Hardware stack levels required when called:    9
  1280 ;; This function calls:
  1281 ;;		_Lcd_Init
  1282 ;;		_Lcd_Set_Cursor
  1283 ;;		_Lcd_Write_String
  1284 ;;		___flmul
  1285 ;;		___xxtofl
  1286 ;;		_snprintf
  1287 ;; This function is called by:
  1288 ;;		Startup code after reset
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text0
  1293  003DBE                     __ptext0:
  1294                           	callstack 0
  1295  003DBE                     _main:
  1296                           	callstack 22
  1297  003DBE  0E00               	movlw	0
  1298  003DC0  010F               	movlb	15	; () banked
  1299  003DC2  6F3B               	movwf	59,b	;volatile
  1300                           
  1301                           ;main.c: 22:     TRISD = 0;
  1302  003DC4  0E00               	movlw	0
  1303  003DC6  6E95               	movwf	149,c	;volatile
  1304                           
  1305                           ;main.c: 23:     OSCCONbits.IRCF = 0b111;
  1306  003DC8  0E70               	movlw	112
  1307  003DCA  12D3               	iorwf	211,f,c	;volatile
  1308  003DCC                     
  1309                           ; BSR set to: 15
  1310                           ;main.c: 24:     TRISAbits.RA0 = 1;
  1311  003DCC  8092               	bsf	146,0,c	;volatile
  1312  003DCE                     
  1313                           ; BSR set to: 15
  1314                           ;main.c: 25:     ANSELAbits.ANSA0 = 1;
  1315  003DCE  8138               	bsf	56,0,b	;volatile
  1316                           
  1317                           ;main.c: 26:     ADCON0 = 0x00;
  1318  003DD0  0E00               	movlw	0
  1319  003DD2  6EC2               	movwf	194,c	;volatile
  1320  003DD4                     
  1321                           ; BSR set to: 15
  1322                           ;main.c: 27:     ADCON0bits.ADON = 1;
  1323  003DD4  80C2               	bsf	194,0,c	;volatile
  1324                           
  1325                           ;main.c: 28:     ADCON1bits.PVCFG = 0b00;
  1326  003DD6  0EF3               	movlw	-13
  1327  003DD8  16C1               	andwf	193,f,c	;volatile
  1328                           
  1329                           ;main.c: 29:     ADCON1bits.NVCFG = 0x00;
  1330  003DDA  0EFC               	movlw	-4
  1331  003DDC  16C1               	andwf	193,f,c	;volatile
  1332                           
  1333                           ;main.c: 30:     ADCON2bits.ACQT = 0b010;
  1334  003DDE  50C0               	movf	192,w,c	;volatile
  1335  003DE0  0BC7               	andlw	-57
  1336  003DE2  0910               	iorlw	16
  1337  003DE4  6EC0               	movwf	192,c	;volatile
  1338  003DE6                     
  1339                           ; BSR set to: 15
  1340                           ;main.c: 31:     ADCON2bits.ADFM = 1;
  1341  003DE6  8EC0               	bsf	192,7,c	;volatile
  1342                           
  1343                           ;main.c: 32:     ADCON2bits.ADCS = 0b101;
  1344  003DE8  50C0               	movf	192,w,c	;volatile
  1345  003DEA  0BF8               	andlw	-8
  1346  003DEC  0905               	iorlw	5
  1347  003DEE  6EC0               	movwf	192,c	;volatile
  1348  003DF0                     
  1349                           ; BSR set to: 15
  1350                           ;main.c: 33:     Lcd_Init();
  1351  003DF0  ECAF  F02A         	call	_Lcd_Init	;wreg free
  1352  003DF4                     
  1353                           ;main.c: 34:     Lcd_Set_Cursor(1,1);
  1354  003DF4  0E01               	movlw	1
  1355  003DF6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1356  003DF8  0E01               	movlw	1
  1357  003DFA  ECE9  F02A         	call	_Lcd_Set_Cursor
  1358  003DFE                     
  1359                           ;main.c: 35:     Lcd_Write_String("voltage : ");
  1360  003DFE  0E01               	movlw	low STR_1
  1361  003E00  6E05               	movwf	Lcd_Write_String@a^0,c
  1362  003E02  0E06               	movlw	high STR_1
  1363  003E04  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1364  003E06  EC70  F02A         	call	_Lcd_Write_String	;wreg free
  1365  003E0A                     
  1366                           ;main.c: 36:     Lcd_Set_Cursor(2,1);
  1367  003E0A  0E01               	movlw	1
  1368  003E0C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1369  003E0E  0E02               	movlw	2
  1370  003E10  ECE9  F02A         	call	_Lcd_Set_Cursor
  1371  003E14                     
  1372                           ;main.c: 37:     Lcd_Write_String("current : ");
  1373  003E14  0E0C               	movlw	low STR_2
  1374  003E16  6E05               	movwf	Lcd_Write_String@a^0,c
  1375  003E18  0E06               	movlw	high STR_2
  1376  003E1A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1377  003E1C  EC70  F02A         	call	_Lcd_Write_String	;wreg free
  1378  003E20                     
  1379                           ;main.c: 38:     Lcd_Set_Cursor(1,16);
  1380  003E20  0E10               	movlw	16
  1381  003E22  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1382  003E24  0E01               	movlw	1
  1383  003E26  ECE9  F02A         	call	_Lcd_Set_Cursor
  1384  003E2A                     
  1385                           ;main.c: 39:     Lcd_Write_String("V");
  1386  003E2A  0E60               	movlw	low STR_3
  1387  003E2C  6E05               	movwf	Lcd_Write_String@a^0,c
  1388  003E2E  0E06               	movlw	high STR_3
  1389  003E30  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1390  003E32  EC70  F02A         	call	_Lcd_Write_String	;wreg free
  1391  003E36                     
  1392                           ;main.c: 40:     Lcd_Set_Cursor(2,16);
  1393  003E36  0E10               	movlw	16
  1394  003E38  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1395  003E3A  0E02               	movlw	2
  1396  003E3C  ECE9  F02A         	call	_Lcd_Set_Cursor
  1397  003E40                     
  1398                           ;main.c: 41:     Lcd_Write_String("A");
  1399  003E40  0E5E               	movlw	low STR_4
  1400  003E42  6E05               	movwf	Lcd_Write_String@a^0,c
  1401  003E44  0E06               	movlw	high STR_4
  1402  003E46  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1403  003E48  EC70  F02A         	call	_Lcd_Write_String	;wreg free
  1404  003E4C                     l5767:
  1405                           
  1406                           ;main.c: 43:         ADCON0bits.GO = 1;
  1407  003E4C  82C2               	bsf	194,1,c	;volatile
  1408                           
  1409                           ;main.c: 44:         while(ADCON0bits.GO == 1){
  1410  003E4E  EFBE  F01F         	goto	l5791
  1411  003E52                     l5769:
  1412                           
  1413                           ;main.c: 45:         result = 0;
  1414  003E52  0E00               	movlw	0
  1415  003E54  0100               	movlb	0	; () banked
  1416  003E56  6FFA               	movwf	(_result+1)& (0+255),b
  1417  003E58  0E00               	movlw	0
  1418  003E5A  6FF9               	movwf	_result& (0+255),b
  1419  003E5C                     
  1420                           ; BSR set to: 0
  1421                           ;main.c: 46:         result = ADRESL;
  1422  003E5C  CFC3 F0F9          	movff	4035,_result	;volatile
  1423  003E60  6BFA               	clrf	(_result+1)& (0+255),b
  1424  003E62                     
  1425                           ; BSR set to: 0
  1426                           ;main.c: 47:         result = result | (ADRESH << 8) ;
  1427  003E62  50C4               	movf	196,w,c	;volatile
  1428  003E64  6E5E               	movwf	(??_main+1)^0,c
  1429  003E66  6A5D               	clrf	??_main^0,c
  1430  003E68  51F9               	movf	_result& (0+255),w,b
  1431  003E6A  105D               	iorwf	??_main^0,w,c
  1432  003E6C  6FF9               	movwf	_result& (0+255),b
  1433  003E6E  51FA               	movf	(_result+1)& (0+255),w,b
  1434  003E70  105E               	iorwf	(??_main+1)^0,w,c
  1435  003E72  6FFA               	movwf	(_result+1)& (0+255),b
  1436  003E74                     
  1437                           ; BSR set to: 0
  1438                           ;main.c: 48:         voltage = (0.0049)*result;
  1439  003E74  C0F9  F001         	movff	_result,___xxtofl@val
  1440  003E78  C0FA  F002         	movff	_result+1,___xxtofl@val+1
  1441  003E7C  0E00               	movlw	0
  1442  003E7E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1443  003E80  0EFF               	movlw	-1
  1444  003E82  6E03               	movwf	(___xxtofl@val+2)^0,c
  1445  003E84  6E04               	movwf	(___xxtofl@val+3)^0,c
  1446  003E86  0E01               	movlw	1
  1447  003E88  ECD3  F020         	call	___xxtofl
  1448  003E8C  C001  F00F         	movff	?___xxtofl,___flmul@b
  1449  003E90  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1450  003E94  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1451  003E98  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1452  003E9C  0E2E               	movlw	46
  1453  003E9E  6E13               	movwf	___flmul@a^0,c
  1454  003EA0  0E90               	movlw	144
  1455  003EA2  6E14               	movwf	(___flmul@a+1)^0,c
  1456  003EA4  0EA0               	movlw	160
  1457  003EA6  6E15               	movwf	(___flmul@a+2)^0,c
  1458  003EA8  0E3B               	movlw	59
  1459  003EAA  6E16               	movwf	(___flmul@a+3)^0,c
  1460  003EAC  EC13  F016         	call	___flmul	;wreg free
  1461  003EB0  C00F  F0E5         	movff	?___flmul,_voltage
  1462  003EB4  C010  F0E6         	movff	?___flmul+1,_voltage+1
  1463  003EB8  C011  F0E7         	movff	?___flmul+2,_voltage+2
  1464  003EBC  C012  F0E8         	movff	?___flmul+3,_voltage+3
  1465  003EC0                     
  1466                           ;main.c: 49:         current = voltage * 0.001;
  1467  003EC0  C0E5  F00F         	movff	_voltage,___flmul@b
  1468  003EC4  C0E6  F010         	movff	_voltage+1,___flmul@b+1
  1469  003EC8  C0E7  F011         	movff	_voltage+2,___flmul@b+2
  1470  003ECC  C0E8  F012         	movff	_voltage+3,___flmul@b+3
  1471  003ED0  0E6F               	movlw	111
  1472  003ED2  6E13               	movwf	___flmul@a^0,c
  1473  003ED4  0E12               	movlw	18
  1474  003ED6  6E14               	movwf	(___flmul@a+1)^0,c
  1475  003ED8  0E83               	movlw	131
  1476  003EDA  6E15               	movwf	(___flmul@a+2)^0,c
  1477  003EDC  0E3A               	movlw	58
  1478  003EDE  6E16               	movwf	(___flmul@a+3)^0,c
  1479  003EE0  EC13  F016         	call	___flmul	;wreg free
  1480  003EE4  C00F  F0E1         	movff	?___flmul,_current
  1481  003EE8  C010  F0E2         	movff	?___flmul+1,_current+1
  1482  003EEC  C011  F0E3         	movff	?___flmul+2,_current+2
  1483  003EF0  C012  F0E4         	movff	?___flmul+3,_current+3
  1484  003EF4                     
  1485                           ;main.c: 50:         snprintf(v, 6, "%f", voltage);
  1486  003EF4  0EF3               	movlw	low _v
  1487  003EF6  0100               	movlb	0	; () banked
  1488  003EF8  6FCB               	movwf	snprintf@s& (0+255),b
  1489  003EFA  0E00               	movlw	high _v
  1490  003EFC  6FCC               	movwf	(snprintf@s+1)& (0+255),b
  1491  003EFE  0E00               	movlw	0
  1492  003F00  6FCE               	movwf	(snprintf@n+1)& (0+255),b
  1493  003F02  0E06               	movlw	6
  1494  003F04  6FCD               	movwf	snprintf@n& (0+255),b
  1495  003F06  0E5B               	movlw	low STR_5
  1496  003F08  6FCF               	movwf	snprintf@fmt& (0+255),b
  1497  003F0A  0E06               	movlw	high STR_5
  1498  003F0C  6FD0               	movwf	(snprintf@fmt+1)& (0+255),b
  1499  003F0E  C0E5  F0D1         	movff	_voltage,?_snprintf+6
  1500  003F12  C0E6  F0D2         	movff	_voltage+1,?_snprintf+7
  1501  003F16  C0E7  F0D3         	movff	_voltage+2,?_snprintf+8
  1502  003F1A  C0E8  F0D4         	movff	_voltage+3,?_snprintf+9
  1503  003F1E  EC7C  F02D         	call	_snprintf	;wreg free
  1504  003F22                     
  1505                           ;main.c: 51:         Lcd_Set_Cursor(1,10);
  1506  003F22  0E0A               	movlw	10
  1507  003F24  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1508  003F26  0E01               	movlw	1
  1509  003F28  ECE9  F02A         	call	_Lcd_Set_Cursor
  1510  003F2C                     
  1511                           ;main.c: 52:         Lcd_Write_String(v);
  1512  003F2C  0EF3               	movlw	low _v
  1513  003F2E  6E05               	movwf	Lcd_Write_String@a^0,c
  1514  003F30  0E00               	movlw	high _v
  1515  003F32  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1516  003F34  EC70  F02A         	call	_Lcd_Write_String	;wreg free
  1517  003F38                     
  1518                           ;main.c: 53:         snprintf(i, 6, "%f", current);
  1519  003F38  0E50               	movlw	low _i
  1520  003F3A  0100               	movlb	0	; () banked
  1521  003F3C  6FCB               	movwf	snprintf@s& (0+255),b
  1522  003F3E  0E01               	movlw	high _i
  1523  003F40  6FCC               	movwf	(snprintf@s+1)& (0+255),b
  1524  003F42  0E00               	movlw	0
  1525  003F44  6FCE               	movwf	(snprintf@n+1)& (0+255),b
  1526  003F46  0E06               	movlw	6
  1527  003F48  6FCD               	movwf	snprintf@n& (0+255),b
  1528  003F4A  0E5B               	movlw	low STR_5
  1529  003F4C  6FCF               	movwf	snprintf@fmt& (0+255),b
  1530  003F4E  0E06               	movlw	high STR_5
  1531  003F50  6FD0               	movwf	(snprintf@fmt+1)& (0+255),b
  1532  003F52  C0E1  F0D1         	movff	_current,?_snprintf+6
  1533  003F56  C0E2  F0D2         	movff	_current+1,?_snprintf+7
  1534  003F5A  C0E3  F0D3         	movff	_current+2,?_snprintf+8
  1535  003F5E  C0E4  F0D4         	movff	_current+3,?_snprintf+9
  1536  003F62  EC7C  F02D         	call	_snprintf	;wreg free
  1537  003F66                     
  1538                           ;main.c: 54:         Lcd_Set_Cursor(2,10);
  1539  003F66  0E0A               	movlw	10
  1540  003F68  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1541  003F6A  0E02               	movlw	2
  1542  003F6C  ECE9  F02A         	call	_Lcd_Set_Cursor
  1543  003F70                     
  1544                           ;main.c: 55:         Lcd_Write_String(i);
  1545  003F70  0E50               	movlw	low _i
  1546  003F72  6E05               	movwf	Lcd_Write_String@a^0,c
  1547  003F74  0E01               	movlw	high _i
  1548  003F76  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1549  003F78  EC70  F02A         	call	_Lcd_Write_String	;wreg free
  1550  003F7C                     l5791:
  1551                           
  1552                           ;main.c: 44:         while(ADCON0bits.GO == 1){
  1553  003F7C  B2C2               	btfsc	194,1,c	;volatile
  1554  003F7E  EFC3  F01F         	goto	u7691
  1555  003F82  EFC5  F01F         	goto	u7690
  1556  003F86                     u7691:
  1557  003F86  EF29  F01F         	goto	l5769
  1558  003F8A                     u7690:
  1559  003F8A                     
  1560                           ;main.c: 58:         PORTDbits.RD7 = ~PORTDbits.RD7;
  1561  003F8A  BE83               	btfsc	131,7,c	;volatile
  1562  003F8C  EFCA  F01F         	goto	u7701
  1563  003F90  EFCD  F01F         	goto	u7700
  1564  003F94                     u7701:
  1565  003F94  0E01               	movlw	1
  1566  003F96  EFCE  F01F         	goto	u7706
  1567  003F9A                     u7700:
  1568  003F9A  0E00               	movlw	0
  1569  003F9C                     u7706:
  1570  003F9C  0AFF               	xorlw	255
  1571  003F9E  6E5D               	movwf	??_main^0,c
  1572  003FA0  325D               	rrcf	??_main^0,f,c
  1573  003FA2  325D               	rrcf	??_main^0,f,c
  1574  003FA4  5083               	movf	131,w,c	;volatile
  1575  003FA6  185D               	xorwf	??_main^0,w,c
  1576  003FA8  0B7F               	andlw	-129
  1577  003FAA  185D               	xorwf	??_main^0,w,c
  1578  003FAC  6E83               	movwf	131,c	;volatile
  1579  003FAE  EF26  F01F         	goto	l5767
  1580  003FB2  EF00  F000         	goto	start
  1581  003FB6                     __end_of_main:
  1582                           	callstack 0
  1583                           
  1584 ;; *************** function _snprintf *****************
  1585 ;; Defined at:
  1586 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\snprintf.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  s               2  107[BANK0 ] PTR unsigned char 
  1589 ;;		 -> i(6), v(6), 
  1590 ;;  n               2  109[BANK0 ] unsigned int 
  1591 ;;  fmt             2  111[BANK0 ] PTR const unsigned char 
  1592 ;;		 -> STR_6(3), STR_5(3), 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  ap              2  119[BANK0 ] PTR void [1]
  1595 ;;		 -> ?_snprintf(2), 
  1596 ;;  ret             2    0        int 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  2  107[BANK0 ] int 
  1599 ;; Registers used:
  1600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1606 ;;      Params:         0      10       0       0       0       0       0
  1607 ;;      Locals:         0       4       0       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0
  1609 ;;      Totals:         0      14       0       0       0       0       0
  1610 ;;Total ram usage:       14 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    8
  1613 ;; This function calls:
  1614 ;;		_vsnprintf
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text1
  1621  005AF8                     __ptext1:
  1622                           	callstack 0
  1623  005AF8                     _snprintf:
  1624                           	callstack 22
  1625  005AF8  0ED1               	movlw	low (?_snprintf+6)
  1626  005AFA  0100               	movlb	0	; () banked
  1627  005AFC  6FD7               	movwf	snprintf@ap& (0+255),b
  1628  005AFE  0E00               	movlw	high (?_snprintf+6)
  1629  005B00  6FD8               	movwf	(snprintf@ap+1)& (0+255),b
  1630  005B02                     
  1631                           ; BSR set to: 0
  1632  005B02  C0CB  F055         	movff	snprintf@s,vsnprintf@s
  1633  005B06  C0CC  F056         	movff	snprintf@s+1,vsnprintf@s+1
  1634  005B0A  C0CD  F057         	movff	snprintf@n,vsnprintf@n
  1635  005B0E  C0CE  F058         	movff	snprintf@n+1,vsnprintf@n+1
  1636  005B12  C0CF  F059         	movff	snprintf@fmt,vsnprintf@fmt
  1637  005B16  C0D0  F05A         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  1638  005B1A  0ED7               	movlw	low snprintf@ap
  1639  005B1C  6E5B               	movwf	vsnprintf@ap^0,c
  1640  005B1E  0E00               	movlw	high snprintf@ap
  1641  005B20  6E5C               	movwf	(vsnprintf@ap+1)^0,c
  1642  005B22  ECAE  F024         	call	_vsnprintf	;wreg free
  1643  005B26  0012               	return		;funcret
  1644  005B28                     __end_of_snprintf:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _vsnprintf *****************
  1648 ;; Defined at:
  1649 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_vsnprintf.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  s               2   84[COMRAM] PTR unsigned char 
  1652 ;;		 -> i(6), v(6), 
  1653 ;;  n               2   86[COMRAM] unsigned int 
  1654 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  1655 ;;		 -> STR_6(3), STR_5(3), 
  1656 ;;  ap              2   90[COMRAM] PTR PTR void 
  1657 ;;		 -> snprintf@ap(2), 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  f               6  101[BANK0 ] struct _IO_FILE
  1660 ;;  cnt             2   99[BANK0 ] int 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  2   84[COMRAM] int 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1670 ;;      Params:         8       0       0       0       0       0       0
  1671 ;;      Locals:         0      10       0       0       0       0       0
  1672 ;;      Temps:          0       5       0       0       0       0       0
  1673 ;;      Totals:         8      15       0       0       0       0       0
  1674 ;;Total ram usage:       23 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    7
  1677 ;; This function calls:
  1678 ;;		_vfprintf
  1679 ;; This function is called by:
  1680 ;;		_snprintf
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text2
  1685  00495C                     __ptext2:
  1686                           	callstack 0
  1687  00495C                     _vsnprintf:
  1688                           	callstack 22
  1689  00495C  0E80               	movlw	128
  1690  00495E  5C58               	subwf	(vsnprintf@n+1)^0,w,c
  1691  004960  A0D8               	btfss	status,0,c
  1692  004962  EFB5  F024         	goto	u7491
  1693  004966  EFB7  F024         	goto	u7490
  1694  00496A                     u7491:
  1695  00496A  EFC0  F024         	goto	l5605
  1696  00496E                     u7490:
  1697  00496E  0E00               	movlw	0
  1698  004970  0100               	movlb	0	; () banked
  1699  004972  6FF2               	movwf	(_errno+1)& (0+255),b
  1700  004974  0E4B               	movlw	75
  1701  004976  6FF1               	movwf	_errno& (0+255),b
  1702  004978                     
  1703                           ; BSR set to: 0
  1704  004978  6855               	setf	?_vsnprintf^0,c
  1705  00497A  6856               	setf	(?_vsnprintf+1)^0,c
  1706  00497C  EF3B  F025         	goto	l779
  1707  004980                     l5605:
  1708  004980  C055  F0C5         	movff	vsnprintf@s,vsnprintf@f
  1709  004984  C056  F0C6         	movff	vsnprintf@s+1,vsnprintf@f+1
  1710  004988  5058               	movf	(vsnprintf@n+1)^0,w,c
  1711  00498A  E109               	bnz	u7500
  1712  00498C  0E02               	movlw	2
  1713  00498E  5C57               	subwf	vsnprintf@n^0,w,c
  1714  004990  A0D8               	btfss	status,0,c
  1715  004992  EFCD  F024         	goto	u7501
  1716  004996  EFCF  F024         	goto	u7500
  1717  00499A                     u7501:
  1718  00499A  EFDC  F024         	goto	l5611
  1719  00499E                     u7500:
  1720  00499E  0EFF               	movlw	255
  1721  0049A0  2457               	addwf	vsnprintf@n^0,w,c
  1722  0049A2  0100               	movlb	0	; () banked
  1723  0049A4  6FC9               	movwf	(vsnprintf@f+4)& (0+255),b
  1724  0049A6  0EFF               	movlw	255
  1725  0049A8  2058               	addwfc	(vsnprintf@n+1)^0,w,c
  1726  0049AA  6FCA               	movwf	(vsnprintf@f+5)& (0+255),b
  1727  0049AC                     
  1728                           ; BSR set to: 0
  1729  0049AC  0E00               	movlw	0
  1730  0049AE  6FC8               	movwf	(vsnprintf@f+3)& (0+255),b
  1731  0049B0  0E00               	movlw	0
  1732  0049B2  6FC7               	movwf	(vsnprintf@f+2)& (0+255),b
  1733  0049B4  EFE5  F024         	goto	l5613
  1734  0049B8                     l5611:
  1735  0049B8  0E00               	movlw	0
  1736  0049BA  0100               	movlb	0	; () banked
  1737  0049BC  6FCA               	movwf	(vsnprintf@f+5)& (0+255),b
  1738  0049BE  0E01               	movlw	1
  1739  0049C0  6FC9               	movwf	(vsnprintf@f+4)& (0+255),b
  1740  0049C2  0E00               	movlw	0
  1741  0049C4  6FC8               	movwf	(vsnprintf@f+3)& (0+255),b
  1742  0049C6  0E01               	movlw	1
  1743  0049C8  6FC7               	movwf	(vsnprintf@f+2)& (0+255),b
  1744  0049CA                     l5613:
  1745                           
  1746                           ; BSR set to: 0
  1747  0049CA  0EC5               	movlw	low vsnprintf@f
  1748  0049CC  6E4D               	movwf	vfprintf@fp^0,c
  1749  0049CE  0E00               	movlw	high vsnprintf@f
  1750  0049D0  6E4E               	movwf	(vfprintf@fp+1)^0,c
  1751  0049D2  C059  F04F         	movff	vsnprintf@fmt,vfprintf@fmt
  1752  0049D6  C05A  F050         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  1753  0049DA  C05B  F051         	movff	vsnprintf@ap,vfprintf@ap
  1754  0049DE  C05C  F052         	movff	vsnprintf@ap+1,vfprintf@ap+1
  1755  0049E2  EC1C  F02B         	call	_vfprintf	;wreg free
  1756  0049E6  C04D  F0C3         	movff	?_vfprintf,vsnprintf@cnt
  1757  0049EA  C04E  F0C4         	movff	?_vfprintf+1,vsnprintf@cnt+1
  1758  0049EE  5057               	movf	vsnprintf@n^0,w,c
  1759  0049F0  1058               	iorwf	(vsnprintf@n+1)^0,w,c
  1760  0049F2  B4D8               	btfsc	status,2,c
  1761  0049F4  EFFE  F024         	goto	u7511
  1762  0049F8  EF00  F025         	goto	u7510
  1763  0049FC                     u7511:
  1764  0049FC  EF37  F025         	goto	l5625
  1765  004A00                     u7510:
  1766  004A00  0100               	movlb	0	; () banked
  1767  004A02  BFC4               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  1768  004A04  EF06  F025         	goto	u7521
  1769  004A08  EF08  F025         	goto	u7520
  1770  004A0C                     u7521:
  1771  004A0C  EF37  F025         	goto	l5625
  1772  004A10                     u7520:
  1773  004A10                     
  1774                           ; BSR set to: 0
  1775  004A10  0EFF               	movlw	255
  1776  004A12  6FBC               	movwf	??_vsnprintf& (0+255),b
  1777  004A14  0EFF               	movlw	255
  1778  004A16  6FBD               	movwf	(??_vsnprintf+1)& (0+255),b
  1779  004A18  C057  F0BE         	movff	vsnprintf@n,??_vsnprintf+2
  1780  004A1C  C058  F0BF         	movff	vsnprintf@n+1,??_vsnprintf+3
  1781  004A20  51BC               	movf	??_vsnprintf& (0+255),w,b
  1782  004A22  27BE               	addwf	(??_vsnprintf+2)& (0+255),f,b
  1783  004A24  51BD               	movf	(??_vsnprintf+1)& (0+255),w,b
  1784  004A26  23BF               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  1785  004A28  51BE               	movf	(??_vsnprintf+2)& (0+255),w,b
  1786  004A2A  5DC3               	subwf	vsnprintf@cnt& (0+255),w,b
  1787  004A2C  51C4               	movf	(vsnprintf@cnt+1)& (0+255),w,b
  1788  004A2E  0A80               	xorlw	128
  1789  004A30  6FC0               	movwf	(??_vsnprintf+4)& (0+255),b
  1790  004A32  51BF               	movf	(??_vsnprintf+3)& (0+255),w,b
  1791  004A34  0A80               	xorlw	128
  1792  004A36  59C0               	subwfb	(??_vsnprintf+4)& (0+255),w,b
  1793  004A38  A0D8               	btfss	status,0,c
  1794  004A3A  EF21  F025         	goto	u7531
  1795  004A3E  EF23  F025         	goto	u7530
  1796  004A42                     u7531:
  1797  004A42  EF2B  F025         	goto	l784
  1798  004A46                     u7530:
  1799  004A46                     
  1800                           ; BSR set to: 0
  1801  004A46  0EFF               	movlw	255
  1802  004A48  2457               	addwf	vsnprintf@n^0,w,c
  1803  004A4A  6FC1               	movwf	_vsnprintf$936& (0+255),b
  1804  004A4C  0EFF               	movlw	255
  1805  004A4E  2058               	addwfc	(vsnprintf@n+1)^0,w,c
  1806  004A50  6FC2               	movwf	(_vsnprintf$936+1)& (0+255),b
  1807  004A52  EF2F  F025         	goto	l5623
  1808  004A56                     l784:
  1809                           
  1810                           ; BSR set to: 0
  1811  004A56  C0C3  F0C1         	movff	vsnprintf@cnt,_vsnprintf$936
  1812  004A5A  C0C4  F0C2         	movff	vsnprintf@cnt+1,_vsnprintf$936+1
  1813  004A5E                     l5623:
  1814                           
  1815                           ; BSR set to: 0
  1816  004A5E  51C1               	movf	_vsnprintf$936& (0+255),w,b
  1817  004A60  2455               	addwf	vsnprintf@s^0,w,c
  1818  004A62  6ED9               	movwf	fsr2l,c
  1819  004A64  51C2               	movf	(_vsnprintf$936+1)& (0+255),w,b
  1820  004A66  2056               	addwfc	(vsnprintf@s+1)^0,w,c
  1821  004A68  6EDA               	movwf	fsr2h,c
  1822  004A6A  0E00               	movlw	0
  1823  004A6C  6EDF               	movwf	indf2,c
  1824  004A6E                     l5625:
  1825  004A6E  C0C3  F055         	movff	vsnprintf@cnt,?_vsnprintf
  1826  004A72  C0C4  F056         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  1827  004A76                     l779:
  1828  004A76  0012               	return		;funcret
  1829  004A78                     __end_of_vsnprintf:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function _vfprintf *****************
  1833 ;; Defined at:
  1834 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  fp              2   76[COMRAM] PTR struct _IO_FILE
  1837 ;;		 -> vsnprintf@f(6), 
  1838 ;;  fmt             2   78[COMRAM] PTR const unsigned char 
  1839 ;;		 -> STR_6(3), STR_5(3), 
  1840 ;;  ap              2   80[COMRAM] PTR PTR void 
  1841 ;;		 -> snprintf@ap(2), 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  1844 ;;		 -> STR_6(3), STR_5(3), 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  2   76[COMRAM] int 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1854 ;;      Params:         6       0       0       0       0       0       0
  1855 ;;      Locals:         2       0       0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0
  1857 ;;      Totals:         8       0       0       0       0       0       0
  1858 ;;Total ram usage:        8 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    6
  1861 ;; This function calls:
  1862 ;;		_vfpfcnvrt
  1863 ;; This function is called by:
  1864 ;;		_vsnprintf
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text3
  1869  005638                     __ptext3:
  1870                           	callstack 0
  1871  005638                     _vfprintf:
  1872                           	callstack 22
  1873  005638                     
  1874                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1875  005638  C04F  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  1876  00563C  C050  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1877  005640                     
  1878                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1879  005640  0E00               	movlw	0
  1880  005642  0100               	movlb	0	; () banked
  1881  005644  6FEA               	movwf	(_nout+1)& (0+255),b
  1882  005646  0E00               	movlw	0
  1883  005648  6FE9               	movwf	_nout& (0+255),b
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1886  00564A  EF3A  F02B         	goto	l5565
  1887  00564E                     l5563:
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1891  00564E  C04D  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1892  005652  C04E  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1893  005656  0E53               	movlw	low vfprintf@cfmt
  1894  005658  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1895  00565A  0E00               	movlw	high vfprintf@cfmt
  1896  00565C  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1897  00565E  C051  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1898  005662  C052  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1899  005666  EC32  F003         	call	_vfpfcnvrt	;wreg free
  1900  00566A  5043               	movf	?_vfpfcnvrt^0,w,c
  1901  00566C  0100               	movlb	0	; () banked
  1902  00566E  27E9               	addwf	_nout& (0+255),f,b
  1903  005670  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1904  005672  23EA               	addwfc	(_nout+1)& (0+255),f,b
  1905  005674                     l5565:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1909  005674  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  1910  005678  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1911  00567C                     	if	0	;tblptru may be non-zero
  1912  00567C                     	endif
  1913  00567C                     	if	0	;tblptru may be non-zero
  1914  00567C                     	endif
  1915  00567C  0008               	tblrd		*
  1916  00567E  50F5               	movf	tablat,w,c
  1917  005680  0900               	iorlw	0
  1918  005682  A4D8               	btfss	status,2,c
  1919  005684  EF46  F02B         	goto	u7481
  1920  005688  EF48  F02B         	goto	u7480
  1921  00568C                     u7481:
  1922  00568C  EF27  F02B         	goto	l5563
  1923  005690                     u7480:
  1924  005690                     
  1925                           ; BSR set to: 0
  1926                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1927  005690  C0E9  F04D         	movff	_nout,?_vfprintf
  1928  005694  C0EA  F04E         	movff	_nout+1,?_vfprintf+1
  1929  005698                     
  1930                           ; BSR set to: 0
  1931  005698  0012               	return		;funcret
  1932  00569A                     __end_of_vfprintf:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function _vfpfcnvrt *****************
  1936 ;; Defined at:
  1937 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1940 ;;		 -> vsnprintf@f(6), 
  1941 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1942 ;;		 -> vfprintf@cfmt(2), 
  1943 ;;  ap              2   70[COMRAM] PTR PTR void 
  1944 ;;		 -> snprintf@ap(2), 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  llu             8   84[BANK0 ] unsigned long long 
  1947 ;;  ll              8   73[BANK0 ] long long 
  1948 ;;  f               4   66[BANK0 ] long long 
  1949 ;;  ct              3   70[BANK0 ] unsigned char [3]
  1950 ;;  vp              2   81[BANK0 ] PTR void 
  1951 ;;		 -> ?_snprintf(2), result(2), 
  1952 ;;  done            2   58[BANK0 ] int 
  1953 ;;  cp              2   56[BANK0 ] PTR unsigned char 
  1954 ;;		 -> ?_snprintf(2), result(2), 
  1955 ;;  i               2    0        int 
  1956 ;;  c               1   83[BANK0 ] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  2   66[COMRAM] int 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1966 ;;      Params:         6       0       0       0       0       0       0
  1967 ;;      Locals:         0      36       0       0       0       0       0
  1968 ;;      Temps:          4       0       0       0       0       0       0
  1969 ;;      Totals:        10      36       0       0       0       0       0
  1970 ;;Total ram usage:       46 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    5
  1973 ;; This function calls:
  1974 ;;		_atoi
  1975 ;;		_ctoa
  1976 ;;		_dtoa
  1977 ;;		_efgtoa
  1978 ;;		_fputc
  1979 ;;		_isdigit
  1980 ;;		_isupper
  1981 ;;		_otoa
  1982 ;;		_stoa
  1983 ;;		_strncmp
  1984 ;;		_tolower
  1985 ;;		_utoa
  1986 ;;		_xtoa
  1987 ;; This function is called by:
  1988 ;;		_vfprintf
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text4
  1993  000664                     __ptext4:
  1994                           	callstack 0
  1995  000664                     _vfpfcnvrt:
  1996                           	callstack 22
  1997  000664                     
  1998                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1999  000664  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2000  000668  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2001  00066C  CFDE FFF6          	movff	postinc2,tblptrl
  2002  000670  CFDD FFF7          	movff	postdec2,tblptrh
  2003  000674                     	if	0	;tblptru may be non-zero
  2004  000674                     	endif
  2005  000674                     	if	0	;tblptru may be non-zero
  2006  000674                     	endif
  2007  000674  0008               	tblrd		*
  2008  000676  50F5               	movf	tablat,w,c
  2009  000678  0A25               	xorlw	37
  2010  00067A  A4D8               	btfss	status,2,c
  2011  00067C  EF42  F003         	goto	u6921
  2012  000680  EF44  F003         	goto	u6920
  2013  000684                     u6921:
  2014  000684  EF6B  F00D         	goto	l5529
  2015  000688                     u6920:
  2016  000688                     
  2017                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2018  000688  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2019  00068C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2020  000690  2ADE               	incf	postinc2,f,c
  2021  000692  0E00               	movlw	0
  2022  000694  22DD               	addwfc	postdec2,f,c
  2023  000696                     
  2024                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2025  000696  0E00               	movlw	0
  2026  000698  0100               	movlb	0	; () banked
  2027  00069A  6FEC               	movwf	(_width+1)& (0+255),b
  2028  00069C  0E00               	movlw	0
  2029  00069E  6FEB               	movwf	_width& (0+255),b
  2030  0006A0  C0EB  F0EF         	movff	_width,_flags
  2031  0006A4  C0EC  F0F0         	movff	_width+1,_flags+1
  2032  0006A8                     
  2033                           ; BSR set to: 0
  2034                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2035  0006A8  69ED               	setf	_prec& (0+255),b
  2036  0006AA  69EE               	setf	(_prec+1)& (0+255),b
  2037  0006AC                     
  2038                           ; BSR set to: 0
  2039                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2040  0006AC  0E00               	movlw	0
  2041  0006AE  6F9B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2042  0006B0  0E00               	movlw	0
  2043  0006B2  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2046  0006B4  EFA2  F003         	goto	l5209
  2047  0006B8                     l5183:
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2051  0006B8  81EF               	bsf	_flags& (0+255),0,b
  2052  0006BA                     l5185:
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2056  0006BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2057  0006BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2058  0006C2  2ADE               	incf	postinc2,f,c
  2059  0006C4  0E00               	movlw	0
  2060  0006C6  22DD               	addwfc	postdec2,f,c
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2063  0006C8  EFA2  F003         	goto	l5209
  2064  0006CC                     l5187:
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2068  0006CC  83EF               	bsf	_flags& (0+255),1,b
  2069  0006CE  EF5D  F003         	goto	l5185
  2070  0006D2                     l5191:
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2074  0006D2  85EF               	bsf	_flags& (0+255),2,b
  2075  0006D4  EF5D  F003         	goto	l5185
  2076  0006D8                     l5195:
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2080  0006D8  87EF               	bsf	_flags& (0+255),3,b
  2081  0006DA  EF5D  F003         	goto	l5185
  2082  0006DE                     l5199:
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2086  0006DE  89EF               	bsf	_flags& (0+255),4,b
  2087  0006E0  EF5D  F003         	goto	l5185
  2088  0006E4                     l5203:
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2092  0006E4  0E00               	movlw	0
  2093  0006E6  6F9B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2094  0006E8  0E01               	movlw	1
  2095  0006EA  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2098  0006EC  EFA2  F003         	goto	l5209
  2099  0006F0                     l5207:
  2100                           
  2101                           ; BSR set to: 0
  2102  0006F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2103  0006F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2104  0006F8  CFDE FFF6          	movff	postinc2,tblptrl
  2105  0006FC  CFDD FFF7          	movff	postdec2,tblptrh
  2106  000700                     	if	0	;tblptru may be non-zero
  2107  000700                     	endif
  2108  000700                     	if	0	;tblptru may be non-zero
  2109  000700                     	endif
  2110  000700  0008               	tblrd		*
  2111  000702  50F5               	movf	tablat,w,c
  2112  000704  6E49               	movwf	??_vfpfcnvrt^0,c
  2113  000706  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  2114                           
  2115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2116                           ; Switch size 1, requested type "simple"
  2117                           ; Number of cases is 1, Range of values is 0 to 0
  2118                           ; switch strategies available:
  2119                           ; Name         Instructions Cycles
  2120                           ; simple_byte            4     3 (average)
  2121                           ;	Chosen strategy is simple_byte
  2122  000708  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2123  00070A  0A00               	xorlw	0	; case 0
  2124  00070C  B4D8               	btfsc	status,2,c
  2125  00070E  EF8B  F003         	goto	l5845
  2126  000712  EF72  F003         	goto	l5203
  2127  000716                     l5845:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ; Switch size 1, requested type "simple"
  2131                           ; Number of cases is 5, Range of values is 32 to 48
  2132                           ; switch strategies available:
  2133                           ; Name         Instructions Cycles
  2134                           ; simple_byte           16     9 (average)
  2135                           ;	Chosen strategy is simple_byte
  2136  000716  5049               	movf	??_vfpfcnvrt^0,w,c
  2137  000718  0A20               	xorlw	32	; case 32
  2138  00071A  B4D8               	btfsc	status,2,c
  2139  00071C  EF6C  F003         	goto	l5195
  2140  000720  0A03               	xorlw	3	; case 35
  2141  000722  B4D8               	btfsc	status,2,c
  2142  000724  EF6F  F003         	goto	l5199
  2143  000728  0A08               	xorlw	8	; case 43
  2144  00072A  B4D8               	btfsc	status,2,c
  2145  00072C  EF69  F003         	goto	l5191
  2146  000730  0A06               	xorlw	6	; case 45
  2147  000732  B4D8               	btfsc	status,2,c
  2148  000734  EF5C  F003         	goto	l5183
  2149  000738  0A1D               	xorlw	29	; case 48
  2150  00073A  B4D8               	btfsc	status,2,c
  2151  00073C  EF66  F003         	goto	l5187
  2152  000740  EF72  F003         	goto	l5203
  2153  000744                     l5209:
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2157  000744  519A               	movf	vfpfcnvrt@done& (0+255),w,b
  2158  000746  119B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2159  000748  B4D8               	btfsc	status,2,c
  2160  00074A  EFA9  F003         	goto	u6931
  2161  00074E  EFAB  F003         	goto	u6930
  2162  000752                     u6931:
  2163  000752  EF78  F003         	goto	l5207
  2164  000756                     u6930:
  2165  000756                     
  2166                           ; BSR set to: 0
  2167                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2168  000756  A1EF               	btfss	_flags& (0+255),0,b
  2169  000758  EFB0  F003         	goto	u6941
  2170  00075C  EFB2  F003         	goto	u6940
  2171  000760                     u6941:
  2172  000760  EFB3  F003         	goto	l5213
  2173  000764                     u6940:
  2174  000764                     
  2175                           ; BSR set to: 0
  2176                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2177  000764  93EF               	bcf	_flags& (0+255),1,b
  2178  000766                     l5213:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2182  000766  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2183  00076A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2184  00076E  CFDE FFF6          	movff	postinc2,tblptrl
  2185  000772  CFDD FFF7          	movff	postdec2,tblptrh
  2186  000776                     	if	0	;tblptru may be non-zero
  2187  000776                     	endif
  2188  000776                     	if	0	;tblptru may be non-zero
  2189  000776                     	endif
  2190  000776  0008               	tblrd		*
  2191  000778  50F5               	movf	tablat,w,c
  2192  00077A  0A2A               	xorlw	42
  2193  00077C  A4D8               	btfss	status,2,c
  2194  00077E  EFC3  F003         	goto	u6951
  2195  000782  EFC5  F003         	goto	u6950
  2196  000786                     u6951:
  2197  000786  EFEE  F003         	goto	l5221
  2198  00078A                     u6950:
  2199  00078A                     
  2200                           ; BSR set to: 0
  2201                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2202  00078A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2203  00078E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2204  000792  2ADE               	incf	postinc2,f,c
  2205  000794  0E00               	movlw	0
  2206  000796  22DD               	addwfc	postdec2,f,c
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2209  000798  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2210  00079C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2211  0007A0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2212  0007A4  0E02               	movlw	2
  2213  0007A6  26DE               	addwf	postinc2,f,c
  2214  0007A8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2215  0007AC  0E00               	movlw	0
  2216  0007AE  22DD               	addwfc	postdec2,f,c
  2217  0007B0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2218  0007B4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2219  0007B8  CFDE F0EB          	movff	postinc2,_width
  2220  0007BC  CFDD F0EC          	movff	postdec2,_width+1
  2221  0007C0                     
  2222                           ; BSR set to: 0
  2223                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2224  0007C0  BFEC               	btfsc	(_width+1)& (0+255),7,b
  2225  0007C2  EFE7  F003         	goto	u6960
  2226  0007C6  EFE5  F003         	goto	u6961
  2227  0007CA                     u6961:
  2228  0007CA  EF32  F004         	goto	l5231
  2229  0007CE                     u6960:
  2230  0007CE                     
  2231                           ; BSR set to: 0
  2232                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2233  0007CE  81EF               	bsf	_flags& (0+255),0,b
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2236  0007D0  6DEB               	negf	_width& (0+255),b
  2237  0007D2  1FEC               	comf	(_width+1)& (0+255),f,b
  2238  0007D4  B0D8               	btfsc	status,0,c
  2239  0007D6  2BEC               	incf	(_width+1)& (0+255),f,b
  2240  0007D8  EF32  F004         	goto	l5231
  2241  0007DC                     l5221:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2245  0007DC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2246  0007E0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2247  0007E4  CFDE F008          	movff	postinc2,atoi@s
  2248  0007E8  CFDD F009          	movff	postdec2,atoi@s+1
  2249  0007EC  ECAD  F021         	call	_atoi	;wreg free
  2250  0007F0  C008  F0EB         	movff	?_atoi,_width
  2251  0007F4  C009  F0EC         	movff	?_atoi+1,_width+1
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2254  0007F8  EF05  F004         	goto	l5225
  2255  0007FC                     l5223:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2259  0007FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2260  000800  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2261  000804  2ADE               	incf	postinc2,f,c
  2262  000806  0E00               	movlw	0
  2263  000808  22DD               	addwfc	postdec2,f,c
  2264  00080A                     l5225:
  2265  00080A  0ED0               	movlw	208
  2266  00080C  6E49               	movwf	??_vfpfcnvrt^0,c
  2267  00080E  0EFF               	movlw	255
  2268  000810  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2269  000812  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2270  000816  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2271  00081A  CFDE FFF6          	movff	postinc2,tblptrl
  2272  00081E  CFDD FFF7          	movff	postdec2,tblptrh
  2273  000822                     	if	0	;tblptru may be non-zero
  2274  000822                     	endif
  2275  000822                     	if	0	;tblptru may be non-zero
  2276  000822                     	endif
  2277  000822  0008               	tblrd		*
  2278  000824  50F5               	movf	tablat,w,c
  2279  000826  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2280  000828  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2281  00082A  5049               	movf	??_vfpfcnvrt^0,w,c
  2282  00082C  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2283  00082E  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2284  000830  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2285  000832  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2286  000834  E10A               	bnz	u6970
  2287  000836  0E0A               	movlw	10
  2288  000838  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2289  00083A  A0D8               	btfss	status,0,c
  2290  00083C  EF22  F004         	goto	u6971
  2291  000840  EF25  F004         	goto	u6970
  2292  000844                     u6971:
  2293  000844  0E01               	movlw	1
  2294  000846  EF26  F004         	goto	u6980
  2295  00084A                     u6970:
  2296  00084A  0E00               	movlw	0
  2297  00084C                     u6980:
  2298  00084C  0100               	movlb	0	; () banked
  2299  00084E  6F9C               	movwf	_vfpfcnvrt$1128& (0+255),b
  2300  000850  6B9D               	clrf	(_vfpfcnvrt$1128+1)& (0+255),b
  2301  000852                     
  2302                           ; BSR set to: 0
  2303  000852  519C               	movf	_vfpfcnvrt$1128& (0+255),w,b
  2304  000854  119D               	iorwf	(_vfpfcnvrt$1128+1)& (0+255),w,b
  2305  000856  A4D8               	btfss	status,2,c
  2306  000858  EF30  F004         	goto	u6991
  2307  00085C  EF32  F004         	goto	u6990
  2308  000860                     u6991:
  2309  000860  EFFE  F003         	goto	l5223
  2310  000864                     u6990:
  2311  000864                     l5231:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2315  000864  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2316  000868  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2317  00086C  CFDE FFF6          	movff	postinc2,tblptrl
  2318  000870  CFDD FFF7          	movff	postdec2,tblptrh
  2319  000874                     	if	0	;tblptru may be non-zero
  2320  000874                     	endif
  2321  000874                     	if	0	;tblptru may be non-zero
  2322  000874                     	endif
  2323  000874  0008               	tblrd		*
  2324  000876  50F5               	movf	tablat,w,c
  2325  000878  0A2E               	xorlw	46
  2326  00087A  A4D8               	btfss	status,2,c
  2327  00087C  EF42  F004         	goto	u7001
  2328  000880  EF44  F004         	goto	u7000
  2329  000884                     u7001:
  2330  000884  EFC2  F004         	goto	l5251
  2331  000888                     u7000:
  2332  000888                     
  2333                           ; BSR set to: 0
  2334                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2335  000888  0E00               	movlw	0
  2336  00088A  6FEE               	movwf	(_prec+1)& (0+255),b
  2337  00088C  0E00               	movlw	0
  2338  00088E  6FED               	movwf	_prec& (0+255),b
  2339  000890                     
  2340                           ; BSR set to: 0
  2341                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2342  000890  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2343  000894  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2344  000898  2ADE               	incf	postinc2,f,c
  2345  00089A  0E00               	movlw	0
  2346  00089C  22DD               	addwfc	postdec2,f,c
  2347  00089E                     
  2348                           ; BSR set to: 0
  2349                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2350  00089E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351  0008A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352  0008A6  CFDE FFF6          	movff	postinc2,tblptrl
  2353  0008AA  CFDD FFF7          	movff	postdec2,tblptrh
  2354  0008AE                     	if	0	;tblptru may be non-zero
  2355  0008AE                     	endif
  2356  0008AE                     	if	0	;tblptru may be non-zero
  2357  0008AE                     	endif
  2358  0008AE  0008               	tblrd		*
  2359  0008B0  50F5               	movf	tablat,w,c
  2360  0008B2  0A2A               	xorlw	42
  2361  0008B4  A4D8               	btfss	status,2,c
  2362  0008B6  EF5F  F004         	goto	u7011
  2363  0008BA  EF61  F004         	goto	u7010
  2364  0008BE                     u7011:
  2365  0008BE  EF7E  F004         	goto	l5241
  2366  0008C2                     u7010:
  2367  0008C2                     
  2368                           ; BSR set to: 0
  2369                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2370  0008C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2371  0008C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2372  0008CA  2ADE               	incf	postinc2,f,c
  2373  0008CC  0E00               	movlw	0
  2374  0008CE  22DD               	addwfc	postdec2,f,c
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2377  0008D0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2378  0008D4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2379  0008D8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2380  0008DC  0E02               	movlw	2
  2381  0008DE  26DE               	addwf	postinc2,f,c
  2382  0008E0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2383  0008E4  0E00               	movlw	0
  2384  0008E6  22DD               	addwfc	postdec2,f,c
  2385  0008E8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2386  0008EC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2387  0008F0  CFDE F0ED          	movff	postinc2,_prec
  2388  0008F4  CFDD F0EE          	movff	postdec2,_prec+1
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2391  0008F8  EFC2  F004         	goto	l5251
  2392  0008FC                     l5241:
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2396  0008FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2397  000900  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2398  000904  CFDE F008          	movff	postinc2,atoi@s
  2399  000908  CFDD F009          	movff	postdec2,atoi@s+1
  2400  00090C  ECAD  F021         	call	_atoi	;wreg free
  2401  000910  C008  F0ED         	movff	?_atoi,_prec
  2402  000914  C009  F0EE         	movff	?_atoi+1,_prec+1
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2405  000918  EF95  F004         	goto	l5245
  2406  00091C                     l5243:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2410  00091C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2411  000920  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2412  000924  2ADE               	incf	postinc2,f,c
  2413  000926  0E00               	movlw	0
  2414  000928  22DD               	addwfc	postdec2,f,c
  2415  00092A                     l5245:
  2416  00092A  0ED0               	movlw	208
  2417  00092C  6E49               	movwf	??_vfpfcnvrt^0,c
  2418  00092E  0EFF               	movlw	255
  2419  000930  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2420  000932  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2421  000936  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2422  00093A  CFDE FFF6          	movff	postinc2,tblptrl
  2423  00093E  CFDD FFF7          	movff	postdec2,tblptrh
  2424  000942                     	if	0	;tblptru may be non-zero
  2425  000942                     	endif
  2426  000942                     	if	0	;tblptru may be non-zero
  2427  000942                     	endif
  2428  000942  0008               	tblrd		*
  2429  000944  50F5               	movf	tablat,w,c
  2430  000946  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2431  000948  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2432  00094A  5049               	movf	??_vfpfcnvrt^0,w,c
  2433  00094C  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2434  00094E  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2435  000950  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2436  000952  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2437  000954  E10A               	bnz	u7020
  2438  000956  0E0A               	movlw	10
  2439  000958  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2440  00095A  A0D8               	btfss	status,0,c
  2441  00095C  EFB2  F004         	goto	u7021
  2442  000960  EFB5  F004         	goto	u7020
  2443  000964                     u7021:
  2444  000964  0E01               	movlw	1
  2445  000966  EFB6  F004         	goto	u7030
  2446  00096A                     u7020:
  2447  00096A  0E00               	movlw	0
  2448  00096C                     u7030:
  2449  00096C  0100               	movlb	0	; () banked
  2450  00096E  6F9E               	movwf	_vfpfcnvrt$1129& (0+255),b
  2451  000970  6B9F               	clrf	(_vfpfcnvrt$1129+1)& (0+255),b
  2452  000972                     
  2453                           ; BSR set to: 0
  2454  000972  519E               	movf	_vfpfcnvrt$1129& (0+255),w,b
  2455  000974  119F               	iorwf	(_vfpfcnvrt$1129+1)& (0+255),w,b
  2456  000976  A4D8               	btfss	status,2,c
  2457  000978  EFC0  F004         	goto	u7041
  2458  00097C  EFC2  F004         	goto	u7040
  2459  000980                     u7041:
  2460  000980  EF8E  F004         	goto	l5243
  2461  000984                     u7040:
  2462  000984                     l5251:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2466  000984  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2467  000988  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2468  00098C  CFDE FFF6          	movff	postinc2,tblptrl
  2469  000990  CFDD FFF7          	movff	postdec2,tblptrh
  2470  000994                     	if	0	;tblptru may be non-zero
  2471  000994                     	endif
  2472  000994                     	if	0	;tblptru may be non-zero
  2473  000994                     	endif
  2474  000994  0008               	tblrd		*
  2475  000996  50F5               	movf	tablat,w,c
  2476  000998  6E07               	movwf	tolower@c^0,c
  2477  00099A  6A08               	clrf	(tolower@c+1)^0,c
  2478  00099C  EC4D  F02B         	call	_tolower	;wreg free
  2479  0009A0  5007               	movf	?_tolower^0,w,c
  2480  0009A2  0100               	movlb	0	; () banked
  2481  0009A4  6FA6               	movwf	vfpfcnvrt@ct& (0+255),b
  2482  0009A6                     
  2483                           ; BSR set to: 0
  2484                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2485  0009A6  51A6               	movf	vfpfcnvrt@ct& (0+255),w,b
  2486  0009A8  B4D8               	btfsc	status,2,c
  2487  0009AA  EFD9  F004         	goto	u7051
  2488  0009AE  EFDB  F004         	goto	u7050
  2489  0009B2                     u7051:
  2490  0009B2  EF15  F005         	goto	l5261
  2491  0009B6                     u7050:
  2492  0009B6                     
  2493                           ; BSR set to: 0
  2494                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2495  0009B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2496  0009BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2497  0009BE  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2498  0009C2  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2499  0009C6  0E01               	movlw	1
  2500  0009C8  2649               	addwf	??_vfpfcnvrt^0,f,c
  2501  0009CA  0E00               	movlw	0
  2502  0009CC  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2503  0009CE  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2504  0009D2  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2505  0009D6                     	if	0	;tblptru may be non-zero
  2506  0009D6                     	endif
  2507  0009D6                     	if	0	;tblptru may be non-zero
  2508  0009D6                     	endif
  2509  0009D6  0008               	tblrd		*
  2510  0009D8  50F5               	movf	tablat,w,c
  2511  0009DA  6E07               	movwf	tolower@c^0,c
  2512  0009DC  6A08               	clrf	(tolower@c+1)^0,c
  2513  0009DE  EC4D  F02B         	call	_tolower	;wreg free
  2514  0009E2  5007               	movf	?_tolower^0,w,c
  2515  0009E4  0100               	movlb	0	; () banked
  2516  0009E6  6FA7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2517  0009E8                     
  2518                           ; BSR set to: 0
  2519                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2520  0009E8  51A7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2521  0009EA  B4D8               	btfsc	status,2,c
  2522  0009EC  EFFA  F004         	goto	u7061
  2523  0009F0  EFFC  F004         	goto	u7060
  2524  0009F4                     u7061:
  2525  0009F4  EF15  F005         	goto	l5261
  2526  0009F8                     u7060:
  2527  0009F8                     
  2528                           ; BSR set to: 0
  2529                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2530  0009F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2531  0009FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2532  000A00  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2533  000A04  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2534  000A08  0E02               	movlw	2
  2535  000A0A  2649               	addwf	??_vfpfcnvrt^0,f,c
  2536  000A0C  0E00               	movlw	0
  2537  000A0E  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2538  000A10  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2539  000A14  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2540  000A18                     	if	0	;tblptru may be non-zero
  2541  000A18                     	endif
  2542  000A18                     	if	0	;tblptru may be non-zero
  2543  000A18                     	endif
  2544  000A18  0008               	tblrd		*
  2545  000A1A  50F5               	movf	tablat,w,c
  2546  000A1C  6E07               	movwf	tolower@c^0,c
  2547  000A1E  6A08               	clrf	(tolower@c+1)^0,c
  2548  000A20  EC4D  F02B         	call	_tolower	;wreg free
  2549  000A24  5007               	movf	?_tolower^0,w,c
  2550  000A26  0100               	movlb	0	; () banked
  2551  000A28  6FA8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2552  000A2A                     l5261:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2556  000A2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2557  000A2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2558  000A32  CFDE FFF6          	movff	postinc2,tblptrl
  2559  000A36  CFDD FFF7          	movff	postdec2,tblptrh
  2560  000A3A                     	if	0	;tblptru may be non-zero
  2561  000A3A                     	endif
  2562  000A3A                     	if	0	;tblptru may be non-zero
  2563  000A3A                     	endif
  2564  000A3A  0008               	tblrd		*
  2565  000A3C  50F5               	movf	tablat,w,c
  2566  000A3E  0A63               	xorlw	99
  2567  000A40  A4D8               	btfss	status,2,c
  2568  000A42  EF25  F005         	goto	u7071
  2569  000A46  EF27  F005         	goto	u7070
  2570  000A4A                     u7071:
  2571  000A4A  EF4E  F005         	goto	l5269
  2572  000A4E                     u7070:
  2573  000A4E                     
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2576  000A4E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2577  000A52  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2578  000A56  2ADE               	incf	postinc2,f,c
  2579  000A58  0E00               	movlw	0
  2580  000A5A  22DD               	addwfc	postdec2,f,c
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2583  000A5C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2584  000A60  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2585  000A64  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2586  000A68  0E02               	movlw	2
  2587  000A6A  26DE               	addwf	postinc2,f,c
  2588  000A6C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2589  000A70  0E00               	movlw	0
  2590  000A72  22DD               	addwfc	postdec2,f,c
  2591  000A74  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2592  000A78  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2593  000A7C  50DF               	movf	indf2,w,c
  2594  000A7E  6FB3               	movwf	vfpfcnvrt@c& (0+255),b
  2595  000A80                     
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2598  000A80  C043  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  2599  000A84  C044  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2600  000A88  C0B3  F00C         	movff	vfpfcnvrt@c,ctoa@c
  2601  000A8C  ECC5  F027         	call	_ctoa	;wreg free
  2602  000A90  C00A  F043         	movff	?_ctoa,?_vfpfcnvrt
  2603  000A94  C00B  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2604  000A98  EF86  F00D         	goto	l1096
  2605  000A9C                     l5269:
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 824:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  2609  000A9C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2610  000AA0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2611  000AA4  CFDE F001          	movff	postinc2,strncmp@_l
  2612  000AA8  CFDD F002          	movff	postdec2,strncmp@_l+1
  2613  000AAC  0E23               	movlw	low STR_15
  2614  000AAE  6E03               	movwf	strncmp@_r^0,c
  2615  000AB0  0E06               	movlw	high STR_15
  2616  000AB2  6E04               	movwf	(strncmp@_r+1)^0,c
  2617  000AB4  0E00               	movlw	0
  2618  000AB6  6E06               	movwf	(strncmp@n+1)^0,c
  2619  000AB8  0E03               	movlw	3
  2620  000ABA  6E05               	movwf	strncmp@n^0,c
  2621  000ABC  EC3C  F025         	call	_strncmp	;wreg free
  2622  000AC0  5001               	movf	?_strncmp^0,w,c
  2623  000AC2  1002               	iorwf	(?_strncmp+1)^0,w,c
  2624  000AC4  B4D8               	btfsc	status,2,c
  2625  000AC6  EF67  F005         	goto	u7081
  2626  000ACA  EF69  F005         	goto	u7080
  2627  000ACE                     u7081:
  2628  000ACE  EF84  F005         	goto	l5273
  2629  000AD2                     u7080:
  2630  000AD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2631  000AD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2632  000ADA  CFDE F001          	movff	postinc2,strncmp@_l
  2633  000ADE  CFDD F002          	movff	postdec2,strncmp@_l+1
  2634  000AE2  0E2B               	movlw	low STR_19
  2635  000AE4  6E03               	movwf	strncmp@_r^0,c
  2636  000AE6  0E06               	movlw	high STR_19
  2637  000AE8  6E04               	movwf	(strncmp@_r+1)^0,c
  2638  000AEA  0E00               	movlw	0
  2639  000AEC  6E06               	movwf	(strncmp@n+1)^0,c
  2640  000AEE  0E03               	movlw	3
  2641  000AF0  6E05               	movwf	strncmp@n^0,c
  2642  000AF2  EC3C  F025         	call	_strncmp	;wreg free
  2643  000AF6  5001               	movf	?_strncmp^0,w,c
  2644  000AF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  2645  000AFA  A4D8               	btfss	status,2,c
  2646  000AFC  EF82  F005         	goto	u7091
  2647  000B00  EF84  F005         	goto	u7090
  2648  000B04                     u7091:
  2649  000B04  EFC5  F005         	goto	l5279
  2650  000B08                     u7090:
  2651  000B08                     l5273:
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 825: ;C:\Program 
      +                          Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 827:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  2654  000B08  0E03               	movlw	3
  2655  000B0A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2656  000B0E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2657  000B12  26DE               	addwf	postinc2,f,c
  2658  000B14  0E00               	movlw	0
  2659  000B16  22DD               	addwfc	postdec2,f,c
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2662  000B18  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2663  000B1C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2664  000B20  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2665  000B24  0E02               	movlw	2
  2666  000B26  26DE               	addwf	postinc2,f,c
  2667  000B28  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2668  000B2C  0E00               	movlw	0
  2669  000B2E  22DD               	addwfc	postdec2,f,c
  2670  000B30  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2671  000B34  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2672  000B38  50DF               	movf	indf2,w,c
  2673  000B3A  0100               	movlb	0	; () banked
  2674  000B3C  6FA9               	movwf	vfpfcnvrt@ll& (0+255),b
  2675  000B3E  0E00               	movlw	0
  2676  000B40  BFA9               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  2677  000B42  0EFF               	movlw	-1
  2678  000B44  6FAA               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  2679  000B46  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2680  000B48  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2681  000B4A  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2682  000B4C  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2683  000B4E  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2684  000B50  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2685  000B52                     l5275:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  2689  000B52  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2690  000B56  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2691  000B5A  C0A9  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2692  000B5E  C0AA  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2693  000B62  C0AB  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2694  000B66  C0AC  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2695  000B6A  C0AD  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2696  000B6E  C0AE  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2697  000B72  C0AF  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2698  000B76  C0B0  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2699  000B7A  ECF5  F019         	call	_dtoa	;wreg free
  2700  000B7E  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2701  000B82  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2702  000B86  EF86  F00D         	goto	l1096
  2703  000B8A                     l5279:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 836:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  2706  000B8A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2707  000B8E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2708  000B92  CFDE F001          	movff	postinc2,strncmp@_l
  2709  000B96  CFDD F002          	movff	postdec2,strncmp@_l+1
  2710  000B9A  0E24               	movlw	low (STR_15+1)
  2711  000B9C  6E03               	movwf	strncmp@_r^0,c
  2712  000B9E  0E06               	movlw	high (STR_15+1)
  2713  000BA0  6E04               	movwf	(strncmp@_r+1)^0,c
  2714  000BA2  0E00               	movlw	0
  2715  000BA4  6E06               	movwf	(strncmp@n+1)^0,c
  2716  000BA6  0E02               	movlw	2
  2717  000BA8  6E05               	movwf	strncmp@n^0,c
  2718  000BAA  EC3C  F025         	call	_strncmp	;wreg free
  2719  000BAE  5001               	movf	?_strncmp^0,w,c
  2720  000BB0  1002               	iorwf	(?_strncmp+1)^0,w,c
  2721  000BB2  B4D8               	btfsc	status,2,c
  2722  000BB4  EFDE  F005         	goto	u7101
  2723  000BB8  EFE0  F005         	goto	u7100
  2724  000BBC                     u7101:
  2725  000BBC  EFFB  F005         	goto	l5283
  2726  000BC0                     u7100:
  2727  000BC0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2728  000BC4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2729  000BC8  CFDE F001          	movff	postinc2,strncmp@_l
  2730  000BCC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2731  000BD0  0E2C               	movlw	low (STR_19+1)
  2732  000BD2  6E03               	movwf	strncmp@_r^0,c
  2733  000BD4  0E06               	movlw	high (STR_19+1)
  2734  000BD6  6E04               	movwf	(strncmp@_r+1)^0,c
  2735  000BD8  0E00               	movlw	0
  2736  000BDA  6E06               	movwf	(strncmp@n+1)^0,c
  2737  000BDC  0E02               	movlw	2
  2738  000BDE  6E05               	movwf	strncmp@n^0,c
  2739  000BE0  EC3C  F025         	call	_strncmp	;wreg free
  2740  000BE4  5001               	movf	?_strncmp^0,w,c
  2741  000BE6  1002               	iorwf	(?_strncmp+1)^0,w,c
  2742  000BE8  A4D8               	btfss	status,2,c
  2743  000BEA  EFF9  F005         	goto	u7111
  2744  000BEE  EFFB  F005         	goto	u7110
  2745  000BF2                     u7111:
  2746  000BF2  EF23  F006         	goto	l5289
  2747  000BF6                     u7110:
  2748  000BF6                     l5283:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 837: ;C:\Program 
      +                          Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 839:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  2751  000BF6  0E02               	movlw	2
  2752  000BF8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2753  000BFC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2754  000C00  26DE               	addwf	postinc2,f,c
  2755  000C02  0E00               	movlw	0
  2756  000C04  22DD               	addwfc	postdec2,f,c
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 840:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2759  000C06  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2760  000C0A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2761  000C0E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2762  000C12  0E02               	movlw	2
  2763  000C14  26DE               	addwf	postinc2,f,c
  2764  000C16  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2765  000C1A  0E00               	movlw	0
  2766  000C1C  22DD               	addwfc	postdec2,f,c
  2767  000C1E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2768  000C22  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2769  000C26  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  2770  000C2A  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  2771  000C2E  0100               	movlb	0	; () banked
  2772  000C30  0E00               	movlw	0
  2773  000C32  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2774  000C34  0EFF               	movlw	-1
  2775  000C36  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2776  000C38  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2777  000C3A  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2778  000C3C  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2779  000C3E  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2780  000C40  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2781  000C42  EFA9  F005         	goto	l5275
  2782  000C46                     l5289:
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2785  000C46  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2786  000C4A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2787  000C4E  CFDE FFF6          	movff	postinc2,tblptrl
  2788  000C52  CFDD FFF7          	movff	postdec2,tblptrh
  2789  000C56                     	if	0	;tblptru may be non-zero
  2790  000C56                     	endif
  2791  000C56                     	if	0	;tblptru may be non-zero
  2792  000C56                     	endif
  2793  000C56  0008               	tblrd		*
  2794  000C58  50F5               	movf	tablat,w,c
  2795  000C5A  0A64               	xorlw	100
  2796  000C5C  B4D8               	btfsc	status,2,c
  2797  000C5E  EF33  F006         	goto	u7121
  2798  000C62  EF35  F006         	goto	u7120
  2799  000C66                     u7121:
  2800  000C66  EF47  F006         	goto	l5293
  2801  000C6A                     u7120:
  2802  000C6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2803  000C6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2804  000C72  CFDE FFF6          	movff	postinc2,tblptrl
  2805  000C76  CFDD FFF7          	movff	postdec2,tblptrh
  2806  000C7A                     	if	0	;tblptru may be non-zero
  2807  000C7A                     	endif
  2808  000C7A                     	if	0	;tblptru may be non-zero
  2809  000C7A                     	endif
  2810  000C7A  0008               	tblrd		*
  2811  000C7C  50F5               	movf	tablat,w,c
  2812  000C7E  0A69               	xorlw	105
  2813  000C80  A4D8               	btfss	status,2,c
  2814  000C82  EF45  F006         	goto	u7131
  2815  000C86  EF47  F006         	goto	u7130
  2816  000C8A                     u7131:
  2817  000C8A  EF6E  F006         	goto	l5299
  2818  000C8E                     u7130:
  2819  000C8E                     l5293:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2822  000C8E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2823  000C92  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2824  000C96  2ADE               	incf	postinc2,f,c
  2825  000C98  0E00               	movlw	0
  2826  000C9A  22DD               	addwfc	postdec2,f,c
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2829  000C9C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2830  000CA0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2831  000CA4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2832  000CA8  0E02               	movlw	2
  2833  000CAA  26DE               	addwf	postinc2,f,c
  2834  000CAC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2835  000CB0  0E00               	movlw	0
  2836  000CB2  22DD               	addwfc	postdec2,f,c
  2837  000CB4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2838  000CB8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2839  000CBC  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  2840  000CC0  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  2841  000CC4  0100               	movlb	0	; () banked
  2842  000CC6  0E00               	movlw	0
  2843  000CC8  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2844  000CCA  0EFF               	movlw	-1
  2845  000CCC  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2846  000CCE  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2847  000CD0  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2848  000CD2  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2849  000CD4  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2850  000CD6  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2851  000CD8  EFA9  F005         	goto	l5275
  2852  000CDC                     l5299:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 905:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  2855  000CDC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2856  000CE0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2857  000CE4  CFDE F001          	movff	postinc2,strncmp@_l
  2858  000CE8  CFDD F002          	movff	postdec2,strncmp@_l+1
  2859  000CEC  0E46               	movlw	low STR_33
  2860  000CEE  6E03               	movwf	strncmp@_r^0,c
  2861  000CF0  0E06               	movlw	high STR_33
  2862  000CF2  6E04               	movwf	(strncmp@_r+1)^0,c
  2863  000CF4  0E00               	movlw	0
  2864  000CF6  6E06               	movwf	(strncmp@n+1)^0,c
  2865  000CF8  0E02               	movlw	2
  2866  000CFA  6E05               	movwf	strncmp@n^0,c
  2867  000CFC  EC3C  F025         	call	_strncmp	;wreg free
  2868  000D00  5001               	movf	?_strncmp^0,w,c
  2869  000D02  1002               	iorwf	(?_strncmp+1)^0,w,c
  2870  000D04  B4D8               	btfsc	status,2,c
  2871  000D06  EF87  F006         	goto	u7141
  2872  000D0A  EF89  F006         	goto	u7140
  2873  000D0E                     u7141:
  2874  000D0E  EFA4  F006         	goto	l5303
  2875  000D12                     u7140:
  2876  000D12  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2877  000D16  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2878  000D1A  CFDE F001          	movff	postinc2,strncmp@_l
  2879  000D1E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2880  000D22  0E4C               	movlw	low STR_37
  2881  000D24  6E03               	movwf	strncmp@_r^0,c
  2882  000D26  0E06               	movlw	high STR_37
  2883  000D28  6E04               	movwf	(strncmp@_r+1)^0,c
  2884  000D2A  0E00               	movlw	0
  2885  000D2C  6E06               	movwf	(strncmp@n+1)^0,c
  2886  000D2E  0E02               	movlw	2
  2887  000D30  6E05               	movwf	strncmp@n^0,c
  2888  000D32  EC3C  F025         	call	_strncmp	;wreg free
  2889  000D36  5001               	movf	?_strncmp^0,w,c
  2890  000D38  1002               	iorwf	(?_strncmp+1)^0,w,c
  2891  000D3A  A4D8               	btfss	status,2,c
  2892  000D3C  EFA2  F006         	goto	u7151
  2893  000D40  EFA4  F006         	goto	u7150
  2894  000D44                     u7151:
  2895  000D44  EFCD  F006         	goto	l5309
  2896  000D48                     u7150:
  2897  000D48                     l5303:
  2898                           
  2899                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 906: ;C:\Program 
      +                          Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 908:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  2900  000D48  0E02               	movlw	2
  2901  000D4A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2902  000D4E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2903  000D52  26DE               	addwf	postinc2,f,c
  2904  000D54  0E00               	movlw	0
  2905  000D56  22DD               	addwfc	postdec2,f,c
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 909:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2908  000D58  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2909  000D5C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2910  000D60  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2911  000D64  0E02               	movlw	2
  2912  000D66  26DE               	addwf	postinc2,f,c
  2913  000D68  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2914  000D6C  0E00               	movlw	0
  2915  000D6E  22DD               	addwfc	postdec2,f,c
  2916  000D70  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2917  000D74  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2918  000D78  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2919  000D7C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2920  000D80  C04B  F0A9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2921  000D84  C04C  F0AA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2922  000D88  0100               	movlb	0	; () banked
  2923  000D8A  6BAB               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  2924  000D8C  6BAC               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  2925  000D8E  6BAD               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  2926  000D90  6BAE               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  2927  000D92  6BAF               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  2928  000D94  6BB0               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  2929  000D96  EFA9  F005         	goto	l5275
  2930  000D9A                     l5309:
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2933  000D9A  0E66               	movlw	102
  2934  000D9C  0100               	movlb	0	; () banked
  2935  000D9E  19A6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2936  000DA0  A4D8               	btfss	status,2,c
  2937  000DA2  EFD5  F006         	goto	u7161
  2938  000DA6  EFD7  F006         	goto	u7160
  2939  000DAA                     u7161:
  2940  000DAA  EF17  F007         	goto	l5321
  2941  000DAE                     u7160:
  2942  000DAE                     
  2943                           ; BSR set to: 0
  2944                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2945  000DAE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2946  000DB2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2947  000DB6  CFDE FFF6          	movff	postinc2,tblptrl
  2948  000DBA  CFDD FFF7          	movff	postdec2,tblptrh
  2949  000DBE                     	if	0	;tblptru may be non-zero
  2950  000DBE                     	endif
  2951  000DBE                     	if	0	;tblptru may be non-zero
  2952  000DBE                     	endif
  2953  000DBE  0008               	tblrd		*
  2954  000DC0  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  2955  000DC4                     
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2958  000DC4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2959  000DC8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2960  000DCC  2ADE               	incf	postinc2,f,c
  2961  000DCE  0E00               	movlw	0
  2962  000DD0  22DD               	addwfc	postdec2,f,c
  2963  000DD2                     
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2966  000DD2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2967  000DD6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2968  000DDA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2969  000DDE  0E04               	movlw	4
  2970  000DE0  26DE               	addwf	postinc2,f,c
  2971  000DE2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2972  000DE6  0E00               	movlw	0
  2973  000DE8  22DD               	addwfc	postdec2,f,c
  2974  000DEA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2975  000DEE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2976  000DF2  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  2977  000DF6  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  2978  000DFA  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  2979  000DFE  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  2980  000E02                     l5317:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2984  000E02  C043  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  2985  000E06  C044  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2986  000E0A  C0A2  F036         	movff	vfpfcnvrt@f,efgtoa@f
  2987  000E0E  C0A3  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2988  000E12  C0A4  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2989  000E16  C0A5  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2990  000E1A  C0B3  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  2991  000E1E  EC87  F00D         	call	_efgtoa	;wreg free
  2992  000E22  C034  F043         	movff	?_efgtoa,?_vfpfcnvrt
  2993  000E26  C035  F044         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2994  000E2A  EF86  F00D         	goto	l1096
  2995  000E2E                     l5321:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2999  000E2E  0EA6               	movlw	low vfpfcnvrt@ct
  3000  000E30  6E01               	movwf	strncmp@_l^0,c
  3001  000E32  0E00               	movlw	high vfpfcnvrt@ct
  3002  000E34  6E02               	movwf	(strncmp@_l+1)^0,c
  3003  000E36  0E49               	movlw	low STR_42
  3004  000E38  6E03               	movwf	strncmp@_r^0,c
  3005  000E3A  0E06               	movlw	high STR_42
  3006  000E3C  6E04               	movwf	(strncmp@_r+1)^0,c
  3007  000E3E  0E00               	movlw	0
  3008  000E40  6E06               	movwf	(strncmp@n+1)^0,c
  3009  000E42  0E02               	movlw	2
  3010  000E44  6E05               	movwf	strncmp@n^0,c
  3011  000E46  EC3C  F025         	call	_strncmp	;wreg free
  3012  000E4A  5001               	movf	?_strncmp^0,w,c
  3013  000E4C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3014  000E4E  A4D8               	btfss	status,2,c
  3015  000E50  EF2C  F007         	goto	u7171
  3016  000E54  EF2E  F007         	goto	u7170
  3017  000E58                     u7171:
  3018  000E58  EFAA  F007         	goto	l5337
  3019  000E5C                     u7170:
  3020  000E5C                     
  3021                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3022  000E5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3023  000E60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3024  000E64  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3025  000E68  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3026  000E6C  0E01               	movlw	1
  3027  000E6E  2649               	addwf	??_vfpfcnvrt^0,f,c
  3028  000E70  0E00               	movlw	0
  3029  000E72  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3030  000E74  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3031  000E78  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3032  000E7C                     	if	0	;tblptru may be non-zero
  3033  000E7C                     	endif
  3034  000E7C                     	if	0	;tblptru may be non-zero
  3035  000E7C                     	endif
  3036  000E7C  0008               	tblrd		*
  3037  000E7E  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  3038  000E82  0EBF               	movlw	191
  3039  000E84  6E49               	movwf	??_vfpfcnvrt^0,c
  3040  000E86  0EFF               	movlw	255
  3041  000E88  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3042  000E8A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3043  000E8E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3044  000E92  CFDE FFF6          	movff	postinc2,tblptrl
  3045  000E96  CFDD FFF7          	movff	postdec2,tblptrh
  3046  000E9A                     	if	0	;tblptru may be non-zero
  3047  000E9A                     	endif
  3048  000E9A                     	if	0	;tblptru may be non-zero
  3049  000E9A                     	endif
  3050  000E9A  0008               	tblrd		*
  3051  000E9C  50F5               	movf	tablat,w,c
  3052  000E9E  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3053  000EA0  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3054  000EA2  5049               	movf	??_vfpfcnvrt^0,w,c
  3055  000EA4  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3056  000EA6  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3057  000EA8  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3058  000EAA  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3059  000EAC  E10A               	bnz	u7180
  3060  000EAE  0E1A               	movlw	26
  3061  000EB0  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3062  000EB2  A0D8               	btfss	status,0,c
  3063  000EB4  EF5E  F007         	goto	u7181
  3064  000EB8  EF61  F007         	goto	u7180
  3065  000EBC                     u7181:
  3066  000EBC  0E01               	movlw	1
  3067  000EBE  EF62  F007         	goto	u7190
  3068  000EC2                     u7180:
  3069  000EC2  0E00               	movlw	0
  3070  000EC4                     u7190:
  3071  000EC4  0100               	movlb	0	; () banked
  3072  000EC6  6FA0               	movwf	_vfpfcnvrt$1150& (0+255),b
  3073  000EC8  6BA1               	clrf	(_vfpfcnvrt$1150+1)& (0+255),b
  3074  000ECA                     
  3075                           ; BSR set to: 0
  3076  000ECA  51A0               	movf	_vfpfcnvrt$1150& (0+255),w,b
  3077  000ECC  11A1               	iorwf	(_vfpfcnvrt$1150+1)& (0+255),w,b
  3078  000ECE  B4D8               	btfsc	status,2,c
  3079  000ED0  EF6C  F007         	goto	u7201
  3080  000ED4  EF6E  F007         	goto	u7200
  3081  000ED8                     u7201:
  3082  000ED8  EF88  F007         	goto	l5331
  3083  000EDC                     u7200:
  3084  000EDC                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3087  000EDC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3088  000EE0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3089  000EE4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3090  000EE8  0E04               	movlw	4
  3091  000EEA  26DE               	addwf	postinc2,f,c
  3092  000EEC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3093  000EF0  0E00               	movlw	0
  3094  000EF2  22DD               	addwfc	postdec2,f,c
  3095  000EF4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3096  000EF8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3097  000EFC  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  3098  000F00  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  3099  000F04  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  3100  000F08  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3103  000F0C  EFA0  F007         	goto	l1116
  3104  000F10                     l5331:
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3108  000F10  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3109  000F14  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3110  000F18  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3111  000F1C  0E04               	movlw	4
  3112  000F1E  26DE               	addwf	postinc2,f,c
  3113  000F20  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3114  000F24  0E00               	movlw	0
  3115  000F26  22DD               	addwfc	postdec2,f,c
  3116  000F28  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3117  000F2C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3118  000F30  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  3119  000F34  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  3120  000F38  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  3121  000F3C  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  3122  000F40                     l1116:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3126  000F40  0E02               	movlw	2
  3127  000F42  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3128  000F46  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3129  000F4A  26DE               	addwf	postinc2,f,c
  3130  000F4C  0E00               	movlw	0
  3131  000F4E  22DD               	addwfc	postdec2,f,c
  3132  000F50  EF01  F007         	goto	l5317
  3133  000F54                     l5337:
  3134                           
  3135                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 991:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  3136  000F54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3137  000F58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3138  000F5C  CFDE F001          	movff	postinc2,strncmp@_l
  3139  000F60  CFDD F002          	movff	postdec2,strncmp@_l+1
  3140  000F64  0E37               	movlw	low STR_47
  3141  000F66  6E03               	movwf	strncmp@_r^0,c
  3142  000F68  0E06               	movlw	high STR_47
  3143  000F6A  6E04               	movwf	(strncmp@_r+1)^0,c
  3144  000F6C  0E00               	movlw	0
  3145  000F6E  6E06               	movwf	(strncmp@n+1)^0,c
  3146  000F70  0E03               	movlw	3
  3147  000F72  6E05               	movwf	strncmp@n^0,c
  3148  000F74  EC3C  F025         	call	_strncmp	;wreg free
  3149  000F78  5001               	movf	?_strncmp^0,w,c
  3150  000F7A  1002               	iorwf	(?_strncmp+1)^0,w,c
  3151  000F7C  A4D8               	btfss	status,2,c
  3152  000F7E  EFC3  F007         	goto	u7211
  3153  000F82  EFC5  F007         	goto	u7210
  3154  000F86                     u7211:
  3155  000F86  EF05  F008         	goto	l5345
  3156  000F8A                     u7210:
  3157  000F8A                     
  3158                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 993:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  3159  000F8A  0E03               	movlw	3
  3160  000F8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3161  000F90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3162  000F94  26DE               	addwf	postinc2,f,c
  3163  000F96  0E00               	movlw	0
  3164  000F98  22DD               	addwfc	postdec2,f,c
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 994:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3167  000F9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3168  000F9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3169  000FA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3170  000FA6  0E02               	movlw	2
  3171  000FA8  26DE               	addwf	postinc2,f,c
  3172  000FAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3173  000FAE  0E00               	movlw	0
  3174  000FB0  22DD               	addwfc	postdec2,f,c
  3175  000FB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3176  000FB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3177  000FBA  50DF               	movf	indf2,w,c
  3178  000FBC  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3179  000FBE  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3180  000FC0  0100               	movlb	0	; () banked
  3181  000FC2  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  3182  000FC4  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  3183  000FC6  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3184  000FC8  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3185  000FCA  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3186  000FCC  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3187  000FCE  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3188  000FD0  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3189  000FD2                     l5341:
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 996:             
      +                          return otoa(fp, llu);
  3193  000FD2  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  3194  000FD6  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  3195  000FDA  C0B4  F01E         	movff	vfpfcnvrt@llu,otoa@d
  3196  000FDE  C0B5  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  3197  000FE2  C0B6  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  3198  000FE6  C0B7  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  3199  000FEA  C0B8  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  3200  000FEE  C0B9  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  3201  000FF2  C0BA  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  3202  000FF6  C0BB  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  3203  000FFA  ECDB  F01F         	call	_otoa	;wreg free
  3204  000FFE  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  3205  001002  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  3206  001006  EF86  F00D         	goto	l1096
  3207  00100A                     l5345:
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1002:         if 
      +                          (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  3210  00100A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3211  00100E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3212  001012  CFDE F001          	movff	postinc2,strncmp@_l
  3213  001016  CFDD F002          	movff	postdec2,strncmp@_l+1
  3214  00101A  0E38               	movlw	low (STR_47+1)
  3215  00101C  6E03               	movwf	strncmp@_r^0,c
  3216  00101E  0E06               	movlw	high (STR_47+1)
  3217  001020  6E04               	movwf	(strncmp@_r+1)^0,c
  3218  001022  0E00               	movlw	0
  3219  001024  6E06               	movwf	(strncmp@n+1)^0,c
  3220  001026  0E02               	movlw	2
  3221  001028  6E05               	movwf	strncmp@n^0,c
  3222  00102A  EC3C  F025         	call	_strncmp	;wreg free
  3223  00102E  5001               	movf	?_strncmp^0,w,c
  3224  001030  1002               	iorwf	(?_strncmp+1)^0,w,c
  3225  001032  A4D8               	btfss	status,2,c
  3226  001034  EF1E  F008         	goto	u7221
  3227  001038  EF20  F008         	goto	u7220
  3228  00103C                     u7221:
  3229  00103C  EF49  F008         	goto	l5353
  3230  001040                     u7220:
  3231  001040                     
  3232                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1004:            
      +                           *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  3233  001040  0E02               	movlw	2
  3234  001042  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3235  001046  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3236  00104A  26DE               	addwf	postinc2,f,c
  3237  00104C  0E00               	movlw	0
  3238  00104E  22DD               	addwfc	postdec2,f,c
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1005:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3241  001050  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3242  001054  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3243  001058  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3244  00105C  0E02               	movlw	2
  3245  00105E  26DE               	addwf	postinc2,f,c
  3246  001060  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3247  001064  0E00               	movlw	0
  3248  001066  22DD               	addwfc	postdec2,f,c
  3249  001068  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3250  00106C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3251  001070  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3252  001074  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3253  001078  C04B  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3254  00107C  C04C  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3255  001080  0100               	movlb	0	; () banked
  3256  001082  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3257  001084  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3258  001086  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3259  001088  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3260  00108A  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3261  00108C  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3262  00108E  EFE9  F007         	goto	l5341
  3263  001092                     l5353:
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1012:         if 
      +                          (*fmt[0] == 'o') {
  3266  001092  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3267  001096  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3268  00109A  CFDE FFF6          	movff	postinc2,tblptrl
  3269  00109E  CFDD FFF7          	movff	postdec2,tblptrh
  3270  0010A2                     	if	0	;tblptru may be non-zero
  3271  0010A2                     	endif
  3272  0010A2                     	if	0	;tblptru may be non-zero
  3273  0010A2                     	endif
  3274  0010A2  0008               	tblrd		*
  3275  0010A4  50F5               	movf	tablat,w,c
  3276  0010A6  0A6F               	xorlw	111
  3277  0010A8  A4D8               	btfss	status,2,c
  3278  0010AA  EF59  F008         	goto	u7231
  3279  0010AE  EF5B  F008         	goto	u7230
  3280  0010B2                     u7231:
  3281  0010B2  EF83  F008         	goto	l5361
  3282  0010B6                     u7230:
  3283  0010B6                     
  3284                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1014:            
      +                           ++*fmt;
  3285  0010B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3286  0010BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3287  0010BE  2ADE               	incf	postinc2,f,c
  3288  0010C0  0E00               	movlw	0
  3289  0010C2  22DD               	addwfc	postdec2,f,c
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1015:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3292  0010C4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3293  0010C8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3294  0010CC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3295  0010D0  0E02               	movlw	2
  3296  0010D2  26DE               	addwf	postinc2,f,c
  3297  0010D4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3298  0010D8  0E00               	movlw	0
  3299  0010DA  22DD               	addwfc	postdec2,f,c
  3300  0010DC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3301  0010E0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3302  0010E4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3303  0010E8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3304  0010EC  C04B  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3305  0010F0  C04C  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3306  0010F4  0100               	movlb	0	; () banked
  3307  0010F6  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3308  0010F8  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3309  0010FA  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3310  0010FC  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3311  0010FE  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3312  001100  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3313  001102  EFE9  F007         	goto	l5341
  3314  001106                     l5361:
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1066:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  3317  001106  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3318  00110A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3319  00110E  CFDE F001          	movff	postinc2,strncmp@_l
  3320  001112  CFDD F002          	movff	postdec2,strncmp@_l+1
  3321  001116  0E52               	movlw	low STR_57
  3322  001118  6E03               	movwf	strncmp@_r^0,c
  3323  00111A  0E06               	movlw	high STR_57
  3324  00111C  6E04               	movwf	(strncmp@_r+1)^0,c
  3325  00111E  0E00               	movlw	0
  3326  001120  6E06               	movwf	(strncmp@n+1)^0,c
  3327  001122  0E02               	movlw	2
  3328  001124  6E05               	movwf	strncmp@n^0,c
  3329  001126  EC3C  F025         	call	_strncmp	;wreg free
  3330  00112A  5001               	movf	?_strncmp^0,w,c
  3331  00112C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3332  00112E  A4D8               	btfss	status,2,c
  3333  001130  EF9C  F008         	goto	u7241
  3334  001134  EF9E  F008         	goto	u7240
  3335  001138                     u7241:
  3336  001138  EFC7  F008         	goto	l5369
  3337  00113C                     u7240:
  3338  00113C                     
  3339                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1068:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  3340  00113C  0E02               	movlw	2
  3341  00113E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3342  001142  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3343  001146  26DE               	addwf	postinc2,f,c
  3344  001148  0E00               	movlw	0
  3345  00114A  22DD               	addwfc	postdec2,f,c
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1069:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3348  00114C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3349  001150  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3350  001154  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3351  001158  0E02               	movlw	2
  3352  00115A  26DE               	addwf	postinc2,f,c
  3353  00115C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3354  001160  0E00               	movlw	0
  3355  001162  22DD               	addwfc	postdec2,f,c
  3356  001164  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3357  001168  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3358  00116C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3359  001170  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3360  001174  C04B  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3361  001178  C04C  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3362  00117C  0100               	movlb	0	; () banked
  3363  00117E  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3364  001180  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3365  001182  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3366  001184  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3367  001186  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3368  001188  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3369  00118A  EFE9  F007         	goto	l5341
  3370  00118E                     l5369:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1080:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  3373  00118E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3374  001192  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3375  001196  CFDE F001          	movff	postinc2,strncmp@_l
  3376  00119A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3377  00119E  0E33               	movlw	low STR_62
  3378  0011A0  6E03               	movwf	strncmp@_r^0,c
  3379  0011A2  0E06               	movlw	high STR_62
  3380  0011A4  6E04               	movwf	(strncmp@_r+1)^0,c
  3381  0011A6  0E00               	movlw	0
  3382  0011A8  6E06               	movwf	(strncmp@n+1)^0,c
  3383  0011AA  0E03               	movlw	3
  3384  0011AC  6E05               	movwf	strncmp@n^0,c
  3385  0011AE  EC3C  F025         	call	_strncmp	;wreg free
  3386  0011B2  5001               	movf	?_strncmp^0,w,c
  3387  0011B4  1002               	iorwf	(?_strncmp+1)^0,w,c
  3388  0011B6  A4D8               	btfss	status,2,c
  3389  0011B8  EFE0  F008         	goto	u7251
  3390  0011BC  EFE2  F008         	goto	u7250
  3391  0011C0                     u7251:
  3392  0011C0  EF0A  F009         	goto	l5379
  3393  0011C4                     u7250:
  3394  0011C4                     
  3395                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1082:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  3396  0011C4  0E03               	movlw	3
  3397  0011C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3398  0011CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3399  0011CE  26DE               	addwf	postinc2,f,c
  3400  0011D0  0E00               	movlw	0
  3401  0011D2  22DD               	addwfc	postdec2,f,c
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1083:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3404  0011D4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3405  0011D8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3406  0011DC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3407  0011E0  0E02               	movlw	2
  3408  0011E2  26DE               	addwf	postinc2,f,c
  3409  0011E4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3410  0011E8  0E00               	movlw	0
  3411  0011EA  22DD               	addwfc	postdec2,f,c
  3412  0011EC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3413  0011F0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3414  0011F4  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  3415  0011F8  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  3416  0011FC                     
  3417                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1084:            
      +                           *(char *)vp = (char)nout;
  3418  0011FC  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3419  001200  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3420  001204  C0E9  FFDF         	movff	_nout,indf2
  3421  001208                     l5375:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1085:            
      +                           return 0;
  3424  001208  0E00               	movlw	0
  3425  00120A  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  3426  00120C  0E00               	movlw	0
  3427  00120E  6E43               	movwf	?_vfpfcnvrt^0,c
  3428  001210  EF86  F00D         	goto	l1096
  3429  001214                     l5379:
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1090:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  3432  001214  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3433  001218  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3434  00121C  CFDE F001          	movff	postinc2,strncmp@_l
  3435  001220  CFDD F002          	movff	postdec2,strncmp@_l+1
  3436  001224  0E34               	movlw	low (STR_62+1)
  3437  001226  6E03               	movwf	strncmp@_r^0,c
  3438  001228  0E06               	movlw	high (STR_62+1)
  3439  00122A  6E04               	movwf	(strncmp@_r+1)^0,c
  3440  00122C  0E00               	movlw	0
  3441  00122E  6E06               	movwf	(strncmp@n+1)^0,c
  3442  001230  0E02               	movlw	2
  3443  001232  6E05               	movwf	strncmp@n^0,c
  3444  001234  EC3C  F025         	call	_strncmp	;wreg free
  3445  001238  5001               	movf	?_strncmp^0,w,c
  3446  00123A  1002               	iorwf	(?_strncmp+1)^0,w,c
  3447  00123C  A4D8               	btfss	status,2,c
  3448  00123E  EF23  F009         	goto	u7261
  3449  001242  EF25  F009         	goto	u7260
  3450  001246                     u7261:
  3451  001246  EF4B  F009         	goto	l5389
  3452  00124A                     u7260:
  3453  00124A                     
  3454                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1092:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  3455  00124A  0E02               	movlw	2
  3456  00124C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3457  001250  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3458  001254  26DE               	addwf	postinc2,f,c
  3459  001256  0E00               	movlw	0
  3460  001258  22DD               	addwfc	postdec2,f,c
  3461                           
  3462                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1093:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  3463  00125A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3464  00125E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3465  001262  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3466  001266  0E02               	movlw	2
  3467  001268  26DE               	addwf	postinc2,f,c
  3468  00126A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3469  00126E  0E00               	movlw	0
  3470  001270  22DD               	addwfc	postdec2,f,c
  3471  001272  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3472  001276  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3473  00127A  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  3474  00127E  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  3475  001282                     
  3476                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1094:            
      +                           *(short *)vp = (short)nout;
  3477  001282  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3478  001286  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3479  00128A  C0E9  FFDE         	movff	_nout,postinc2
  3480  00128E  C0EA  FFDD         	movff	_nout+1,postdec2
  3481  001292  EF04  F009         	goto	l5375
  3482  001296                     l5389:
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  3485  001296  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3486  00129A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3487  00129E  CFDE FFF6          	movff	postinc2,tblptrl
  3488  0012A2  CFDD FFF7          	movff	postdec2,tblptrh
  3489  0012A6                     	if	0	;tblptru may be non-zero
  3490  0012A6                     	endif
  3491  0012A6                     	if	0	;tblptru may be non-zero
  3492  0012A6                     	endif
  3493  0012A6  0008               	tblrd		*
  3494  0012A8  50F5               	movf	tablat,w,c
  3495  0012AA  0A6E               	xorlw	110
  3496  0012AC  A4D8               	btfss	status,2,c
  3497  0012AE  EF5B  F009         	goto	u7271
  3498  0012B2  EF5D  F009         	goto	u7270
  3499  0012B6                     u7271:
  3500  0012B6  EF82  F009         	goto	l5399
  3501  0012BA                     u7270:
  3502  0012BA                     
  3503                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  3504  0012BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3505  0012BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3506  0012C2  2ADE               	incf	postinc2,f,c
  3507  0012C4  0E00               	movlw	0
  3508  0012C6  22DD               	addwfc	postdec2,f,c
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  3511  0012C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3512  0012CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3513  0012D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3514  0012D4  0E02               	movlw	2
  3515  0012D6  26DE               	addwf	postinc2,f,c
  3516  0012D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3517  0012DC  0E00               	movlw	0
  3518  0012DE  22DD               	addwfc	postdec2,f,c
  3519  0012E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3520  0012E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3521  0012E8  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  3522  0012EC  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  3523  0012F0                     
  3524                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  3525  0012F0  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3526  0012F4  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3527  0012F8  C0E9  FFDE         	movff	_nout,postinc2
  3528  0012FC  C0EA  FFDD         	movff	_nout+1,postdec2
  3529  001300  EF04  F009         	goto	l5375
  3530  001304                     l5399:
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1147:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  3533  001304  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3534  001308  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3535  00130C  CFDE F001          	movff	postinc2,strncmp@_l
  3536  001310  CFDD F002          	movff	postdec2,strncmp@_l+1
  3537  001314  0E4F               	movlw	low STR_72
  3538  001316  6E03               	movwf	strncmp@_r^0,c
  3539  001318  0E06               	movlw	high STR_72
  3540  00131A  6E04               	movwf	(strncmp@_r+1)^0,c
  3541  00131C  0E00               	movlw	0
  3542  00131E  6E06               	movwf	(strncmp@n+1)^0,c
  3543  001320  0E02               	movlw	2
  3544  001322  6E05               	movwf	strncmp@n^0,c
  3545  001324  EC3C  F025         	call	_strncmp	;wreg free
  3546  001328  5001               	movf	?_strncmp^0,w,c
  3547  00132A  1002               	iorwf	(?_strncmp+1)^0,w,c
  3548  00132C  A4D8               	btfss	status,2,c
  3549  00132E  EF9B  F009         	goto	u7281
  3550  001332  EF9D  F009         	goto	u7280
  3551  001336                     u7281:
  3552  001336  EFC3  F009         	goto	l5409
  3553  00133A                     u7280:
  3554  00133A                     
  3555                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1149:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  3556  00133A  0E02               	movlw	2
  3557  00133C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3558  001340  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3559  001344  26DE               	addwf	postinc2,f,c
  3560  001346  0E00               	movlw	0
  3561  001348  22DD               	addwfc	postdec2,f,c
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1150:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3564  00134A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3565  00134E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3566  001352  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3567  001356  0E02               	movlw	2
  3568  001358  26DE               	addwf	postinc2,f,c
  3569  00135A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3570  00135E  0E00               	movlw	0
  3571  001360  22DD               	addwfc	postdec2,f,c
  3572  001362  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3573  001366  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3574  00136A  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  3575  00136E  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  3576  001372                     
  3577                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1151:            
      +                           *(size_t *)vp = (size_t)nout;
  3578  001372  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  3579  001376  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  3580  00137A  C0E9  FFDE         	movff	_nout,postinc2
  3581  00137E  C0EA  FFDD         	movff	_nout+1,postdec2
  3582  001382  EF04  F009         	goto	l5375
  3583  001386                     l5409:
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1160:         if 
      +                          (*fmt[0] == 'p') {
  3586  001386  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3587  00138A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3588  00138E  CFDE FFF6          	movff	postinc2,tblptrl
  3589  001392  CFDD FFF7          	movff	postdec2,tblptrh
  3590  001396                     	if	0	;tblptru may be non-zero
  3591  001396                     	endif
  3592  001396                     	if	0	;tblptru may be non-zero
  3593  001396                     	endif
  3594  001396  0008               	tblrd		*
  3595  001398  50F5               	movf	tablat,w,c
  3596  00139A  0A70               	xorlw	112
  3597  00139C  A4D8               	btfss	status,2,c
  3598  00139E  EFD3  F009         	goto	u7291
  3599  0013A2  EFD5  F009         	goto	u7290
  3600  0013A6                     u7291:
  3601  0013A6  EF19  F00A         	goto	l5417
  3602  0013AA                     u7290:
  3603  0013AA                     
  3604                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1162:            
      +                           ++*fmt;
  3605  0013AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3606  0013AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3607  0013B2  2ADE               	incf	postinc2,f,c
  3608  0013B4  0E00               	movlw	0
  3609  0013B6  22DD               	addwfc	postdec2,f,c
  3610                           
  3611                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1163:            
      +                           llu = (unsigned long long)(uintptr_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  3612  0013B8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3613  0013BC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3614  0013C0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3615  0013C4  0E02               	movlw	2
  3616  0013C6  26DE               	addwf	postinc2,f,c
  3617  0013C8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3618  0013CC  0E00               	movlw	0
  3619  0013CE  22DD               	addwfc	postdec2,f,c
  3620  0013D0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3621  0013D4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3622  0013D8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3623  0013DC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3624  0013E0  C04B  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3625  0013E4  C04C  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3626  0013E8  0100               	movlb	0	; () banked
  3627  0013EA  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3628  0013EC  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3629  0013EE  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3630  0013F0  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3631  0013F2  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3632  0013F4  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3633  0013F6                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1165:            
      +                           return xtoa(fp, llu, 'x');
  3636  0013F6  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3637  0013FA  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3638  0013FE  C0B4  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3639  001402  C0B5  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3640  001406  C0B6  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3641  00140A  C0B7  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3642  00140E  C0B8  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3643  001412  C0B9  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3644  001416  C0BA  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3645  00141A  C0BB  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3646  00141E  0E78               	movlw	120
  3647  001420  6E26               	movwf	xtoa@x^0,c
  3648  001422  EC67  F01B         	call	_xtoa	;wreg free
  3649  001426  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3650  00142A  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3651  00142E  EF86  F00D         	goto	l1096
  3652  001432                     l5417:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  3655  001432  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3656  001436  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3657  00143A  CFDE FFF6          	movff	postinc2,tblptrl
  3658  00143E  CFDD FFF7          	movff	postdec2,tblptrh
  3659  001442                     	if	0	;tblptru may be non-zero
  3660  001442                     	endif
  3661  001442                     	if	0	;tblptru may be non-zero
  3662  001442                     	endif
  3663  001442  0008               	tblrd		*
  3664  001444  50F5               	movf	tablat,w,c
  3665  001446  0A73               	xorlw	115
  3666  001448  A4D8               	btfss	status,2,c
  3667  00144A  EF29  F00A         	goto	u7301
  3668  00144E  EF2B  F00A         	goto	u7300
  3669  001452                     u7301:
  3670  001452  EF56  F00A         	goto	l5425
  3671  001456                     u7300:
  3672  001456                     
  3673                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  3674  001456  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3675  00145A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3676  00145E  2ADE               	incf	postinc2,f,c
  3677  001460  0E00               	movlw	0
  3678  001462  22DD               	addwfc	postdec2,f,c
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3681  001464  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3682  001468  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3683  00146C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3684  001470  0E02               	movlw	2
  3685  001472  26DE               	addwf	postinc2,f,c
  3686  001474  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3687  001478  0E00               	movlw	0
  3688  00147A  22DD               	addwfc	postdec2,f,c
  3689  00147C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3690  001480  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3691  001484  CFDE F098          	movff	postinc2,vfpfcnvrt@cp
  3692  001488  CFDD F099          	movff	postdec2,vfpfcnvrt@cp+1
  3693  00148C                     
  3694                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  3695  00148C  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3696  001490  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3697  001494  C098  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3698  001498  C099  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3699  00149C  EC39  F023         	call	_stoa	;wreg free
  3700  0014A0  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  3701  0014A4  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  3702  0014A8  EF86  F00D         	goto	l1096
  3703  0014AC                     l5425:
  3704                           
  3705                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1183:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3706  0014AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3707  0014B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3708  0014B4  CFDE F001          	movff	postinc2,strncmp@_l
  3709  0014B8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3710  0014BC  0E3B               	movlw	low STR_77
  3711  0014BE  6E03               	movwf	strncmp@_r^0,c
  3712  0014C0  0E06               	movlw	high STR_77
  3713  0014C2  6E04               	movwf	(strncmp@_r+1)^0,c
  3714  0014C4  0E00               	movlw	0
  3715  0014C6  6E06               	movwf	(strncmp@n+1)^0,c
  3716  0014C8  0E03               	movlw	3
  3717  0014CA  6E05               	movwf	strncmp@n^0,c
  3718  0014CC  EC3C  F025         	call	_strncmp	;wreg free
  3719  0014D0  5001               	movf	?_strncmp^0,w,c
  3720  0014D2  1002               	iorwf	(?_strncmp+1)^0,w,c
  3721  0014D4  A4D8               	btfss	status,2,c
  3722  0014D6  EF6F  F00A         	goto	u7311
  3723  0014DA  EF71  F00A         	goto	u7310
  3724  0014DE                     u7311:
  3725  0014DE  EFB1  F00A         	goto	l5433
  3726  0014E2                     u7310:
  3727  0014E2                     
  3728                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1185:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  3729  0014E2  0E03               	movlw	3
  3730  0014E4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3731  0014E8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3732  0014EC  26DE               	addwf	postinc2,f,c
  3733  0014EE  0E00               	movlw	0
  3734  0014F0  22DD               	addwfc	postdec2,f,c
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1186:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3737  0014F2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3738  0014F6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3739  0014FA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3740  0014FE  0E02               	movlw	2
  3741  001500  26DE               	addwf	postinc2,f,c
  3742  001502  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3743  001506  0E00               	movlw	0
  3744  001508  22DD               	addwfc	postdec2,f,c
  3745  00150A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3746  00150E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3747  001512  50DF               	movf	indf2,w,c
  3748  001514  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3749  001516  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3750  001518  0100               	movlb	0	; () banked
  3751  00151A  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  3752  00151C  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  3753  00151E  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3754  001520  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3755  001522  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3756  001524  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3757  001526  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3758  001528  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3759  00152A                     l5429:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1188:            
      +                           return utoa(fp, llu);
  3763  00152A  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3764  00152E  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3765  001532  C0B4  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3766  001536  C0B5  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3767  00153A  C0B6  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3768  00153E  C0B7  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3769  001542  C0B8  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3770  001546  C0B9  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3771  00154A  C0BA  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3772  00154E  C0BB  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3773  001552  ECDD  F01D         	call	_utoa	;wreg free
  3774  001556  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3775  00155A  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3776  00155E  EF86  F00D         	goto	l1096
  3777  001562                     l5433:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1194:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3780  001562  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3781  001566  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3782  00156A  CFDE F001          	movff	postinc2,strncmp@_l
  3783  00156E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3784  001572  0E3C               	movlw	low (STR_77+1)
  3785  001574  6E03               	movwf	strncmp@_r^0,c
  3786  001576  0E06               	movlw	high (STR_77+1)
  3787  001578  6E04               	movwf	(strncmp@_r+1)^0,c
  3788  00157A  0E00               	movlw	0
  3789  00157C  6E06               	movwf	(strncmp@n+1)^0,c
  3790  00157E  0E02               	movlw	2
  3791  001580  6E05               	movwf	strncmp@n^0,c
  3792  001582  EC3C  F025         	call	_strncmp	;wreg free
  3793  001586  5001               	movf	?_strncmp^0,w,c
  3794  001588  1002               	iorwf	(?_strncmp+1)^0,w,c
  3795  00158A  A4D8               	btfss	status,2,c
  3796  00158C  EFCA  F00A         	goto	u7321
  3797  001590  EFCC  F00A         	goto	u7320
  3798  001594                     u7321:
  3799  001594  EFF5  F00A         	goto	l5441
  3800  001598                     u7320:
  3801  001598                     
  3802                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1196:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  3803  001598  0E02               	movlw	2
  3804  00159A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3805  00159E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3806  0015A2  26DE               	addwf	postinc2,f,c
  3807  0015A4  0E00               	movlw	0
  3808  0015A6  22DD               	addwfc	postdec2,f,c
  3809                           
  3810                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1197:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3811  0015A8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3812  0015AC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3813  0015B0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3814  0015B4  0E02               	movlw	2
  3815  0015B6  26DE               	addwf	postinc2,f,c
  3816  0015B8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3817  0015BC  0E00               	movlw	0
  3818  0015BE  22DD               	addwfc	postdec2,f,c
  3819  0015C0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3820  0015C4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3821  0015C8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3822  0015CC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3823  0015D0  C04B  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3824  0015D4  C04C  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3825  0015D8  0100               	movlb	0	; () banked
  3826  0015DA  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3827  0015DC  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3828  0015DE  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3829  0015E0  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3830  0015E2  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3831  0015E4  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3832  0015E6  EF95  F00A         	goto	l5429
  3833  0015EA                     l5441:
  3834                           
  3835                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3836  0015EA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3837  0015EE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3838  0015F2  CFDE FFF6          	movff	postinc2,tblptrl
  3839  0015F6  CFDD FFF7          	movff	postdec2,tblptrh
  3840  0015FA                     	if	0	;tblptru may be non-zero
  3841  0015FA                     	endif
  3842  0015FA                     	if	0	;tblptru may be non-zero
  3843  0015FA                     	endif
  3844  0015FA  0008               	tblrd		*
  3845  0015FC  50F5               	movf	tablat,w,c
  3846  0015FE  0A75               	xorlw	117
  3847  001600  A4D8               	btfss	status,2,c
  3848  001602  EF05  F00B         	goto	u7331
  3849  001606  EF07  F00B         	goto	u7330
  3850  00160A                     u7331:
  3851  00160A  EF2F  F00B         	goto	l5449
  3852  00160E                     u7330:
  3853  00160E                     
  3854                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3855  00160E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3856  001612  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3857  001616  2ADE               	incf	postinc2,f,c
  3858  001618  0E00               	movlw	0
  3859  00161A  22DD               	addwfc	postdec2,f,c
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3862  00161C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3863  001620  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3864  001624  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3865  001628  0E02               	movlw	2
  3866  00162A  26DE               	addwf	postinc2,f,c
  3867  00162C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3868  001630  0E00               	movlw	0
  3869  001632  22DD               	addwfc	postdec2,f,c
  3870  001634  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3871  001638  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3872  00163C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3873  001640  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3874  001644  C04B  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3875  001648  C04C  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3876  00164C  0100               	movlb	0	; () banked
  3877  00164E  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3878  001650  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3879  001652  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3880  001654  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3881  001656  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3882  001658  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3883  00165A  EF95  F00A         	goto	l5429
  3884  00165E                     l5449:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1258:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3887  00165E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3888  001662  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3889  001666  CFDE F001          	movff	postinc2,strncmp@_l
  3890  00166A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3891  00166E  0E55               	movlw	low STR_87
  3892  001670  6E03               	movwf	strncmp@_r^0,c
  3893  001672  0E06               	movlw	high STR_87
  3894  001674  6E04               	movwf	(strncmp@_r+1)^0,c
  3895  001676  0E00               	movlw	0
  3896  001678  6E06               	movwf	(strncmp@n+1)^0,c
  3897  00167A  0E02               	movlw	2
  3898  00167C  6E05               	movwf	strncmp@n^0,c
  3899  00167E  EC3C  F025         	call	_strncmp	;wreg free
  3900  001682  5001               	movf	?_strncmp^0,w,c
  3901  001684  1002               	iorwf	(?_strncmp+1)^0,w,c
  3902  001686  A4D8               	btfss	status,2,c
  3903  001688  EF48  F00B         	goto	u7341
  3904  00168C  EF4A  F00B         	goto	u7340
  3905  001690                     u7341:
  3906  001690  EF73  F00B         	goto	l5457
  3907  001694                     u7340:
  3908  001694                     
  3909                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1260:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  3910  001694  0E02               	movlw	2
  3911  001696  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3912  00169A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3913  00169E  26DE               	addwf	postinc2,f,c
  3914  0016A0  0E00               	movlw	0
  3915  0016A2  22DD               	addwfc	postdec2,f,c
  3916                           
  3917                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1261:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3918  0016A4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3919  0016A8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3920  0016AC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3921  0016B0  0E02               	movlw	2
  3922  0016B2  26DE               	addwf	postinc2,f,c
  3923  0016B4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3924  0016B8  0E00               	movlw	0
  3925  0016BA  22DD               	addwfc	postdec2,f,c
  3926  0016BC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3927  0016C0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3928  0016C4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3929  0016C8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3930  0016CC  C04B  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3931  0016D0  C04C  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3932  0016D4  0100               	movlb	0	; () banked
  3933  0016D6  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3934  0016D8  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3935  0016DA  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3936  0016DC  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3937  0016DE  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3938  0016E0  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3939  0016E2  EF95  F00A         	goto	l5429
  3940  0016E6                     l5457:
  3941                           
  3942                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1271:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  3943  0016E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3944  0016EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3945  0016EE  CFDE F001          	movff	postinc2,strncmp@_l
  3946  0016F2  CFDD F002          	movff	postdec2,strncmp@_l+1
  3947  0016F6  0E3F               	movlw	low STR_92
  3948  0016F8  6E03               	movwf	strncmp@_r^0,c
  3949  0016FA  0E06               	movlw	high STR_92
  3950  0016FC  6E04               	movwf	(strncmp@_r+1)^0,c
  3951  0016FE  0E00               	movlw	0
  3952  001700  6E06               	movwf	(strncmp@n+1)^0,c
  3953  001702  0E03               	movlw	3
  3954  001704  6E05               	movwf	strncmp@n^0,c
  3955  001706  EC3C  F025         	call	_strncmp	;wreg free
  3956  00170A  5001               	movf	?_strncmp^0,w,c
  3957  00170C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3958  00170E  B4D8               	btfsc	status,2,c
  3959  001710  EF8C  F00B         	goto	u7351
  3960  001714  EF8E  F00B         	goto	u7350
  3961  001718                     u7351:
  3962  001718  EFA9  F00B         	goto	l5461
  3963  00171C                     u7350:
  3964  00171C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3965  001720  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3966  001724  CFDE F001          	movff	postinc2,strncmp@_l
  3967  001728  CFDD F002          	movff	postdec2,strncmp@_l+1
  3968  00172C  0E1F               	movlw	low STR_96
  3969  00172E  6E03               	movwf	strncmp@_r^0,c
  3970  001730  0E06               	movlw	high STR_96
  3971  001732  6E04               	movwf	(strncmp@_r+1)^0,c
  3972  001734  0E00               	movlw	0
  3973  001736  6E06               	movwf	(strncmp@n+1)^0,c
  3974  001738  0E03               	movlw	3
  3975  00173A  6E05               	movwf	strncmp@n^0,c
  3976  00173C  EC3C  F025         	call	_strncmp	;wreg free
  3977  001740  5001               	movf	?_strncmp^0,w,c
  3978  001742  1002               	iorwf	(?_strncmp+1)^0,w,c
  3979  001744  A4D8               	btfss	status,2,c
  3980  001746  EFA7  F00B         	goto	u7361
  3981  00174A  EFA9  F00B         	goto	u7360
  3982  00174E                     u7361:
  3983  00174E  EFFE  F00B         	goto	l5471
  3984  001752                     u7360:
  3985  001752                     l5461:
  3986                           
  3987                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1272: ;C:\Program
      +                           Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1274:             c = (*fmt)
      +                          [2];
  3988  001752  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3989  001756  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3990  00175A  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3991  00175E  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3992  001762  0E02               	movlw	2
  3993  001764  2649               	addwf	??_vfpfcnvrt^0,f,c
  3994  001766  0E00               	movlw	0
  3995  001768  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3996  00176A  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3997  00176E  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3998  001772                     	if	0	;tblptru may be non-zero
  3999  001772                     	endif
  4000  001772                     	if	0	;tblptru may be non-zero
  4001  001772                     	endif
  4002  001772  0008               	tblrd		*
  4003  001774  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  4004  001778                     
  4005                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1275:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  4006  001778  0E03               	movlw	3
  4007  00177A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4008  00177E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4009  001782  26DE               	addwf	postinc2,f,c
  4010  001784  0E00               	movlw	0
  4011  001786  22DD               	addwfc	postdec2,f,c
  4012  001788                     
  4013                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1276:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4014  001788  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4015  00178C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4016  001790  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4017  001794  0E02               	movlw	2
  4018  001796  26DE               	addwf	postinc2,f,c
  4019  001798  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4020  00179C  0E00               	movlw	0
  4021  00179E  22DD               	addwfc	postdec2,f,c
  4022  0017A0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4023  0017A4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4024  0017A8  50DF               	movf	indf2,w,c
  4025  0017AA  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4026  0017AC  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4027  0017AE  0100               	movlb	0	; () banked
  4028  0017B0  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  4029  0017B2  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4030  0017B4  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4031  0017B6  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4032  0017B8  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4033  0017BA  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4034  0017BC  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4035  0017BE  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4036  0017C0                     l5467:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1278:            
      +                           return xtoa(fp, llu, c);
  4040  0017C0  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4041  0017C4  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4042  0017C8  C0B4  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4043  0017CC  C0B5  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4044  0017D0  C0B6  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4045  0017D4  C0B7  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4046  0017D8  C0B8  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4047  0017DC  C0B9  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4048  0017E0  C0BA  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4049  0017E4  C0BB  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4050  0017E8  C0B3  F026         	movff	vfpfcnvrt@c,xtoa@x
  4051  0017EC  EC67  F01B         	call	_xtoa	;wreg free
  4052  0017F0  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4053  0017F4  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4054  0017F8  EF86  F00D         	goto	l1096
  4055  0017FC                     l5471:
  4056                           
  4057                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1284:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  4058  0017FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4059  001800  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4060  001804  CFDE F001          	movff	postinc2,strncmp@_l
  4061  001808  CFDD F002          	movff	postdec2,strncmp@_l+1
  4062  00180C  0E40               	movlw	low (STR_92+1)
  4063  00180E  6E03               	movwf	strncmp@_r^0,c
  4064  001810  0E06               	movlw	high (STR_92+1)
  4065  001812  6E04               	movwf	(strncmp@_r+1)^0,c
  4066  001814  0E00               	movlw	0
  4067  001816  6E06               	movwf	(strncmp@n+1)^0,c
  4068  001818  0E02               	movlw	2
  4069  00181A  6E05               	movwf	strncmp@n^0,c
  4070  00181C  EC3C  F025         	call	_strncmp	;wreg free
  4071  001820  5001               	movf	?_strncmp^0,w,c
  4072  001822  1002               	iorwf	(?_strncmp+1)^0,w,c
  4073  001824  B4D8               	btfsc	status,2,c
  4074  001826  EF17  F00C         	goto	u7371
  4075  00182A  EF19  F00C         	goto	u7370
  4076  00182E                     u7371:
  4077  00182E  EF34  F00C         	goto	l5475
  4078  001832                     u7370:
  4079  001832  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4080  001836  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4081  00183A  CFDE F001          	movff	postinc2,strncmp@_l
  4082  00183E  CFDD F002          	movff	postdec2,strncmp@_l+1
  4083  001842  0E20               	movlw	low (STR_96+1)
  4084  001844  6E03               	movwf	strncmp@_r^0,c
  4085  001846  0E06               	movlw	high (STR_96+1)
  4086  001848  6E04               	movwf	(strncmp@_r+1)^0,c
  4087  00184A  0E00               	movlw	0
  4088  00184C  6E06               	movwf	(strncmp@n+1)^0,c
  4089  00184E  0E02               	movlw	2
  4090  001850  6E05               	movwf	strncmp@n^0,c
  4091  001852  EC3C  F025         	call	_strncmp	;wreg free
  4092  001856  5001               	movf	?_strncmp^0,w,c
  4093  001858  1002               	iorwf	(?_strncmp+1)^0,w,c
  4094  00185A  A4D8               	btfss	status,2,c
  4095  00185C  EF32  F00C         	goto	u7381
  4096  001860  EF34  F00C         	goto	u7380
  4097  001864                     u7381:
  4098  001864  EF70  F00C         	goto	l5485
  4099  001868                     u7380:
  4100  001868                     l5475:
  4101                           
  4102                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1285: ;C:\Program
      +                           Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1287:             c = (*fmt)
      +                          [1];
  4103  001868  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4104  00186C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4105  001870  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4106  001874  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4107  001878  0E01               	movlw	1
  4108  00187A  2649               	addwf	??_vfpfcnvrt^0,f,c
  4109  00187C  0E00               	movlw	0
  4110  00187E  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4111  001880  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4112  001884  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4113  001888                     	if	0	;tblptru may be non-zero
  4114  001888                     	endif
  4115  001888                     	if	0	;tblptru may be non-zero
  4116  001888                     	endif
  4117  001888  0008               	tblrd		*
  4118  00188A  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  4119  00188E                     
  4120                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1288:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  4121  00188E  0E02               	movlw	2
  4122  001890  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4123  001894  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4124  001898  26DE               	addwf	postinc2,f,c
  4125  00189A  0E00               	movlw	0
  4126  00189C  22DD               	addwfc	postdec2,f,c
  4127  00189E                     
  4128                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1289:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4129  00189E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4130  0018A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4131  0018A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4132  0018AA  0E02               	movlw	2
  4133  0018AC  26DE               	addwf	postinc2,f,c
  4134  0018AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4135  0018B2  0E00               	movlw	0
  4136  0018B4  22DD               	addwfc	postdec2,f,c
  4137  0018B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4138  0018BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4139  0018BE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4140  0018C2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4141  0018C6  C04B  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4142  0018CA  C04C  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4143  0018CE  0100               	movlb	0	; () banked
  4144  0018D0  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4145  0018D2  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4146  0018D4  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4147  0018D6  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4148  0018D8  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4149  0018DA  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4150  0018DC  EFE0  F00B         	goto	l5467
  4151  0018E0                     l5485:
  4152                           
  4153                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4154  0018E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4155  0018E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4156  0018E8  CFDE FFF6          	movff	postinc2,tblptrl
  4157  0018EC  CFDD FFF7          	movff	postdec2,tblptrh
  4158  0018F0                     	if	0	;tblptru may be non-zero
  4159  0018F0                     	endif
  4160  0018F0                     	if	0	;tblptru may be non-zero
  4161  0018F0                     	endif
  4162  0018F0  0008               	tblrd		*
  4163  0018F2  50F5               	movf	tablat,w,c
  4164  0018F4  0A78               	xorlw	120
  4165  0018F6  B4D8               	btfsc	status,2,c
  4166  0018F8  EF80  F00C         	goto	u7391
  4167  0018FC  EF82  F00C         	goto	u7390
  4168  001900                     u7391:
  4169  001900  EF94  F00C         	goto	l5489
  4170  001904                     u7390:
  4171  001904  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4172  001908  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4173  00190C  CFDE FFF6          	movff	postinc2,tblptrl
  4174  001910  CFDD FFF7          	movff	postdec2,tblptrh
  4175  001914                     	if	0	;tblptru may be non-zero
  4176  001914                     	endif
  4177  001914                     	if	0	;tblptru may be non-zero
  4178  001914                     	endif
  4179  001914  0008               	tblrd		*
  4180  001916  50F5               	movf	tablat,w,c
  4181  001918  0A58               	xorlw	88
  4182  00191A  A4D8               	btfss	status,2,c
  4183  00191C  EF92  F00C         	goto	u7401
  4184  001920  EF94  F00C         	goto	u7400
  4185  001924                     u7401:
  4186  001924  EFC7  F00C         	goto	l5499
  4187  001928                     u7400:
  4188  001928                     l5489:
  4189                           
  4190                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  4191  001928  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4192  00192C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4193  001930  CFDE FFF6          	movff	postinc2,tblptrl
  4194  001934  CFDD FFF7          	movff	postdec2,tblptrh
  4195  001938                     	if	0	;tblptru may be non-zero
  4196  001938                     	endif
  4197  001938                     	if	0	;tblptru may be non-zero
  4198  001938                     	endif
  4199  001938  0008               	tblrd		*
  4200  00193A  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  4201  00193E                     
  4202                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  4203  00193E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4204  001942  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4205  001946  2ADE               	incf	postinc2,f,c
  4206  001948  0E00               	movlw	0
  4207  00194A  22DD               	addwfc	postdec2,f,c
  4208  00194C                     
  4209                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4210  00194C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4211  001950  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4212  001954  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4213  001958  0E02               	movlw	2
  4214  00195A  26DE               	addwf	postinc2,f,c
  4215  00195C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4216  001960  0E00               	movlw	0
  4217  001962  22DD               	addwfc	postdec2,f,c
  4218  001964  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4219  001968  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4220  00196C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4221  001970  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4222  001974  C04B  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4223  001978  C04C  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4224  00197C  0100               	movlb	0	; () banked
  4225  00197E  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4226  001980  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4227  001982  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4228  001984  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4229  001986  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4230  001988  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4231  00198A  EFE0  F00B         	goto	l5467
  4232  00198E                     l5499:
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1359:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  4235  00198E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4236  001992  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4237  001996  CFDE F001          	movff	postinc2,strncmp@_l
  4238  00199A  CFDD F002          	movff	postdec2,strncmp@_l+1
  4239  00199E  0E58               	movlw	low STR_110
  4240  0019A0  6E03               	movwf	strncmp@_r^0,c
  4241  0019A2  0E06               	movlw	high STR_110
  4242  0019A4  6E04               	movwf	(strncmp@_r+1)^0,c
  4243  0019A6  0E00               	movlw	0
  4244  0019A8  6E06               	movwf	(strncmp@n+1)^0,c
  4245  0019AA  0E02               	movlw	2
  4246  0019AC  6E05               	movwf	strncmp@n^0,c
  4247  0019AE  EC3C  F025         	call	_strncmp	;wreg free
  4248  0019B2  5001               	movf	?_strncmp^0,w,c
  4249  0019B4  1002               	iorwf	(?_strncmp+1)^0,w,c
  4250  0019B6  B4D8               	btfsc	status,2,c
  4251  0019B8  EFE0  F00C         	goto	u7411
  4252  0019BC  EFE2  F00C         	goto	u7410
  4253  0019C0                     u7411:
  4254  0019C0  EFFD  F00C         	goto	l5503
  4255  0019C4                     u7410:
  4256  0019C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4257  0019C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4258  0019CC  CFDE F001          	movff	postinc2,strncmp@_l
  4259  0019D0  CFDD F002          	movff	postdec2,strncmp@_l+1
  4260  0019D4  0E43               	movlw	low STR_114
  4261  0019D6  6E03               	movwf	strncmp@_r^0,c
  4262  0019D8  0E06               	movlw	high STR_114
  4263  0019DA  6E04               	movwf	(strncmp@_r+1)^0,c
  4264  0019DC  0E00               	movlw	0
  4265  0019DE  6E06               	movwf	(strncmp@n+1)^0,c
  4266  0019E0  0E02               	movlw	2
  4267  0019E2  6E05               	movwf	strncmp@n^0,c
  4268  0019E4  EC3C  F025         	call	_strncmp	;wreg free
  4269  0019E8  5001               	movf	?_strncmp^0,w,c
  4270  0019EA  1002               	iorwf	(?_strncmp+1)^0,w,c
  4271  0019EC  A4D8               	btfss	status,2,c
  4272  0019EE  EFFB  F00C         	goto	u7421
  4273  0019F2  EFFD  F00C         	goto	u7420
  4274  0019F6                     u7421:
  4275  0019F6  EF39  F00D         	goto	l5513
  4276  0019FA                     u7420:
  4277  0019FA                     l5503:
  4278                           
  4279                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1360: ;C:\Program
      +                           Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1362:             c = (*fmt)
      +                          [1];
  4280  0019FA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4281  0019FE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4282  001A02  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4283  001A06  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4284  001A0A  0E01               	movlw	1
  4285  001A0C  2649               	addwf	??_vfpfcnvrt^0,f,c
  4286  001A0E  0E00               	movlw	0
  4287  001A10  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4288  001A12  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4289  001A16  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4290  001A1A                     	if	0	;tblptru may be non-zero
  4291  001A1A                     	endif
  4292  001A1A                     	if	0	;tblptru may be non-zero
  4293  001A1A                     	endif
  4294  001A1A  0008               	tblrd		*
  4295  001A1C  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  4296  001A20                     
  4297                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1363:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  4298  001A20  0E02               	movlw	2
  4299  001A22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4300  001A26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4301  001A2A  26DE               	addwf	postinc2,f,c
  4302  001A2C  0E00               	movlw	0
  4303  001A2E  22DD               	addwfc	postdec2,f,c
  4304  001A30                     
  4305                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1364:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4306  001A30  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4307  001A34  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4308  001A38  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4309  001A3C  0E02               	movlw	2
  4310  001A3E  26DE               	addwf	postinc2,f,c
  4311  001A40  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4312  001A44  0E00               	movlw	0
  4313  001A46  22DD               	addwfc	postdec2,f,c
  4314  001A48  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4315  001A4C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4316  001A50  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4317  001A54  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4318  001A58  C04B  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4319  001A5C  C04C  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4320  001A60  0100               	movlb	0	; () banked
  4321  001A62  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4322  001A64  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4323  001A66  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4324  001A68  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4325  001A6A  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4326  001A6C  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4327  001A6E  EFE0  F00B         	goto	l5467
  4328  001A72                     l5513:
  4329                           
  4330                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4331  001A72  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4332  001A76  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4333  001A7A  CFDE FFF6          	movff	postinc2,tblptrl
  4334  001A7E  CFDD FFF7          	movff	postdec2,tblptrh
  4335  001A82                     	if	0	;tblptru may be non-zero
  4336  001A82                     	endif
  4337  001A82                     	if	0	;tblptru may be non-zero
  4338  001A82                     	endif
  4339  001A82  0008               	tblrd		*
  4340  001A84  50F5               	movf	tablat,w,c
  4341  001A86  0A25               	xorlw	37
  4342  001A88  A4D8               	btfss	status,2,c
  4343  001A8A  EF49  F00D         	goto	u7431
  4344  001A8E  EF4B  F00D         	goto	u7430
  4345  001A92                     u7431:
  4346  001A92  EF62  F00D         	goto	l5523
  4347  001A96                     u7430:
  4348  001A96                     
  4349                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4350  001A96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4351  001A9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4352  001A9E  2ADE               	incf	postinc2,f,c
  4353  001AA0  0E00               	movlw	0
  4354  001AA2  22DD               	addwfc	postdec2,f,c
  4355  001AA4                     
  4356                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4357  001AA4  0E00               	movlw	0
  4358  001AA6  6E02               	movwf	(fputc@c+1)^0,c
  4359  001AA8  0E25               	movlw	37
  4360  001AAA  6E01               	movwf	fputc@c^0,c
  4361  001AAC  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4362  001AB0  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4363  001AB4  EC99  F028         	call	_fputc	;wreg free
  4364  001AB8                     l5519:
  4365                           
  4366                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4367  001AB8  0E00               	movlw	0
  4368  001ABA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4369  001ABC  0E01               	movlw	1
  4370  001ABE  6E43               	movwf	?_vfpfcnvrt^0,c
  4371  001AC0  EF86  F00D         	goto	l1096
  4372  001AC4                     l5523:
  4373                           
  4374                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4375  001AC4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4376  001AC8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4377  001ACC  2ADE               	incf	postinc2,f,c
  4378  001ACE  0E00               	movlw	0
  4379  001AD0  22DD               	addwfc	postdec2,f,c
  4380  001AD2  EF04  F009         	goto	l5375
  4381  001AD6                     l5529:
  4382                           
  4383                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4384  001AD6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4385  001ADA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4386  001ADE  CFDE FFF6          	movff	postinc2,tblptrl
  4387  001AE2  CFDD FFF7          	movff	postdec2,tblptrh
  4388  001AE6                     	if	0	;tblptru may be non-zero
  4389  001AE6                     	endif
  4390  001AE6                     	if	0	;tblptru may be non-zero
  4391  001AE6                     	endif
  4392  001AE6  0008               	tblrd		*
  4393  001AE8  50F5               	movf	tablat,w,c
  4394  001AEA  6E01               	movwf	fputc@c^0,c
  4395  001AEC  6A02               	clrf	(fputc@c+1)^0,c
  4396  001AEE  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4397  001AF2  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4398  001AF6  EC99  F028         	call	_fputc	;wreg free
  4399  001AFA                     
  4400                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4401  001AFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4402  001AFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4403  001B02  2ADE               	incf	postinc2,f,c
  4404  001B04  0E00               	movlw	0
  4405  001B06  22DD               	addwfc	postdec2,f,c
  4406  001B08  EF5C  F00D         	goto	l5519
  4407  001B0C                     l1096:
  4408  001B0C  0012               	return		;funcret
  4409  001B0E                     __end_of_vfpfcnvrt:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _xtoa *****************
  4413 ;; Defined at:
  4414 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4417 ;;		 -> vsnprintf@f(6), 
  4418 ;;  d               8   29[COMRAM] unsigned long long 
  4419 ;;  x               1   37[COMRAM] unsigned char 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  n               8   54[COMRAM] unsigned long long 
  4422 ;;  c               2   64[COMRAM] int 
  4423 ;;  i               2   62[COMRAM] int 
  4424 ;;  w               2   52[COMRAM] int 
  4425 ;;  p               2   50[COMRAM] int 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  2   27[COMRAM] int 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4435 ;;      Params:        11       0       0       0       0       0       0
  4436 ;;      Locals:        20       0       0       0       0       0       0
  4437 ;;      Temps:          8       0       0       0       0       0       0
  4438 ;;      Totals:        39       0       0       0       0       0       0
  4439 ;;Total ram usage:       39 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    4
  4442 ;; This function calls:
  4443 ;;		_isalpha
  4444 ;;		_isupper
  4445 ;;		_pad
  4446 ;;		_toupper
  4447 ;; This function is called by:
  4448 ;;		_vfpfcnvrt
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text5
  4453  0036CE                     __ptext5:
  4454                           	callstack 0
  4455  0036CE                     _xtoa:
  4456                           	callstack 22
  4457  0036CE                     
  4458                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  4459  0036CE  0100               	movlb	0	; () banked
  4460  0036D0  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  4461  0036D2  EF6D  F01B         	goto	u6611
  4462  0036D6  EF6F  F01B         	goto	u6610
  4463  0036DA                     u6611:
  4464  0036DA  EF70  F01B         	goto	l5049
  4465  0036DE                     u6610:
  4466  0036DE                     
  4467                           ; BSR set to: 0
  4468                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  4469  0036DE  93EF               	bcf	_flags& (0+255),1,b
  4470  0036E0                     l5049:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  4474  0036E0  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  4475  0036E2  EF7D  F01B         	goto	u6620
  4476  0036E6  51EE               	movf	(_prec+1)& (0+255),w,b
  4477  0036E8  E106               	bnz	u6621
  4478  0036EA  05ED               	decf	_prec& (0+255),w,b
  4479  0036EC  B0D8               	btfsc	status,0,c
  4480  0036EE  EF7B  F01B         	goto	u6621
  4481  0036F2  EF7D  F01B         	goto	u6620
  4482  0036F6                     u6621:
  4483  0036F6  EF83  F01B         	goto	l1032
  4484  0036FA                     u6620:
  4485  0036FA                     
  4486                           ; BSR set to: 0
  4487  0036FA  0E00               	movlw	0
  4488  0036FC  6E34               	movwf	(xtoa@p+1)^0,c
  4489  0036FE  0E01               	movlw	1
  4490  003700  6E33               	movwf	xtoa@p^0,c
  4491  003702  EF87  F01B         	goto	l1034
  4492  003706                     l1032:
  4493                           
  4494                           ; BSR set to: 0
  4495  003706  C0ED  F033         	movff	_prec,xtoa@p
  4496  00370A  C0EE  F034         	movff	_prec+1,xtoa@p+1
  4497  00370E                     l1034:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  4501  00370E  C0EB  F035         	movff	_width,xtoa@w
  4502  003712  C0EC  F036         	movff	_width+1,xtoa@w+1
  4503                           
  4504                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4505  003716  A9EF               	btfss	_flags& (0+255),4,b
  4506  003718  EF90  F01B         	goto	u6631
  4507  00371C  EF92  F01B         	goto	u6630
  4508  003720                     u6631:
  4509  003720  EF96  F01B         	goto	l5055
  4510  003724                     u6630:
  4511  003724                     
  4512                           ; BSR set to: 0
  4513                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  4514  003724  0EFE               	movlw	254
  4515  003726  2635               	addwf	xtoa@w^0,f,c
  4516  003728  0EFF               	movlw	255
  4517  00372A  2236               	addwfc	(xtoa@w+1)^0,f,c
  4518  00372C                     l5055:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 661:     n = d;
  4522  00372C  C01E  F037         	movff	xtoa@d,xtoa@n
  4523  003730  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4524  003734  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4525  003738  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4526  00373C  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4527  003740  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4528  003744  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4529  003748  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4530  00374C                     
  4531                           ; BSR set to: 0
  4532                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  4533  00374C  0E00               	movlw	0
  4534  00374E  6E40               	movwf	(xtoa@i+1)^0,c
  4535  003750  0E4F               	movlw	79
  4536  003752  6E3F               	movwf	xtoa@i^0,c
  4537  003754                     
  4538                           ; BSR set to: 0
  4539                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  4540  003754  0E00               	movlw	0
  4541  003756  0101               	movlb	1	; () banked
  4542  003758  6F4F               	movwf	(_dbuf+79)& (0+255),b
  4543                           
  4544                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4545  00375A  EF62  F01C         	goto	l5091
  4546  00375E                     l5061:
  4547                           
  4548                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 665:         --i;
  4549  00375E  063F               	decf	xtoa@i^0,f,c
  4550  003760  A0D8               	btfss	status,0,c
  4551  003762  0640               	decf	(xtoa@i+1)^0,f,c
  4552  003764                     
  4553                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  4554  003764  0E0F               	movlw	15
  4555  003766  1437               	andwf	xtoa@n^0,w,c
  4556  003768  6E41               	movwf	xtoa@c^0,c
  4557  00376A  6A42               	clrf	(xtoa@c+1)^0,c
  4558  00376C                     
  4559                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4560  00376C  BE42               	btfsc	(xtoa@c+1)^0,7,c
  4561  00376E  EFC2  F01B         	goto	u6641
  4562  003772  5042               	movf	(xtoa@c+1)^0,w,c
  4563  003774  E109               	bnz	u6640
  4564  003776  0E0A               	movlw	10
  4565  003778  5C41               	subwf	xtoa@c^0,w,c
  4566  00377A  A0D8               	btfss	status,0,c
  4567  00377C  EFC2  F01B         	goto	u6641
  4568  003780  EFC4  F01B         	goto	u6640
  4569  003784                     u6641:
  4570  003784  EFCC  F01B         	goto	l5069
  4571  003788                     u6640:
  4572  003788  0E57               	movlw	87
  4573  00378A  2441               	addwf	xtoa@c^0,w,c
  4574  00378C  6E41               	movwf	xtoa@c^0,c
  4575  00378E  0E00               	movlw	0
  4576  003790  2042               	addwfc	(xtoa@c+1)^0,w,c
  4577  003792  6E42               	movwf	(xtoa@c+1)^0,c
  4578  003794  EFD2  F01B         	goto	l1041
  4579  003798                     l5069:
  4580  003798  0E30               	movlw	48
  4581  00379A  2441               	addwf	xtoa@c^0,w,c
  4582  00379C  6E41               	movwf	xtoa@c^0,c
  4583  00379E  0E00               	movlw	0
  4584  0037A0  2042               	addwfc	(xtoa@c+1)^0,w,c
  4585  0037A2  6E42               	movwf	(xtoa@c+1)^0,c
  4586  0037A4                     l1041:
  4587  0037A4  0EBF               	movlw	191
  4588  0037A6  6E27               	movwf	??_xtoa^0,c
  4589  0037A8  0EFF               	movlw	255
  4590  0037AA  6E28               	movwf	(??_xtoa+1)^0,c
  4591  0037AC  5026               	movf	xtoa@x^0,w,c
  4592  0037AE  6E29               	movwf	(??_xtoa+2)^0,c
  4593  0037B0  6A2A               	clrf	(??_xtoa+3)^0,c
  4594  0037B2  5027               	movf	??_xtoa^0,w,c
  4595  0037B4  2629               	addwf	(??_xtoa+2)^0,f,c
  4596  0037B6  5028               	movf	(??_xtoa+1)^0,w,c
  4597  0037B8  222A               	addwfc	(??_xtoa+3)^0,f,c
  4598  0037BA  502A               	movf	(??_xtoa+3)^0,w,c
  4599  0037BC  E10A               	bnz	u6650
  4600  0037BE  0E1A               	movlw	26
  4601  0037C0  5C29               	subwf	(??_xtoa+2)^0,w,c
  4602  0037C2  A0D8               	btfss	status,0,c
  4603  0037C4  EFE6  F01B         	goto	u6651
  4604  0037C8  EFE9  F01B         	goto	u6650
  4605  0037CC                     u6651:
  4606  0037CC  0E01               	movlw	1
  4607  0037CE  EFEA  F01B         	goto	u6660
  4608  0037D2                     u6650:
  4609  0037D2  0E00               	movlw	0
  4610  0037D4                     u6660:
  4611  0037D4  6E2F               	movwf	_xtoa$1113^0,c
  4612  0037D6  6A30               	clrf	(_xtoa$1113+1)^0,c
  4613  0037D8  502F               	movf	_xtoa$1113^0,w,c
  4614  0037DA  1030               	iorwf	(_xtoa$1113+1)^0,w,c
  4615  0037DC  B4D8               	btfsc	status,2,c
  4616  0037DE  EFF3  F01B         	goto	u6671
  4617  0037E2  EFF5  F01B         	goto	u6670
  4618  0037E6                     u6671:
  4619  0037E6  EF25  F01C         	goto	l5083
  4620  0037EA                     u6670:
  4621  0037EA  0E9F               	movlw	159
  4622  0037EC  6E27               	movwf	??_xtoa^0,c
  4623  0037EE  0EFF               	movlw	255
  4624  0037F0  6E28               	movwf	(??_xtoa+1)^0,c
  4625  0037F2  0E20               	movlw	32
  4626  0037F4  1041               	iorwf	xtoa@c^0,w,c
  4627  0037F6  6E29               	movwf	(??_xtoa+2)^0,c
  4628  0037F8  0E00               	movlw	0
  4629  0037FA  1042               	iorwf	(xtoa@c+1)^0,w,c
  4630  0037FC  6E2A               	movwf	(??_xtoa+3)^0,c
  4631  0037FE  5027               	movf	??_xtoa^0,w,c
  4632  003800  2629               	addwf	(??_xtoa+2)^0,f,c
  4633  003802  5028               	movf	(??_xtoa+1)^0,w,c
  4634  003804  222A               	addwfc	(??_xtoa+3)^0,f,c
  4635  003806  502A               	movf	(??_xtoa+3)^0,w,c
  4636  003808  E10A               	bnz	u6680
  4637  00380A  0E1A               	movlw	26
  4638  00380C  5C29               	subwf	(??_xtoa+2)^0,w,c
  4639  00380E  A0D8               	btfss	status,0,c
  4640  003810  EF0C  F01C         	goto	u6681
  4641  003814  EF0F  F01C         	goto	u6680
  4642  003818                     u6681:
  4643  003818  0E01               	movlw	1
  4644  00381A  EF10  F01C         	goto	u6690
  4645  00381E                     u6680:
  4646  00381E  0E00               	movlw	0
  4647  003820                     u6690:
  4648  003820  6E31               	movwf	_xtoa$1114^0,c
  4649  003822  6A32               	clrf	(_xtoa$1114+1)^0,c
  4650  003824  5031               	movf	_xtoa$1114^0,w,c
  4651  003826  1032               	iorwf	(_xtoa$1114+1)^0,w,c
  4652  003828  B4D8               	btfsc	status,2,c
  4653  00382A  EF19  F01C         	goto	u6701
  4654  00382E  EF1B  F01C         	goto	u6700
  4655  003832                     u6701:
  4656  003832  EF25  F01C         	goto	l5083
  4657  003836                     u6700:
  4658  003836                     
  4659                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4660  003836  C041  F007         	movff	xtoa@c,toupper@c
  4661  00383A  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4662  00383E  EC7D  F02B         	call	_toupper	;wreg free
  4663  003842  C007  F041         	movff	?_toupper,xtoa@c
  4664  003846  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4665  00384A                     l5083:
  4666                           
  4667                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4668  00384A  0E00               	movlw	low _dbuf
  4669  00384C  243F               	addwf	xtoa@i^0,w,c
  4670  00384E  6ED9               	movwf	fsr2l,c
  4671  003850  0E01               	movlw	high _dbuf
  4672  003852  2040               	addwfc	(xtoa@i+1)^0,w,c
  4673  003854  6EDA               	movwf	fsr2h,c
  4674  003856  C041  FFDF         	movff	xtoa@c,indf2
  4675  00385A                     
  4676                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 672:         --p;
  4677  00385A  0633               	decf	xtoa@p^0,f,c
  4678  00385C  A0D8               	btfss	status,0,c
  4679  00385E  0634               	decf	(xtoa@p+1)^0,f,c
  4680  003860                     
  4681                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 673:         --w;
  4682  003860  0635               	decf	xtoa@w^0,f,c
  4683  003862  A0D8               	btfss	status,0,c
  4684  003864  0636               	decf	(xtoa@w+1)^0,f,c
  4685  003866                     
  4686                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4687  003866  C037  F027         	movff	xtoa@n,??_xtoa
  4688  00386A  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4689  00386E  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4690  003872  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4691  003876  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4692  00387A  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4693  00387E  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4694  003882  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4695  003886  0E05               	movlw	5
  4696  003888  EF4F  F01C         	goto	u6710
  4697  00388C                     u6715:
  4698  00388C  90D8               	bcf	status,0,c
  4699  00388E  322E               	rrcf	(??_xtoa+7)^0,f,c
  4700  003890  322D               	rrcf	(??_xtoa+6)^0,f,c
  4701  003892  322C               	rrcf	(??_xtoa+5)^0,f,c
  4702  003894  322B               	rrcf	(??_xtoa+4)^0,f,c
  4703  003896  322A               	rrcf	(??_xtoa+3)^0,f,c
  4704  003898  3229               	rrcf	(??_xtoa+2)^0,f,c
  4705  00389A  3228               	rrcf	(??_xtoa+1)^0,f,c
  4706  00389C  3227               	rrcf	??_xtoa^0,f,c
  4707  00389E                     u6710:
  4708  00389E  2EE8               	decfsz	wreg,f,c
  4709  0038A0  EF46  F01C         	goto	u6715
  4710  0038A4  C027  F037         	movff	??_xtoa,xtoa@n
  4711  0038A8  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4712  0038AC  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4713  0038B0  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4714  0038B4  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4715  0038B8  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4716  0038BC  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4717  0038C0  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4718  0038C4                     l5091:
  4719                           
  4720                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4721  0038C4  BE40               	btfsc	(xtoa@i+1)^0,7,c
  4722  0038C6  EF6E  F01C         	goto	u6721
  4723  0038CA  5040               	movf	(xtoa@i+1)^0,w,c
  4724  0038CC  E109               	bnz	u6720
  4725  0038CE  0E02               	movlw	2
  4726  0038D0  5C3F               	subwf	xtoa@i^0,w,c
  4727  0038D2  A0D8               	btfss	status,0,c
  4728  0038D4  EF6E  F01C         	goto	u6721
  4729  0038D8  EF70  F01C         	goto	u6720
  4730  0038DC                     u6721:
  4731  0038DC  EFA1  F01C         	goto	l1055
  4732  0038E0                     u6720:
  4733  0038E0  5037               	movf	xtoa@n^0,w,c
  4734  0038E2  1038               	iorwf	(xtoa@n+1)^0,w,c
  4735  0038E4  1039               	iorwf	(xtoa@n+2)^0,w,c
  4736  0038E6  103A               	iorwf	(xtoa@n+3)^0,w,c
  4737  0038E8  103B               	iorwf	(xtoa@n+4)^0,w,c
  4738  0038EA  103C               	iorwf	(xtoa@n+5)^0,w,c
  4739  0038EC  103D               	iorwf	(xtoa@n+6)^0,w,c
  4740  0038EE  103E               	iorwf	(xtoa@n+7)^0,w,c
  4741  0038F0  A4D8               	btfss	status,2,c
  4742  0038F2  EF7D  F01C         	goto	u6731
  4743  0038F6  EF7F  F01C         	goto	u6730
  4744  0038FA                     u6731:
  4745  0038FA  EFAF  F01B         	goto	l5061
  4746  0038FE                     u6730:
  4747  0038FE  BE34               	btfsc	(xtoa@p+1)^0,7,c
  4748  003900  EF8C  F01C         	goto	u6740
  4749  003904  5034               	movf	(xtoa@p+1)^0,w,c
  4750  003906  E106               	bnz	u6741
  4751  003908  0433               	decf	xtoa@p^0,w,c
  4752  00390A  B0D8               	btfsc	status,0,c
  4753  00390C  EF8A  F01C         	goto	u6741
  4754  003910  EF8C  F01C         	goto	u6740
  4755  003914                     u6741:
  4756  003914  EFAF  F01B         	goto	l5061
  4757  003918                     u6740:
  4758  003918  BE36               	btfsc	(xtoa@w+1)^0,7,c
  4759  00391A  EF97  F01C         	goto	u6751
  4760  00391E  5036               	movf	(xtoa@w+1)^0,w,c
  4761  003920  E108               	bnz	u6750
  4762  003922  0435               	decf	xtoa@w^0,w,c
  4763  003924  A0D8               	btfss	status,0,c
  4764  003926  EF97  F01C         	goto	u6751
  4765  00392A  EF99  F01C         	goto	u6750
  4766  00392E                     u6751:
  4767  00392E  EFA1  F01C         	goto	l1055
  4768  003932                     u6750:
  4769  003932  0100               	movlb	0	; () banked
  4770  003934  B3EF               	btfsc	_flags& (0+255),1,b
  4771  003936  EF9F  F01C         	goto	u6761
  4772  00393A  EFA1  F01C         	goto	u6760
  4773  00393E                     u6761:
  4774  00393E  EFAF  F01B         	goto	l5061
  4775  003942                     u6760:
  4776  003942                     l1055:
  4777                           
  4778                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4779  003942  0100               	movlb	0	; () banked
  4780  003944  A9EF               	btfss	_flags& (0+255),4,b
  4781  003946  EFA7  F01C         	goto	u6771
  4782  00394A  EFA9  F01C         	goto	u6770
  4783  00394E                     u6771:
  4784  00394E  EFBF  F01C         	goto	l5107
  4785  003952                     u6770:
  4786  003952                     
  4787                           ; BSR set to: 0
  4788                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 679:         --i;
  4789  003952  063F               	decf	xtoa@i^0,f,c
  4790  003954  A0D8               	btfss	status,0,c
  4791  003956  0640               	decf	(xtoa@i+1)^0,f,c
  4792  003958                     
  4793                           ; BSR set to: 0
  4794                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4795  003958  0E00               	movlw	low _dbuf
  4796  00395A  243F               	addwf	xtoa@i^0,w,c
  4797  00395C  6ED9               	movwf	fsr2l,c
  4798  00395E  0E01               	movlw	high _dbuf
  4799  003960  2040               	addwfc	(xtoa@i+1)^0,w,c
  4800  003962  6EDA               	movwf	fsr2h,c
  4801  003964  C026  FFDF         	movff	xtoa@x,indf2
  4802  003968                     
  4803                           ; BSR set to: 0
  4804                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 681:         --i;
  4805  003968  063F               	decf	xtoa@i^0,f,c
  4806  00396A  A0D8               	btfss	status,0,c
  4807  00396C  0640               	decf	(xtoa@i+1)^0,f,c
  4808                           
  4809                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  4810  00396E  0E00               	movlw	low _dbuf
  4811  003970  243F               	addwf	xtoa@i^0,w,c
  4812  003972  6ED9               	movwf	fsr2l,c
  4813  003974  0E01               	movlw	high _dbuf
  4814  003976  2040               	addwfc	(xtoa@i+1)^0,w,c
  4815  003978  6EDA               	movwf	fsr2h,c
  4816  00397A  0E30               	movlw	48
  4817  00397C  6EDF               	movwf	indf2,c
  4818  00397E                     l5107:
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  4822  00397E  C01C  F011         	movff	xtoa@fp,pad@fp
  4823  003982  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4824  003986  0E00               	movlw	low _dbuf
  4825  003988  243F               	addwf	xtoa@i^0,w,c
  4826  00398A  6E13               	movwf	pad@buf^0,c
  4827  00398C  0E01               	movlw	high _dbuf
  4828  00398E  2040               	addwfc	(xtoa@i+1)^0,w,c
  4829  003990  6E14               	movwf	(pad@buf+1)^0,c
  4830  003992  C035  F015         	movff	xtoa@w,pad@p
  4831  003996  C036  F016         	movff	xtoa@w+1,pad@p+1
  4832  00399A  ECFE  F028         	call	_pad	;wreg free
  4833  00399E  C011  F01C         	movff	?_pad,?_xtoa
  4834  0039A2  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4835  0039A6  0012               	return		;funcret
  4836  0039A8                     __end_of_xtoa:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _toupper *****************
  4840 ;; Defined at:
  4841 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\toupper.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  c               2    6[COMRAM] int 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  2    6[COMRAM] int 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4855 ;;      Params:         2       0       0       0       0       0       0
  4856 ;;      Locals:         2       0       0       0       0       0       0
  4857 ;;      Temps:          4       0       0       0       0       0       0
  4858 ;;      Totals:         8       0       0       0       0       0       0
  4859 ;;Total ram usage:        8 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    1
  4862 ;; This function calls:
  4863 ;;		_islower
  4864 ;; This function is called by:
  4865 ;;		_xtoa
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text6
  4870  0056FA                     __ptext6:
  4871                           	callstack 0
  4872  0056FA                     _toupper:
  4873                           	callstack 24
  4874  0056FA  0E9F               	movlw	159
  4875  0056FC  6E09               	movwf	??_toupper^0,c
  4876  0056FE  0EFF               	movlw	255
  4877  005700  6E0A               	movwf	(??_toupper+1)^0,c
  4878  005702  C007  F00B         	movff	toupper@c,??_toupper+2
  4879  005706  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4880  00570A  5009               	movf	??_toupper^0,w,c
  4881  00570C  260B               	addwf	(??_toupper+2)^0,f,c
  4882  00570E  500A               	movf	(??_toupper+1)^0,w,c
  4883  005710  220C               	addwfc	(??_toupper+3)^0,f,c
  4884  005712  500C               	movf	(??_toupper+3)^0,w,c
  4885  005714  E10A               	bnz	u5540
  4886  005716  0E1A               	movlw	26
  4887  005718  5C0B               	subwf	(??_toupper+2)^0,w,c
  4888  00571A  A0D8               	btfss	status,0,c
  4889  00571C  EF92  F02B         	goto	u5541
  4890  005720  EF95  F02B         	goto	u5540
  4891  005724                     u5541:
  4892  005724  0E01               	movlw	1
  4893  005726  EF96  F02B         	goto	u5550
  4894  00572A                     u5540:
  4895  00572A  0E00               	movlw	0
  4896  00572C                     u5550:
  4897  00572C  6E0D               	movwf	_toupper$1393^0,c
  4898  00572E  6A0E               	clrf	(_toupper$1393+1)^0,c
  4899  005730  500D               	movf	_toupper$1393^0,w,c
  4900  005732  100E               	iorwf	(_toupper$1393+1)^0,w,c
  4901  005734  B4D8               	btfsc	status,2,c
  4902  005736  EF9F  F02B         	goto	u5561
  4903  00573A  EFA1  F02B         	goto	u5560
  4904  00573E                     u5561:
  4905  00573E  EFA7  F02B         	goto	l1301
  4906  005742                     u5560:
  4907  005742  0E5F               	movlw	95
  4908  005744  1407               	andwf	toupper@c^0,w,c
  4909  005746  6E07               	movwf	?_toupper^0,c
  4910  005748  6A08               	clrf	(?_toupper+1)^0,c
  4911  00574A  EFAB  F02B         	goto	l1306
  4912  00574E                     l1301:
  4913  00574E  C007  F007         	movff	toupper@c,?_toupper
  4914  005752  C008  F008         	movff	toupper@c+1,?_toupper+1
  4915  005756                     l1306:
  4916  005756  0012               	return		;funcret
  4917  005758                     __end_of_toupper:
  4918                           	callstack 0
  4919                           
  4920 ;; *************** function _islower *****************
  4921 ;; Defined at:
  4922 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\islower.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  c               2    0[COMRAM] int 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  2    0[COMRAM] int 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4936 ;;      Params:         2       0       0       0       0       0       0
  4937 ;;      Locals:         0       0       0       0       0       0       0
  4938 ;;      Temps:          4       0       0       0       0       0       0
  4939 ;;      Totals:         6       0       0       0       0       0       0
  4940 ;;Total ram usage:        6 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; This function calls:
  4943 ;;		Nothing
  4944 ;; This function is called by:
  4945 ;;		_toupper
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text7
  4950  0059AA                     __ptext7:
  4951                           	callstack 0
  4952  0059AA                     _islower:
  4953                           	callstack 24
  4954  0059AA  0E9F               	movlw	159
  4955  0059AC  6E03               	movwf	??_islower^0,c
  4956  0059AE  0EFF               	movlw	255
  4957  0059B0  6E04               	movwf	(??_islower+1)^0,c
  4958  0059B2  C001  F005         	movff	islower@c,??_islower+2
  4959  0059B6  C002  F006         	movff	islower@c+1,??_islower+3
  4960  0059BA  5003               	movf	??_islower^0,w,c
  4961  0059BC  2605               	addwf	(??_islower+2)^0,f,c
  4962  0059BE  5004               	movf	(??_islower+1)^0,w,c
  4963  0059C0  2206               	addwfc	(??_islower+3)^0,f,c
  4964  0059C2  5006               	movf	(??_islower+3)^0,w,c
  4965  0059C4  E10A               	bnz	u4330
  4966  0059C6  0E1A               	movlw	26
  4967  0059C8  5C05               	subwf	(??_islower+2)^0,w,c
  4968  0059CA  A0D8               	btfss	status,0,c
  4969  0059CC  EFEA  F02C         	goto	u4331
  4970  0059D0  EFED  F02C         	goto	u4330
  4971  0059D4                     u4331:
  4972  0059D4  0E01               	movlw	1
  4973  0059D6  EFEE  F02C         	goto	u4340
  4974  0059DA                     u4330:
  4975  0059DA  0E00               	movlw	0
  4976  0059DC                     u4340:
  4977  0059DC  6E01               	movwf	?_islower^0,c
  4978  0059DE  6A02               	clrf	(?_islower+1)^0,c
  4979  0059E0  0012               	return		;funcret
  4980  0059E2                     __end_of_islower:
  4981                           	callstack 0
  4982                           
  4983 ;; *************** function _isalpha *****************
  4984 ;; Defined at:
  4985 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isalpha.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;  c               2    0[COMRAM] int 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;		None
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  2    0[COMRAM] int 
  4992 ;; Registers used:
  4993 ;;		wreg, status,2, status,0
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4999 ;;      Params:         2       0       0       0       0       0       0
  5000 ;;      Locals:         0       0       0       0       0       0       0
  5001 ;;      Temps:          4       0       0       0       0       0       0
  5002 ;;      Totals:         6       0       0       0       0       0       0
  5003 ;;Total ram usage:        6 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_xtoa
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text8
  5013  00596E                     __ptext8:
  5014                           	callstack 0
  5015  00596E                     _isalpha:
  5016                           	callstack 25
  5017  00596E  0E9F               	movlw	159
  5018  005970  6E03               	movwf	??_isalpha^0,c
  5019  005972  0EFF               	movlw	255
  5020  005974  6E04               	movwf	(??_isalpha+1)^0,c
  5021  005976  0E20               	movlw	32
  5022  005978  1001               	iorwf	isalpha@c^0,w,c
  5023  00597A  6E05               	movwf	(??_isalpha+2)^0,c
  5024  00597C  0E00               	movlw	0
  5025  00597E  1002               	iorwf	(isalpha@c+1)^0,w,c
  5026  005980  6E06               	movwf	(??_isalpha+3)^0,c
  5027  005982  5003               	movf	??_isalpha^0,w,c
  5028  005984  2605               	addwf	(??_isalpha+2)^0,f,c
  5029  005986  5004               	movf	(??_isalpha+1)^0,w,c
  5030  005988  2206               	addwfc	(??_isalpha+3)^0,f,c
  5031  00598A  5006               	movf	(??_isalpha+3)^0,w,c
  5032  00598C  E10A               	bnz	u5520
  5033  00598E  0E1A               	movlw	26
  5034  005990  5C05               	subwf	(??_isalpha+2)^0,w,c
  5035  005992  A0D8               	btfss	status,0,c
  5036  005994  EFCE  F02C         	goto	u5521
  5037  005998  EFD1  F02C         	goto	u5520
  5038  00599C                     u5521:
  5039  00599C  0E01               	movlw	1
  5040  00599E  EFD2  F02C         	goto	u5530
  5041  0059A2                     u5520:
  5042  0059A2  0E00               	movlw	0
  5043  0059A4                     u5530:
  5044  0059A4  6E01               	movwf	?_isalpha^0,c
  5045  0059A6  6A02               	clrf	(?_isalpha+1)^0,c
  5046  0059A8  0012               	return		;funcret
  5047  0059AA                     __end_of_isalpha:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _utoa *****************
  5051 ;; Defined at:
  5052 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5055 ;;		 -> vsnprintf@f(6), 
  5056 ;;  d               8   29[COMRAM] unsigned long long 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  n               8   49[COMRAM] unsigned long long 
  5059 ;;  i               2   57[COMRAM] int 
  5060 ;;  w               2   47[COMRAM] int 
  5061 ;;  p               2   45[COMRAM] int 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  2   27[COMRAM] int 
  5064 ;; Registers used:
  5065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5071 ;;      Params:        10       0       0       0       0       0       0
  5072 ;;      Locals:        14       0       0       0       0       0       0
  5073 ;;      Temps:          8       0       0       0       0       0       0
  5074 ;;      Totals:        32       0       0       0       0       0       0
  5075 ;;Total ram usage:       32 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:    4
  5078 ;; This function calls:
  5079 ;;		___lodiv
  5080 ;;		___lomod
  5081 ;;		_pad
  5082 ;; This function is called by:
  5083 ;;		_vfpfcnvrt
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text9
  5088  003BBA                     __ptext9:
  5089                           	callstack 0
  5090  003BBA                     _utoa:
  5091                           	callstack 22
  5092  003BBA                     
  5093                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  5094  003BBA  0100               	movlb	0	; () banked
  5095  003BBC  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  5096  003BBE  EFE3  F01D         	goto	u6541
  5097  003BC2  EFE5  F01D         	goto	u6540
  5098  003BC6                     u6541:
  5099  003BC6  EFE6  F01D         	goto	l5013
  5100  003BCA                     u6540:
  5101  003BCA                     
  5102                           ; BSR set to: 0
  5103                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  5104  003BCA  93EF               	bcf	_flags& (0+255),1,b
  5105  003BCC                     l5013:
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  5109  003BCC  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  5110  003BCE  EFF3  F01D         	goto	u6550
  5111  003BD2  51EE               	movf	(_prec+1)& (0+255),w,b
  5112  003BD4  E106               	bnz	u6551
  5113  003BD6  05ED               	decf	_prec& (0+255),w,b
  5114  003BD8  B0D8               	btfsc	status,0,c
  5115  003BDA  EFF1  F01D         	goto	u6551
  5116  003BDE  EFF3  F01D         	goto	u6550
  5117  003BE2                     u6551:
  5118  003BE2  EFF9  F01D         	goto	l1017
  5119  003BE6                     u6550:
  5120  003BE6                     
  5121                           ; BSR set to: 0
  5122  003BE6  0E00               	movlw	0
  5123  003BE8  6E2F               	movwf	(utoa@p+1)^0,c
  5124  003BEA  0E01               	movlw	1
  5125  003BEC  6E2E               	movwf	utoa@p^0,c
  5126  003BEE  EFFD  F01D         	goto	l1019
  5127  003BF2                     l1017:
  5128                           
  5129                           ; BSR set to: 0
  5130  003BF2  C0ED  F02E         	movff	_prec,utoa@p
  5131  003BF6  C0EE  F02F         	movff	_prec+1,utoa@p+1
  5132  003BFA                     l1019:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  5136  003BFA  C0EB  F030         	movff	_width,utoa@w
  5137  003BFE  C0EC  F031         	movff	_width+1,utoa@w+1
  5138                           
  5139                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 628:     n = d;
  5140  003C02  C01E  F032         	movff	utoa@d,utoa@n
  5141  003C06  C01F  F033         	movff	utoa@d+1,utoa@n+1
  5142  003C0A  C020  F034         	movff	utoa@d+2,utoa@n+2
  5143  003C0E  C021  F035         	movff	utoa@d+3,utoa@n+3
  5144  003C12  C022  F036         	movff	utoa@d+4,utoa@n+4
  5145  003C16  C023  F037         	movff	utoa@d+5,utoa@n+5
  5146  003C1A  C024  F038         	movff	utoa@d+6,utoa@n+6
  5147  003C1E  C025  F039         	movff	utoa@d+7,utoa@n+7
  5148  003C22                     
  5149                           ; BSR set to: 0
  5150                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  5151  003C22  0E00               	movlw	0
  5152  003C24  6E3B               	movwf	(utoa@i+1)^0,c
  5153  003C26  0E4F               	movlw	79
  5154  003C28  6E3A               	movwf	utoa@i^0,c
  5155  003C2A                     
  5156                           ; BSR set to: 0
  5157                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  5158  003C2A  0E00               	movlw	0
  5159  003C2C  0101               	movlb	1	; () banked
  5160  003C2E  6F4F               	movwf	(_dbuf+79)& (0+255),b
  5161                           
  5162                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5163  003C30  EF90  F01E         	goto	l5031
  5164  003C34                     l5021:
  5165                           
  5166                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 632:         --i;
  5167  003C34  063A               	decf	utoa@i^0,f,c
  5168  003C36  A0D8               	btfss	status,0,c
  5169  003C38  063B               	decf	(utoa@i+1)^0,f,c
  5170  003C3A                     
  5171                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  5172  003C3A  0E00               	movlw	low _dbuf
  5173  003C3C  243A               	addwf	utoa@i^0,w,c
  5174  003C3E  6ED9               	movwf	fsr2l,c
  5175  003C40  0E01               	movlw	high _dbuf
  5176  003C42  203B               	addwfc	(utoa@i+1)^0,w,c
  5177  003C44  6EDA               	movwf	fsr2h,c
  5178  003C46  C032  F001         	movff	utoa@n,___lomod@dividend
  5179  003C4A  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  5180  003C4E  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  5181  003C52  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  5182  003C56  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  5183  003C5A  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  5184  003C5E  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  5185  003C62  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  5186  003C66  0E0A               	movlw	10
  5187  003C68  6E09               	movwf	___lomod@divisor^0,c
  5188  003C6A  0E00               	movlw	0
  5189  003C6C  6E0A               	movwf	(___lomod@divisor+1)^0,c
  5190  003C6E  0E00               	movlw	0
  5191  003C70  6E0B               	movwf	(___lomod@divisor+2)^0,c
  5192  003C72  0E00               	movlw	0
  5193  003C74  6E0C               	movwf	(___lomod@divisor+3)^0,c
  5194  003C76  0E00               	movlw	0
  5195  003C78  6E0D               	movwf	(___lomod@divisor+4)^0,c
  5196  003C7A  0E00               	movlw	0
  5197  003C7C  6E0E               	movwf	(___lomod@divisor+5)^0,c
  5198  003C7E  0E00               	movlw	0
  5199  003C80  6E0F               	movwf	(___lomod@divisor+6)^0,c
  5200  003C82  0E00               	movlw	0
  5201  003C84  6E10               	movwf	(___lomod@divisor+7)^0,c
  5202  003C86  EC31  F028         	call	___lomod	;wreg free
  5203  003C8A  C001  F026         	movff	?___lomod,??_utoa
  5204  003C8E  C002  F027         	movff	?___lomod+1,??_utoa+1
  5205  003C92  C003  F028         	movff	?___lomod+2,??_utoa+2
  5206  003C96  C004  F029         	movff	?___lomod+3,??_utoa+3
  5207  003C9A  C005  F02A         	movff	?___lomod+4,??_utoa+4
  5208  003C9E  C006  F02B         	movff	?___lomod+5,??_utoa+5
  5209  003CA2  C007  F02C         	movff	?___lomod+6,??_utoa+6
  5210  003CA6  C008  F02D         	movff	?___lomod+7,??_utoa+7
  5211  003CAA  5026               	movf	??_utoa^0,w,c
  5212  003CAC  0F30               	addlw	48
  5213  003CAE  6EDF               	movwf	indf2,c
  5214  003CB0                     
  5215                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 634:         --p;
  5216  003CB0  062E               	decf	utoa@p^0,f,c
  5217  003CB2  A0D8               	btfss	status,0,c
  5218  003CB4  062F               	decf	(utoa@p+1)^0,f,c
  5219  003CB6                     
  5220                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 635:         --w;
  5221  003CB6  0630               	decf	utoa@w^0,f,c
  5222  003CB8  A0D8               	btfss	status,0,c
  5223  003CBA  0631               	decf	(utoa@w+1)^0,f,c
  5224  003CBC                     
  5225                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  5226  003CBC  C032  F001         	movff	utoa@n,___lodiv@dividend
  5227  003CC0  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  5228  003CC4  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  5229  003CC8  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  5230  003CCC  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  5231  003CD0  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  5232  003CD4  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  5233  003CD8  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  5234  003CDC  0E0A               	movlw	10
  5235  003CDE  6E09               	movwf	___lodiv@divisor^0,c
  5236  003CE0  0E00               	movlw	0
  5237  003CE2  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  5238  003CE4  0E00               	movlw	0
  5239  003CE6  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  5240  003CE8  0E00               	movlw	0
  5241  003CEA  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  5242  003CEC  0E00               	movlw	0
  5243  003CEE  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  5244  003CF0  0E00               	movlw	0
  5245  003CF2  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  5246  003CF4  0E00               	movlw	0
  5247  003CF6  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  5248  003CF8  0E00               	movlw	0
  5249  003CFA  6E10               	movwf	(___lodiv@divisor+7)^0,c
  5250  003CFC  EC4D  F027         	call	___lodiv	;wreg free
  5251  003D00  C001  F032         	movff	?___lodiv,utoa@n
  5252  003D04  C002  F033         	movff	?___lodiv+1,utoa@n+1
  5253  003D08  C003  F034         	movff	?___lodiv+2,utoa@n+2
  5254  003D0C  C004  F035         	movff	?___lodiv+3,utoa@n+3
  5255  003D10  C005  F036         	movff	?___lodiv+4,utoa@n+4
  5256  003D14  C006  F037         	movff	?___lodiv+5,utoa@n+5
  5257  003D18  C007  F038         	movff	?___lodiv+6,utoa@n+6
  5258  003D1C  C008  F039         	movff	?___lodiv+7,utoa@n+7
  5259  003D20                     l5031:
  5260                           
  5261                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5262  003D20  503A               	movf	utoa@i^0,w,c
  5263  003D22  103B               	iorwf	(utoa@i+1)^0,w,c
  5264  003D24  B4D8               	btfsc	status,2,c
  5265  003D26  EF97  F01E         	goto	u6561
  5266  003D2A  EF99  F01E         	goto	u6560
  5267  003D2E                     u6561:
  5268  003D2E  EFCA  F01E         	goto	l5041
  5269  003D32                     u6560:
  5270  003D32  5032               	movf	utoa@n^0,w,c
  5271  003D34  1033               	iorwf	(utoa@n+1)^0,w,c
  5272  003D36  1034               	iorwf	(utoa@n+2)^0,w,c
  5273  003D38  1035               	iorwf	(utoa@n+3)^0,w,c
  5274  003D3A  1036               	iorwf	(utoa@n+4)^0,w,c
  5275  003D3C  1037               	iorwf	(utoa@n+5)^0,w,c
  5276  003D3E  1038               	iorwf	(utoa@n+6)^0,w,c
  5277  003D40  1039               	iorwf	(utoa@n+7)^0,w,c
  5278  003D42  A4D8               	btfss	status,2,c
  5279  003D44  EFA6  F01E         	goto	u6571
  5280  003D48  EFA8  F01E         	goto	u6570
  5281  003D4C                     u6571:
  5282  003D4C  EF1A  F01E         	goto	l5021
  5283  003D50                     u6570:
  5284  003D50  BE2F               	btfsc	(utoa@p+1)^0,7,c
  5285  003D52  EFB5  F01E         	goto	u6580
  5286  003D56  502F               	movf	(utoa@p+1)^0,w,c
  5287  003D58  E106               	bnz	u6581
  5288  003D5A  042E               	decf	utoa@p^0,w,c
  5289  003D5C  B0D8               	btfsc	status,0,c
  5290  003D5E  EFB3  F01E         	goto	u6581
  5291  003D62  EFB5  F01E         	goto	u6580
  5292  003D66                     u6581:
  5293  003D66  EF1A  F01E         	goto	l5021
  5294  003D6A                     u6580:
  5295  003D6A  BE31               	btfsc	(utoa@w+1)^0,7,c
  5296  003D6C  EFC0  F01E         	goto	u6591
  5297  003D70  5031               	movf	(utoa@w+1)^0,w,c
  5298  003D72  E108               	bnz	u6590
  5299  003D74  0430               	decf	utoa@w^0,w,c
  5300  003D76  A0D8               	btfss	status,0,c
  5301  003D78  EFC0  F01E         	goto	u6591
  5302  003D7C  EFC2  F01E         	goto	u6590
  5303  003D80                     u6591:
  5304  003D80  EFCA  F01E         	goto	l5041
  5305  003D84                     u6590:
  5306  003D84  0100               	movlb	0	; () banked
  5307  003D86  B3EF               	btfsc	_flags& (0+255),1,b
  5308  003D88  EFC8  F01E         	goto	u6601
  5309  003D8C  EFCA  F01E         	goto	u6600
  5310  003D90                     u6601:
  5311  003D90  EF1A  F01E         	goto	l5021
  5312  003D94                     u6600:
  5313  003D94                     l5041:
  5314                           
  5315                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  5316  003D94  C01C  F011         	movff	utoa@fp,pad@fp
  5317  003D98  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  5318  003D9C  0E00               	movlw	low _dbuf
  5319  003D9E  243A               	addwf	utoa@i^0,w,c
  5320  003DA0  6E13               	movwf	pad@buf^0,c
  5321  003DA2  0E01               	movlw	high _dbuf
  5322  003DA4  203B               	addwfc	(utoa@i+1)^0,w,c
  5323  003DA6  6E14               	movwf	(pad@buf+1)^0,c
  5324  003DA8  C030  F015         	movff	utoa@w,pad@p
  5325  003DAC  C031  F016         	movff	utoa@w+1,pad@p+1
  5326  003DB0  ECFE  F028         	call	_pad	;wreg free
  5327  003DB4  C011  F01C         	movff	?_pad,?_utoa
  5328  003DB8  C012  F01D         	movff	?_pad+1,?_utoa+1
  5329  003DBC  0012               	return		;funcret
  5330  003DBE                     __end_of_utoa:
  5331                           	callstack 0
  5332                           
  5333 ;; *************** function ___lomod *****************
  5334 ;; Defined at:
  5335 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lomod.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  dividend        8    0[COMRAM] unsigned long long 
  5338 ;;  divisor         8    8[COMRAM] unsigned long long 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  counter         1   16[COMRAM] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  8    0[COMRAM] unsigned long long 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5350 ;;      Params:        16       0       0       0       0       0       0
  5351 ;;      Locals:         1       0       0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0
  5353 ;;      Totals:        17       0       0       0       0       0       0
  5354 ;;Total ram usage:       17 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		_utoa
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text10
  5364  005062                     __ptext10:
  5365                           	callstack 0
  5366  005062                     ___lomod:
  5367                           	callstack 25
  5368  005062  5009               	movf	___lomod@divisor^0,w,c
  5369  005064  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  5370  005066  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  5371  005068  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  5372  00506A  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  5373  00506C  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  5374  00506E  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  5375  005070  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  5376  005072  B4D8               	btfsc	status,2,c
  5377  005074  EF3E  F028         	goto	u5221
  5378  005078  EF40  F028         	goto	u5220
  5379  00507C                     u5221:
  5380  00507C  EF88  F028         	goto	l541
  5381  005080                     u5220:
  5382  005080  0E01               	movlw	1
  5383  005082  6E11               	movwf	___lomod@counter^0,c
  5384  005084  EF4E  F028         	goto	l4391
  5385  005088                     l4389:
  5386  005088  90D8               	bcf	status,0,c
  5387  00508A  3609               	rlcf	___lomod@divisor^0,f,c
  5388  00508C  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  5389  00508E  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  5390  005090  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  5391  005092  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  5392  005094  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  5393  005096  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  5394  005098  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  5395  00509A  2A11               	incf	___lomod@counter^0,f,c
  5396  00509C                     l4391:
  5397  00509C  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  5398  00509E  EF53  F028         	goto	u5231
  5399  0050A2  EF55  F028         	goto	u5230
  5400  0050A6                     u5231:
  5401  0050A6  EF44  F028         	goto	l4389
  5402  0050AA                     u5230:
  5403  0050AA                     l4393:
  5404  0050AA  5009               	movf	___lomod@divisor^0,w,c
  5405  0050AC  5C01               	subwf	___lomod@dividend^0,w,c
  5406  0050AE  500A               	movf	(___lomod@divisor+1)^0,w,c
  5407  0050B0  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  5408  0050B2  500B               	movf	(___lomod@divisor+2)^0,w,c
  5409  0050B4  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  5410  0050B6  500C               	movf	(___lomod@divisor+3)^0,w,c
  5411  0050B8  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  5412  0050BA  500D               	movf	(___lomod@divisor+4)^0,w,c
  5413  0050BC  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  5414  0050BE  500E               	movf	(___lomod@divisor+5)^0,w,c
  5415  0050C0  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  5416  0050C2  500F               	movf	(___lomod@divisor+6)^0,w,c
  5417  0050C4  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  5418  0050C6  5010               	movf	(___lomod@divisor+7)^0,w,c
  5419  0050C8  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  5420  0050CA  A0D8               	btfss	status,0,c
  5421  0050CC  EF6A  F028         	goto	u5241
  5422  0050D0  EF6C  F028         	goto	u5240
  5423  0050D4                     u5241:
  5424  0050D4  EF7C  F028         	goto	l4397
  5425  0050D8                     u5240:
  5426  0050D8  5009               	movf	___lomod@divisor^0,w,c
  5427  0050DA  5E01               	subwf	___lomod@dividend^0,f,c
  5428  0050DC  500A               	movf	(___lomod@divisor+1)^0,w,c
  5429  0050DE  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  5430  0050E0  500B               	movf	(___lomod@divisor+2)^0,w,c
  5431  0050E2  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  5432  0050E4  500C               	movf	(___lomod@divisor+3)^0,w,c
  5433  0050E6  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  5434  0050E8  500D               	movf	(___lomod@divisor+4)^0,w,c
  5435  0050EA  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  5436  0050EC  500E               	movf	(___lomod@divisor+5)^0,w,c
  5437  0050EE  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  5438  0050F0  500F               	movf	(___lomod@divisor+6)^0,w,c
  5439  0050F2  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  5440  0050F4  5010               	movf	(___lomod@divisor+7)^0,w,c
  5441  0050F6  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  5442  0050F8                     l4397:
  5443  0050F8  90D8               	bcf	status,0,c
  5444  0050FA  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  5445  0050FC  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  5446  0050FE  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  5447  005100  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  5448  005102  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  5449  005104  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  5450  005106  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  5451  005108  3209               	rrcf	___lomod@divisor^0,f,c
  5452  00510A  2E11               	decfsz	___lomod@counter^0,f,c
  5453  00510C  EF55  F028         	goto	l4393
  5454  005110                     l541:
  5455  005110  C001  F001         	movff	___lomod@dividend,?___lomod
  5456  005114  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  5457  005118  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  5458  00511C  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  5459  005120  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  5460  005124  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  5461  005128  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  5462  00512C  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  5463  005130  0012               	return		;funcret
  5464  005132                     __end_of___lomod:
  5465                           	callstack 0
  5466                           
  5467 ;; *************** function ___lodiv *****************
  5468 ;; Defined at:
  5469 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lodiv.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  dividend        8    0[COMRAM] unsigned long long 
  5472 ;;  divisor         8    8[COMRAM] unsigned long long 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  quotient        8   16[COMRAM] unsigned long long 
  5475 ;;  counter         1   24[COMRAM] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  8    0[COMRAM] unsigned long long 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5485 ;;      Params:        16       0       0       0       0       0       0
  5486 ;;      Locals:         9       0       0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0
  5488 ;;      Totals:        25       0       0       0       0       0       0
  5489 ;;Total ram usage:       25 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_utoa
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text11
  5499  004E9A                     __ptext11:
  5500                           	callstack 0
  5501  004E9A                     ___lodiv:
  5502                           	callstack 25
  5503  004E9A  EE20  F011         	lfsr	2,___lodiv@quotient
  5504  004E9E  0E07               	movlw	7
  5505  004EA0                     u5181:
  5506  004EA0  6ADE               	clrf	postinc2,c
  5507  004EA2  06E8               	decf	wreg,f,c
  5508  004EA4  E2FD               	bc	u5181
  5509  004EA6  5009               	movf	___lodiv@divisor^0,w,c
  5510  004EA8  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  5511  004EAA  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  5512  004EAC  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  5513  004EAE  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  5514  004EB0  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  5515  004EB2  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  5516  004EB4  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  5517  004EB6  B4D8               	btfsc	status,2,c
  5518  004EB8  EF60  F027         	goto	u5191
  5519  004EBC  EF62  F027         	goto	u5190
  5520  004EC0                     u5191:
  5521  004EC0  EFB4  F027         	goto	l531
  5522  004EC4                     u5190:
  5523  004EC4  0E01               	movlw	1
  5524  004EC6  6E19               	movwf	___lodiv@counter^0,c
  5525  004EC8  EF70  F027         	goto	l4371
  5526  004ECC                     l4369:
  5527  004ECC  90D8               	bcf	status,0,c
  5528  004ECE  3609               	rlcf	___lodiv@divisor^0,f,c
  5529  004ED0  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  5530  004ED2  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  5531  004ED4  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  5532  004ED6  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  5533  004ED8  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  5534  004EDA  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  5535  004EDC  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  5536  004EDE  2A19               	incf	___lodiv@counter^0,f,c
  5537  004EE0                     l4371:
  5538  004EE0  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  5539  004EE2  EF75  F027         	goto	u5201
  5540  004EE6  EF77  F027         	goto	u5200
  5541  004EEA                     u5201:
  5542  004EEA  EF66  F027         	goto	l4369
  5543  004EEE                     u5200:
  5544  004EEE                     l4373:
  5545  004EEE  90D8               	bcf	status,0,c
  5546  004EF0  3611               	rlcf	___lodiv@quotient^0,f,c
  5547  004EF2  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  5548  004EF4  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  5549  004EF6  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  5550  004EF8  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  5551  004EFA  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  5552  004EFC  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  5553  004EFE  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  5554  004F00  5009               	movf	___lodiv@divisor^0,w,c
  5555  004F02  5C01               	subwf	___lodiv@dividend^0,w,c
  5556  004F04  500A               	movf	(___lodiv@divisor+1)^0,w,c
  5557  004F06  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  5558  004F08  500B               	movf	(___lodiv@divisor+2)^0,w,c
  5559  004F0A  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  5560  004F0C  500C               	movf	(___lodiv@divisor+3)^0,w,c
  5561  004F0E  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  5562  004F10  500D               	movf	(___lodiv@divisor+4)^0,w,c
  5563  004F12  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  5564  004F14  500E               	movf	(___lodiv@divisor+5)^0,w,c
  5565  004F16  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  5566  004F18  500F               	movf	(___lodiv@divisor+6)^0,w,c
  5567  004F1A  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  5568  004F1C  5010               	movf	(___lodiv@divisor+7)^0,w,c
  5569  004F1E  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  5570  004F20  A0D8               	btfss	status,0,c
  5571  004F22  EF95  F027         	goto	u5211
  5572  004F26  EF97  F027         	goto	u5210
  5573  004F2A                     u5211:
  5574  004F2A  EFA8  F027         	goto	l4381
  5575  004F2E                     u5210:
  5576  004F2E  5009               	movf	___lodiv@divisor^0,w,c
  5577  004F30  5E01               	subwf	___lodiv@dividend^0,f,c
  5578  004F32  500A               	movf	(___lodiv@divisor+1)^0,w,c
  5579  004F34  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  5580  004F36  500B               	movf	(___lodiv@divisor+2)^0,w,c
  5581  004F38  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  5582  004F3A  500C               	movf	(___lodiv@divisor+3)^0,w,c
  5583  004F3C  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  5584  004F3E  500D               	movf	(___lodiv@divisor+4)^0,w,c
  5585  004F40  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  5586  004F42  500E               	movf	(___lodiv@divisor+5)^0,w,c
  5587  004F44  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  5588  004F46  500F               	movf	(___lodiv@divisor+6)^0,w,c
  5589  004F48  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  5590  004F4A  5010               	movf	(___lodiv@divisor+7)^0,w,c
  5591  004F4C  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  5592  004F4E  8011               	bsf	___lodiv@quotient^0,0,c
  5593  004F50                     l4381:
  5594  004F50  90D8               	bcf	status,0,c
  5595  004F52  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  5596  004F54  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  5597  004F56  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  5598  004F58  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  5599  004F5A  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  5600  004F5C  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  5601  004F5E  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  5602  004F60  3209               	rrcf	___lodiv@divisor^0,f,c
  5603  004F62  2E19               	decfsz	___lodiv@counter^0,f,c
  5604  004F64  EF77  F027         	goto	l4373
  5605  004F68                     l531:
  5606  004F68  C011  F001         	movff	___lodiv@quotient,?___lodiv
  5607  004F6C  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  5608  004F70  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  5609  004F74  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  5610  004F78  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  5611  004F7C  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  5612  004F80  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  5613  004F84  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  5614  004F88  0012               	return		;funcret
  5615  004F8A                     __end_of___lodiv:
  5616                           	callstack 0
  5617                           
  5618 ;; *************** function _strncmp *****************
  5619 ;; Defined at:
  5620 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strncmp.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5623 ;;		 -> vfpfcnvrt@ct(3), STR_6(3), STR_5(3), 
  5624 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5625 ;;		 -> STR_116(3), STR_112(3), STR_107(3), STR_103(3), 
  5626 ;;		 -> STR_98(4), STR_94(4), STR_89(3), STR_84(3), 
  5627 ;;		 -> STR_79(4), STR_74(3), STR_69(3), STR_64(4), 
  5628 ;;		 -> STR_59(3), STR_54(3), STR_49(4), STR_44(3), 
  5629 ;;		 -> STR_39(3), STR_35(3), STR_30(3), STR_26(3), 
  5630 ;;		 -> STR_21(4), STR_17(4), 
  5631 ;;  n               2    4[COMRAM] unsigned int 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5634 ;;		 -> STR_116(3), STR_112(3), STR_107(3), STR_103(3), 
  5635 ;;		 -> STR_98(4), STR_94(4), STR_89(3), STR_84(3), 
  5636 ;;		 -> STR_79(4), STR_74(3), STR_69(3), STR_64(4), 
  5637 ;;		 -> STR_59(3), STR_54(3), STR_49(4), STR_44(3), 
  5638 ;;		 -> STR_39(3), STR_35(3), STR_30(3), STR_26(3), 
  5639 ;;		 -> STR_21(4), STR_17(4), 
  5640 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5641 ;;		 -> vfpfcnvrt@ct(3), STR_6(3), STR_5(3), 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  2    0[COMRAM] int 
  5644 ;; Registers used:
  5645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5651 ;;      Params:         6       0       0       0       0       0       0
  5652 ;;      Locals:         4       0       0       0       0       0       0
  5653 ;;      Temps:          1       0       0       0       0       0       0
  5654 ;;      Totals:        11       0       0       0       0       0       0
  5655 ;;Total ram usage:       11 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_vfpfcnvrt
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text12
  5665  004A78                     __ptext12:
  5666                           	callstack 0
  5667  004A78                     _strncmp:
  5668                           	callstack 26
  5669  004A78  C001  F008         	movff	strncmp@_l,strncmp@l
  5670  004A7C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5671  004A80  C003  F00A         	movff	strncmp@_r,strncmp@r
  5672  004A84  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5673  004A88  0605               	decf	strncmp@n^0,f,c
  5674  004A8A  A0D8               	btfss	status,0,c
  5675  004A8C  0606               	decf	(strncmp@n+1)^0,f,c
  5676  004A8E  2805               	incf	strncmp@n^0,w,c
  5677  004A90  E106               	bnz	u6851
  5678  004A92  2806               	incf	(strncmp@n+1)^0,w,c
  5679  004A94  A4D8               	btfss	status,2,c
  5680  004A96  EF4F  F025         	goto	u6851
  5681  004A9A  EF51  F025         	goto	u6850
  5682  004A9E                     u6851:
  5683  004A9E  EF5E  F025         	goto	l5161
  5684  004AA2                     u6850:
  5685  004AA2  0E00               	movlw	0
  5686  004AA4  6E02               	movwf	(?_strncmp+1)^0,c
  5687  004AA6  0E00               	movlw	0
  5688  004AA8  6E01               	movwf	?_strncmp^0,c
  5689  004AAA  EFC8  F025         	goto	l1278
  5690  004AAE                     l5159:
  5691  004AAE  4A08               	infsnz	strncmp@l^0,f,c
  5692  004AB0  2A09               	incf	(strncmp@l+1)^0,f,c
  5693  004AB2  4A0A               	infsnz	strncmp@r^0,f,c
  5694  004AB4  2A0B               	incf	(strncmp@r+1)^0,f,c
  5695  004AB6  0605               	decf	strncmp@n^0,f,c
  5696  004AB8  A0D8               	btfss	status,0,c
  5697  004ABA  0606               	decf	(strncmp@n+1)^0,f,c
  5698  004ABC                     l5161:
  5699  004ABC  C008  FFF6         	movff	strncmp@l,tblptrl
  5700  004AC0  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5701  004AC4  6AF8               	clrf	tblptru,c
  5702  004AC6  0E05               	movlw	(high __ramtop+-1)
  5703  004AC8  64F7               	cpfsgt	tblptrh,c
  5704  004ACA  D003               	bra	u6867
  5705  004ACC  0008               	tblrd		*
  5706  004ACE  50F5               	movf	tablat,w,c
  5707  004AD0  D005               	bra	u6860
  5708  004AD2                     u6867:
  5709  004AD2  CFF6 FFE1          	movff	tblptrl,fsr1l
  5710  004AD6  CFF7 FFE2          	movff	tblptrh,fsr1h
  5711  004ADA  50E7               	movf	indf1,w,c
  5712  004ADC                     u6860:
  5713  004ADC  0900               	iorlw	0
  5714  004ADE  B4D8               	btfsc	status,2,c
  5715  004AE0  EF74  F025         	goto	u6871
  5716  004AE4  EF76  F025         	goto	u6870
  5717  004AE8                     u6871:
  5718  004AE8  EFAC  F025         	goto	l5169
  5719  004AEC                     u6870:
  5720  004AEC  C00A  FFF6         	movff	strncmp@r,tblptrl
  5721  004AF0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5722  004AF4                     	if	0	;tblptru may be non-zero
  5723  004AF4                     	endif
  5724  004AF4                     	if	0	;tblptru may be non-zero
  5725  004AF4                     	endif
  5726  004AF4  0008               	tblrd		*
  5727  004AF6  50F5               	movf	tablat,w,c
  5728  004AF8  0900               	iorlw	0
  5729  004AFA  B4D8               	btfsc	status,2,c
  5730  004AFC  EF82  F025         	goto	u6881
  5731  004B00  EF84  F025         	goto	u6880
  5732  004B04                     u6881:
  5733  004B04  EFAC  F025         	goto	l5169
  5734  004B08                     u6880:
  5735  004B08  5005               	movf	strncmp@n^0,w,c
  5736  004B0A  1006               	iorwf	(strncmp@n+1)^0,w,c
  5737  004B0C  B4D8               	btfsc	status,2,c
  5738  004B0E  EF8B  F025         	goto	u6891
  5739  004B12  EF8D  F025         	goto	u6890
  5740  004B16                     u6891:
  5741  004B16  EFAC  F025         	goto	l5169
  5742  004B1A                     u6890:
  5743  004B1A  C00A  FFF6         	movff	strncmp@r,tblptrl
  5744  004B1E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5745  004B22                     	if	0	;tblptru may be non-zero
  5746  004B22                     	endif
  5747  004B22                     	if	0	;tblptru may be non-zero
  5748  004B22                     	endif
  5749  004B22  0008               	tblrd		*
  5750  004B24  CFF5 F007          	movff	tablat,??_strncmp
  5751  004B28  C008  FFF6         	movff	strncmp@l,tblptrl
  5752  004B2C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5753  004B30  6AF8               	clrf	tblptru,c
  5754  004B32  0E05               	movlw	(high __ramtop+-1)
  5755  004B34  64F7               	cpfsgt	tblptrh,c
  5756  004B36  D003               	bra	u6907
  5757  004B38  0008               	tblrd		*
  5758  004B3A  50F5               	movf	tablat,w,c
  5759  004B3C  D005               	bra	u6905
  5760  004B3E                     u6907:
  5761  004B3E  CFF6 FFE1          	movff	tblptrl,fsr1l
  5762  004B42  CFF7 FFE2          	movff	tblptrh,fsr1h
  5763  004B46  50E7               	movf	indf1,w,c
  5764  004B48                     u6905:
  5765  004B48  1807               	xorwf	??_strncmp^0,w,c
  5766  004B4A  B4D8               	btfsc	status,2,c
  5767  004B4C  EFAA  F025         	goto	u6901
  5768  004B50  EFAC  F025         	goto	u6900
  5769  004B54                     u6901:
  5770  004B54  EF57  F025         	goto	l5159
  5771  004B58                     u6900:
  5772  004B58                     l5169:
  5773  004B58  C008  FFF6         	movff	strncmp@l,tblptrl
  5774  004B5C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5775  004B60  6AF8               	clrf	tblptru,c
  5776  004B62  0E05               	movlw	(high __ramtop+-1)
  5777  004B64  64F7               	cpfsgt	tblptrh,c
  5778  004B66  D003               	bra	u6917
  5779  004B68  0008               	tblrd		*
  5780  004B6A  50F5               	movf	tablat,w,c
  5781  004B6C  D005               	bra	u6910
  5782  004B6E                     u6917:
  5783  004B6E  CFF6 FFE1          	movff	tblptrl,fsr1l
  5784  004B72  CFF7 FFE2          	movff	tblptrh,fsr1h
  5785  004B76  50E7               	movf	indf1,w,c
  5786  004B78                     u6910:
  5787  004B78  6E07               	movwf	??_strncmp^0,c
  5788  004B7A  C00A  FFF6         	movff	strncmp@r,tblptrl
  5789  004B7E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5790  004B82                     	if	0	;tblptru may be non-zero
  5791  004B82                     	endif
  5792  004B82                     	if	0	;tblptru may be non-zero
  5793  004B82                     	endif
  5794  004B82  0008               	tblrd		*
  5795  004B84  50F5               	movf	tablat,w,c
  5796  004B86  5C07               	subwf	??_strncmp^0,w,c
  5797  004B88  6E01               	movwf	?_strncmp^0,c
  5798  004B8A  6A02               	clrf	(?_strncmp+1)^0,c
  5799  004B8C  A0D8               	btfss	status,0,c
  5800  004B8E  0602               	decf	(?_strncmp+1)^0,f,c
  5801  004B90                     l1278:
  5802  004B90  0012               	return		;funcret
  5803  004B92                     __end_of_strncmp:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _stoa *****************
  5807 ;; Defined at:
  5808 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5811 ;;		 -> vsnprintf@f(6), 
  5812 ;;  s               2   11[COMRAM] PTR unsigned char 
  5813 ;;		 -> ?_snprintf(2), result(2), 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5816 ;;  l               2   29[COMRAM] int 
  5817 ;;  p               2   27[COMRAM] int 
  5818 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5819 ;;		 -> stoa@nuls(7), ?_snprintf(2), result(2), 
  5820 ;;  w               2   23[COMRAM] int 
  5821 ;;  i               2   21[COMRAM] int 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  2    9[COMRAM] int 
  5824 ;; Registers used:
  5825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5831 ;;      Params:         4       0       0       0       0       0       0
  5832 ;;      Locals:        17       0       0       0       0       0       0
  5833 ;;      Temps:          1       0       0       0       0       0       0
  5834 ;;      Totals:        22       0       0       0       0       0       0
  5835 ;;Total ram usage:       22 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    2
  5838 ;; This function calls:
  5839 ;;		_fputc
  5840 ;;		_strlen
  5841 ;; This function is called by:
  5842 ;;		_vfpfcnvrt
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text13
  5847  004672                     __ptext13:
  5848                           	callstack 0
  5849  004672                     _stoa:
  5850                           	callstack 24
  5851  004672                     
  5852                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  5853  004672  EE21  F056         	lfsr	2,stoa@F1176
  5854  004676  EE10  F00F         	lfsr	1,stoa@nuls
  5855  00467A  0E06               	movlw	6
  5856  00467C                     u6451:
  5857  00467C  CFDB FFE3          	movff	plusw2,plusw1
  5858  004680  06E8               	decf	wreg,f,c
  5859  004682  E2FC               	bc	u6451
  5860  004684                     
  5861                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  5862  004684  C00C  F01A         	movff	stoa@s,stoa@cp
  5863  004688  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5864  00468C                     
  5865                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  5866  00468C  501A               	movf	stoa@cp^0,w,c
  5867  00468E  101B               	iorwf	(stoa@cp+1)^0,w,c
  5868  004690  A4D8               	btfss	status,2,c
  5869  004692  EF4D  F023         	goto	u6461
  5870  004696  EF4F  F023         	goto	u6460
  5871  00469A                     u6461:
  5872  00469A  EF53  F023         	goto	l4975
  5873  00469E                     u6460:
  5874  00469E                     
  5875                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  5876  00469E  0E0F               	movlw	low stoa@nuls
  5877  0046A0  6E1A               	movwf	stoa@cp^0,c
  5878  0046A2  0E00               	movlw	high stoa@nuls
  5879  0046A4  6E1B               	movwf	(stoa@cp+1)^0,c
  5880  0046A6                     l4975:
  5881                           
  5882                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  5883  0046A6  C01A  F001         	movff	stoa@cp,strlen@s
  5884  0046AA  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5885  0046AE  EC61  F02D         	call	_strlen	;wreg free
  5886  0046B2  C001  F01E         	movff	?_strlen,stoa@l
  5887  0046B6  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5888  0046BA                     
  5889                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  5890  0046BA  C0ED  F01C         	movff	_prec,stoa@p
  5891  0046BE  C0EE  F01D         	movff	_prec+1,stoa@p+1
  5892  0046C2                     
  5893                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  5894  0046C2  BE1D               	btfsc	(stoa@p+1)^0,7,c
  5895  0046C4  EF66  F023         	goto	u6471
  5896  0046C8  EF68  F023         	goto	u6470
  5897  0046CC                     u6471:
  5898  0046CC  EF7D  F023         	goto	l998
  5899  0046D0                     u6470:
  5900  0046D0  501E               	movf	stoa@l^0,w,c
  5901  0046D2  5C1C               	subwf	stoa@p^0,w,c
  5902  0046D4  501D               	movf	(stoa@p+1)^0,w,c
  5903  0046D6  0A80               	xorlw	128
  5904  0046D8  6E0E               	movwf	??_stoa^0,c
  5905  0046DA  501F               	movf	(stoa@l+1)^0,w,c
  5906  0046DC  0A80               	xorlw	128
  5907  0046DE  580E               	subwfb	??_stoa^0,w,c
  5908  0046E0  A0D8               	btfss	status,0,c
  5909  0046E2  EF75  F023         	goto	u6481
  5910  0046E6  EF77  F023         	goto	u6480
  5911  0046EA                     u6481:
  5912  0046EA  EF79  F023         	goto	l996
  5913  0046EE                     u6480:
  5914  0046EE  EF7D  F023         	goto	l998
  5915  0046F2                     l996:
  5916  0046F2  C01C  F01E         	movff	stoa@p,stoa@l
  5917  0046F6  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5918  0046FA                     l998:
  5919                           
  5920                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 583:     p = l;
  5921  0046FA  C01E  F01C         	movff	stoa@l,stoa@p
  5922  0046FE  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5923                           
  5924                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  5925  004702  C0EB  F018         	movff	_width,stoa@w
  5926  004706  C0EC  F019         	movff	_width+1,stoa@w+1
  5927                           
  5928                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  5929  00470A  0100               	movlb	0	; () banked
  5930  00470C  B1EF               	btfsc	_flags& (0+255),0,b
  5931  00470E  EF8B  F023         	goto	u6491
  5932  004712  EF8D  F023         	goto	u6490
  5933  004716                     u6491:
  5934  004716  EFAA  F023         	goto	l4991
  5935  00471A                     u6490:
  5936  00471A  EF9B  F023         	goto	l4989
  5937  00471E                     l4985:
  5938                           
  5939                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  5940  00471E  0E00               	movlw	0
  5941  004720  6E02               	movwf	(fputc@c+1)^0,c
  5942  004722  0E20               	movlw	32
  5943  004724  6E01               	movwf	fputc@c^0,c
  5944  004726  C00A  F003         	movff	stoa@fp,fputc@fp
  5945  00472A  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5946  00472E  EC99  F028         	call	_fputc	;wreg free
  5947  004732                     
  5948                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  5949  004732  4A1E               	infsnz	stoa@l^0,f,c
  5950  004734  2A1F               	incf	(stoa@l+1)^0,f,c
  5951  004736                     l4989:
  5952                           
  5953                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  5954  004736  5018               	movf	stoa@w^0,w,c
  5955  004738  5C1E               	subwf	stoa@l^0,w,c
  5956  00473A  501F               	movf	(stoa@l+1)^0,w,c
  5957  00473C  0A80               	xorlw	128
  5958  00473E  6E0E               	movwf	??_stoa^0,c
  5959  004740  5019               	movf	(stoa@w+1)^0,w,c
  5960  004742  0A80               	xorlw	128
  5961  004744  580E               	subwfb	??_stoa^0,w,c
  5962  004746  A0D8               	btfss	status,0,c
  5963  004748  EFA8  F023         	goto	u6501
  5964  00474C  EFAA  F023         	goto	u6500
  5965  004750                     u6501:
  5966  004750  EF8F  F023         	goto	l4985
  5967  004754                     u6500:
  5968  004754                     l4991:
  5969                           
  5970                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  5971  004754  0E00               	movlw	0
  5972  004756  6E17               	movwf	(stoa@i+1)^0,c
  5973  004758  0E00               	movlw	0
  5974  00475A  6E16               	movwf	stoa@i^0,c
  5975                           
  5976                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  5977  00475C  EFC3  F023         	goto	l4999
  5978  004760                     l4993:
  5979                           
  5980                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  5981  004760  C01A  FFD9         	movff	stoa@cp,fsr2l
  5982  004764  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5983  004768  50DF               	movf	indf2,w,c
  5984  00476A  6E0E               	movwf	??_stoa^0,c
  5985  00476C  500E               	movf	??_stoa^0,w,c
  5986  00476E  6E01               	movwf	fputc@c^0,c
  5987  004770  6A02               	clrf	(fputc@c+1)^0,c
  5988  004772  C00A  F003         	movff	stoa@fp,fputc@fp
  5989  004776  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5990  00477A  EC99  F028         	call	_fputc	;wreg free
  5991  00477E                     
  5992                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  5993  00477E  4A1A               	infsnz	stoa@cp^0,f,c
  5994  004780  2A1B               	incf	(stoa@cp+1)^0,f,c
  5995  004782                     
  5996                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 599:         ++i;
  5997  004782  4A16               	infsnz	stoa@i^0,f,c
  5998  004784  2A17               	incf	(stoa@i+1)^0,f,c
  5999  004786                     l4999:
  6000                           
  6001                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  6002  004786  501C               	movf	stoa@p^0,w,c
  6003  004788  5C16               	subwf	stoa@i^0,w,c
  6004  00478A  5017               	movf	(stoa@i+1)^0,w,c
  6005  00478C  0A80               	xorlw	128
  6006  00478E  6E0E               	movwf	??_stoa^0,c
  6007  004790  501D               	movf	(stoa@p+1)^0,w,c
  6008  004792  0A80               	xorlw	128
  6009  004794  580E               	subwfb	??_stoa^0,w,c
  6010  004796  A0D8               	btfss	status,0,c
  6011  004798  EFD0  F023         	goto	u6511
  6012  00479C  EFD2  F023         	goto	u6510
  6013  0047A0                     u6511:
  6014  0047A0  EFB0  F023         	goto	l4993
  6015  0047A4                     u6510:
  6016  0047A4                     
  6017                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  6018  0047A4  0100               	movlb	0	; () banked
  6019  0047A6  A1EF               	btfss	_flags& (0+255),0,b
  6020  0047A8  EFD8  F023         	goto	u6521
  6021  0047AC  EFDA  F023         	goto	u6520
  6022  0047B0                     u6521:
  6023  0047B0  EFF7  F023         	goto	l1008
  6024  0047B4                     u6520:
  6025  0047B4  EFE8  F023         	goto	l5007
  6026  0047B8                     l5003:
  6027                           
  6028                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  6029  0047B8  0E00               	movlw	0
  6030  0047BA  6E02               	movwf	(fputc@c+1)^0,c
  6031  0047BC  0E20               	movlw	32
  6032  0047BE  6E01               	movwf	fputc@c^0,c
  6033  0047C0  C00A  F003         	movff	stoa@fp,fputc@fp
  6034  0047C4  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  6035  0047C8  EC99  F028         	call	_fputc	;wreg free
  6036  0047CC                     
  6037                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  6038  0047CC  4A1E               	infsnz	stoa@l^0,f,c
  6039  0047CE  2A1F               	incf	(stoa@l+1)^0,f,c
  6040  0047D0                     l5007:
  6041                           
  6042                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  6043  0047D0  5018               	movf	stoa@w^0,w,c
  6044  0047D2  5C1E               	subwf	stoa@l^0,w,c
  6045  0047D4  501F               	movf	(stoa@l+1)^0,w,c
  6046  0047D6  0A80               	xorlw	128
  6047  0047D8  6E0E               	movwf	??_stoa^0,c
  6048  0047DA  5019               	movf	(stoa@w+1)^0,w,c
  6049  0047DC  0A80               	xorlw	128
  6050  0047DE  580E               	subwfb	??_stoa^0,w,c
  6051  0047E0  A0D8               	btfss	status,0,c
  6052  0047E2  EFF5  F023         	goto	u6531
  6053  0047E6  EFF7  F023         	goto	u6530
  6054  0047EA                     u6531:
  6055  0047EA  EFDC  F023         	goto	l5003
  6056  0047EE                     u6530:
  6057  0047EE                     l1008:
  6058                           
  6059                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  6060  0047EE  C01E  F00A         	movff	stoa@l,?_stoa
  6061  0047F2  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  6062  0047F6  0012               	return		;funcret
  6063  0047F8                     __end_of_stoa:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function _otoa *****************
  6067 ;; Defined at:
  6068 ;;		line 529 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6071 ;;		 -> vsnprintf@f(6), 
  6072 ;;  d               8   29[COMRAM] unsigned long long 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  n               8   51[COMRAM] unsigned long long 
  6075 ;;  i               2   59[COMRAM] int 
  6076 ;;  w               2   49[COMRAM] int 
  6077 ;;  t               2   47[COMRAM] int 
  6078 ;;  p               2   45[COMRAM] int 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  2   27[COMRAM] int 
  6081 ;; Registers used:
  6082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6088 ;;      Params:        10       0       0       0       0       0       0
  6089 ;;      Locals:        16       0       0       0       0       0       0
  6090 ;;      Temps:          8       0       0       0       0       0       0
  6091 ;;      Totals:        34       0       0       0       0       0       0
  6092 ;;Total ram usage:       34 bytes
  6093 ;; Hardware stack levels used:    1
  6094 ;; Hardware stack levels required when called:    4
  6095 ;; This function calls:
  6096 ;;		_pad
  6097 ;; This function is called by:
  6098 ;;		_vfpfcnvrt
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text14
  6103  003FB6                     __ptext14:
  6104                           	callstack 0
  6105  003FB6                     _otoa:
  6106                           	callstack 22
  6107  003FB6                     
  6108                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 529: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99
      +                          \common\doprnt.c: 530: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\dop
      +                          rnt.c: 531:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\com
      +                          mon\doprnt.c: 532:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\so
      +                          urces\c99\common\doprnt.c: 535:     if (!(prec < 0)) {
  6109  003FB6  0100               	movlb	0	; () banked
  6110  003FB8  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  6111  003FBA  EFE1  F01F         	goto	u6351
  6112  003FBE  EFE3  F01F         	goto	u6350
  6113  003FC2                     u6351:
  6114  003FC2  EFE4  F01F         	goto	l4923
  6115  003FC6                     u6350:
  6116  003FC6                     
  6117                           ; BSR set to: 0
  6118                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 536:         flag
      +                          s &= ~(1 << 1);
  6119  003FC6  93EF               	bcf	_flags& (0+255),1,b
  6120  003FC8                     l4923:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 538:     p = (0 <
      +                           prec) ? prec : 1;
  6124  003FC8  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  6125  003FCA  EFF1  F01F         	goto	u6360
  6126  003FCE  51EE               	movf	(_prec+1)& (0+255),w,b
  6127  003FD0  E106               	bnz	u6361
  6128  003FD2  05ED               	decf	_prec& (0+255),w,b
  6129  003FD4  B0D8               	btfsc	status,0,c
  6130  003FD6  EFEF  F01F         	goto	u6361
  6131  003FDA  EFF1  F01F         	goto	u6360
  6132  003FDE                     u6361:
  6133  003FDE  EFF7  F01F         	goto	l978
  6134  003FE2                     u6360:
  6135  003FE2                     
  6136                           ; BSR set to: 0
  6137  003FE2  0E00               	movlw	0
  6138  003FE4  6E2F               	movwf	(otoa@p+1)^0,c
  6139  003FE6  0E01               	movlw	1
  6140  003FE8  6E2E               	movwf	otoa@p^0,c
  6141  003FEA  EFFB  F01F         	goto	l980
  6142  003FEE                     l978:
  6143                           
  6144                           ; BSR set to: 0
  6145  003FEE  C0ED  F02E         	movff	_prec,otoa@p
  6146  003FF2  C0EE  F02F         	movff	_prec+1,otoa@p+1
  6147  003FF6                     l980:
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 539:     w = widt
      +                          h;
  6151  003FF6  C0EB  F032         	movff	_width,otoa@w
  6152  003FFA  C0EC  F033         	movff	_width+1,otoa@w+1
  6153                           
  6154                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 542:     n = d;
  6155  003FFE  C01E  F034         	movff	otoa@d,otoa@n
  6156  004002  C01F  F035         	movff	otoa@d+1,otoa@n+1
  6157  004006  C020  F036         	movff	otoa@d+2,otoa@n+2
  6158  00400A  C021  F037         	movff	otoa@d+3,otoa@n+3
  6159  00400E  C022  F038         	movff	otoa@d+4,otoa@n+4
  6160  004012  C023  F039         	movff	otoa@d+5,otoa@n+5
  6161  004016  C024  F03A         	movff	otoa@d+6,otoa@n+6
  6162  00401A  C025  F03B         	movff	otoa@d+7,otoa@n+7
  6163  00401E                     
  6164                           ; BSR set to: 0
  6165                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 543:     i = size
      +                          of(dbuf) - 1;
  6166  00401E  0E00               	movlw	0
  6167  004020  6E3D               	movwf	(otoa@i+1)^0,c
  6168  004022  0E4F               	movlw	79
  6169  004024  6E3C               	movwf	otoa@i^0,c
  6170  004026                     
  6171                           ; BSR set to: 0
  6172                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 544:     dbuf[i] 
      +                          = '\0';
  6173  004026  0E00               	movlw	0
  6174  004028  0101               	movlb	1	; () banked
  6175  00402A  6F4F               	movwf	(_dbuf+79)& (0+255),b
  6176  00402C                     
  6177                           ; BSR set to: 1
  6178                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 545:     t = 0;
  6179  00402C  0E00               	movlw	0
  6180  00402E  6E31               	movwf	(otoa@t+1)^0,c
  6181  004030  0E00               	movlw	0
  6182  004032  6E30               	movwf	otoa@t^0,c
  6183                           
  6184                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 546:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6185  004034  EF61  F020         	goto	l4945
  6186  004038                     l4933:
  6187                           
  6188                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 547:         --i;
  6189  004038  063C               	decf	otoa@i^0,f,c
  6190  00403A  A0D8               	btfss	status,0,c
  6191  00403C  063D               	decf	(otoa@i+1)^0,f,c
  6192  00403E                     
  6193                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 548:         t = 
      +                          n & 07;
  6194  00403E  0E07               	movlw	7
  6195  004040  1434               	andwf	otoa@n^0,w,c
  6196  004042  6E30               	movwf	otoa@t^0,c
  6197  004044  6A31               	clrf	(otoa@t+1)^0,c
  6198  004046                     
  6199                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 549:         dbuf
      +                          [i] = (char)((int)'0' + t);
  6200  004046  0E00               	movlw	low _dbuf
  6201  004048  243C               	addwf	otoa@i^0,w,c
  6202  00404A  6ED9               	movwf	fsr2l,c
  6203  00404C  0E01               	movlw	high _dbuf
  6204  00404E  203D               	addwfc	(otoa@i+1)^0,w,c
  6205  004050  6EDA               	movwf	fsr2h,c
  6206  004052  5030               	movf	otoa@t^0,w,c
  6207  004054  0F30               	addlw	48
  6208  004056  6EDF               	movwf	indf2,c
  6209  004058                     
  6210                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 550:         --p;
  6211  004058  062E               	decf	otoa@p^0,f,c
  6212  00405A  A0D8               	btfss	status,0,c
  6213  00405C  062F               	decf	(otoa@p+1)^0,f,c
  6214  00405E                     
  6215                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 551:         --w;
  6216  00405E  0632               	decf	otoa@w^0,f,c
  6217  004060  A0D8               	btfss	status,0,c
  6218  004062  0633               	decf	(otoa@w+1)^0,f,c
  6219  004064                     
  6220                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 552:         n = 
      +                          n >> 3;
  6221  004064  C034  F026         	movff	otoa@n,??_otoa
  6222  004068  C035  F027         	movff	otoa@n+1,??_otoa+1
  6223  00406C  C036  F028         	movff	otoa@n+2,??_otoa+2
  6224  004070  C037  F029         	movff	otoa@n+3,??_otoa+3
  6225  004074  C038  F02A         	movff	otoa@n+4,??_otoa+4
  6226  004078  C039  F02B         	movff	otoa@n+5,??_otoa+5
  6227  00407C  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  6228  004080  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  6229  004084  0E04               	movlw	4
  6230  004086  EF4E  F020         	goto	u6370
  6231  00408A                     u6375:
  6232  00408A  90D8               	bcf	status,0,c
  6233  00408C  322D               	rrcf	(??_otoa+7)^0,f,c
  6234  00408E  322C               	rrcf	(??_otoa+6)^0,f,c
  6235  004090  322B               	rrcf	(??_otoa+5)^0,f,c
  6236  004092  322A               	rrcf	(??_otoa+4)^0,f,c
  6237  004094  3229               	rrcf	(??_otoa+3)^0,f,c
  6238  004096  3228               	rrcf	(??_otoa+2)^0,f,c
  6239  004098  3227               	rrcf	(??_otoa+1)^0,f,c
  6240  00409A  3226               	rrcf	??_otoa^0,f,c
  6241  00409C                     u6370:
  6242  00409C  2EE8               	decfsz	wreg,f,c
  6243  00409E  EF45  F020         	goto	u6375
  6244  0040A2  C026  F034         	movff	??_otoa,otoa@n
  6245  0040A6  C027  F035         	movff	??_otoa+1,otoa@n+1
  6246  0040AA  C028  F036         	movff	??_otoa+2,otoa@n+2
  6247  0040AE  C029  F037         	movff	??_otoa+3,otoa@n+3
  6248  0040B2  C02A  F038         	movff	??_otoa+4,otoa@n+4
  6249  0040B6  C02B  F039         	movff	??_otoa+5,otoa@n+5
  6250  0040BA  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  6251  0040BE  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  6252  0040C2                     l4945:
  6253                           
  6254                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 546:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6255  0040C2  BE3D               	btfsc	(otoa@i+1)^0,7,c
  6256  0040C4  EF6C  F020         	goto	u6381
  6257  0040C8  503D               	movf	(otoa@i+1)^0,w,c
  6258  0040CA  E108               	bnz	u6380
  6259  0040CC  043C               	decf	otoa@i^0,w,c
  6260  0040CE  A0D8               	btfss	status,0,c
  6261  0040D0  EF6C  F020         	goto	u6381
  6262  0040D4  EF6E  F020         	goto	u6380
  6263  0040D8                     u6381:
  6264  0040D8  EF9F  F020         	goto	l987
  6265  0040DC                     u6380:
  6266  0040DC  5034               	movf	otoa@n^0,w,c
  6267  0040DE  1035               	iorwf	(otoa@n+1)^0,w,c
  6268  0040E0  1036               	iorwf	(otoa@n+2)^0,w,c
  6269  0040E2  1037               	iorwf	(otoa@n+3)^0,w,c
  6270  0040E4  1038               	iorwf	(otoa@n+4)^0,w,c
  6271  0040E6  1039               	iorwf	(otoa@n+5)^0,w,c
  6272  0040E8  103A               	iorwf	(otoa@n+6)^0,w,c
  6273  0040EA  103B               	iorwf	(otoa@n+7)^0,w,c
  6274  0040EC  A4D8               	btfss	status,2,c
  6275  0040EE  EF7B  F020         	goto	u6391
  6276  0040F2  EF7D  F020         	goto	u6390
  6277  0040F6                     u6391:
  6278  0040F6  EF1C  F020         	goto	l4933
  6279  0040FA                     u6390:
  6280  0040FA  BE2F               	btfsc	(otoa@p+1)^0,7,c
  6281  0040FC  EF8A  F020         	goto	u6400
  6282  004100  502F               	movf	(otoa@p+1)^0,w,c
  6283  004102  E106               	bnz	u6401
  6284  004104  042E               	decf	otoa@p^0,w,c
  6285  004106  B0D8               	btfsc	status,0,c
  6286  004108  EF88  F020         	goto	u6401
  6287  00410C  EF8A  F020         	goto	u6400
  6288  004110                     u6401:
  6289  004110  EF1C  F020         	goto	l4933
  6290  004114                     u6400:
  6291  004114  BE33               	btfsc	(otoa@w+1)^0,7,c
  6292  004116  EF95  F020         	goto	u6411
  6293  00411A  5033               	movf	(otoa@w+1)^0,w,c
  6294  00411C  E108               	bnz	u6410
  6295  00411E  0432               	decf	otoa@w^0,w,c
  6296  004120  A0D8               	btfss	status,0,c
  6297  004122  EF95  F020         	goto	u6411
  6298  004126  EF97  F020         	goto	u6410
  6299  00412A                     u6411:
  6300  00412A  EF9F  F020         	goto	l987
  6301  00412E                     u6410:
  6302  00412E  0100               	movlb	0	; () banked
  6303  004130  B3EF               	btfsc	_flags& (0+255),1,b
  6304  004132  EF9D  F020         	goto	u6421
  6305  004136  EF9F  F020         	goto	u6420
  6306  00413A                     u6421:
  6307  00413A  EF1C  F020         	goto	l4933
  6308  00413E                     u6420:
  6309  00413E                     l987:
  6310                           
  6311                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 556:     if ((fla
      +                          gs & (1 << 4)) && t) {
  6312  00413E  0100               	movlb	0	; () banked
  6313  004140  A9EF               	btfss	_flags& (0+255),4,b
  6314  004142  EFA5  F020         	goto	u6431
  6315  004146  EFA7  F020         	goto	u6430
  6316  00414A                     u6431:
  6317  00414A  EFBE  F020         	goto	l4963
  6318  00414E                     u6430:
  6319  00414E                     
  6320                           ; BSR set to: 0
  6321  00414E  5030               	movf	otoa@t^0,w,c
  6322  004150  1031               	iorwf	(otoa@t+1)^0,w,c
  6323  004152  B4D8               	btfsc	status,2,c
  6324  004154  EFAE  F020         	goto	u6441
  6325  004158  EFB0  F020         	goto	u6440
  6326  00415C                     u6441:
  6327  00415C  EFBE  F020         	goto	l4963
  6328  004160                     u6440:
  6329  004160                     
  6330                           ; BSR set to: 0
  6331                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 557:         --i;
  6332  004160  063C               	decf	otoa@i^0,f,c
  6333  004162  A0D8               	btfss	status,0,c
  6334  004164  063D               	decf	(otoa@i+1)^0,f,c
  6335  004166                     
  6336                           ; BSR set to: 0
  6337                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 558:         dbuf
      +                          [i] = '0';
  6338  004166  0E00               	movlw	low _dbuf
  6339  004168  243C               	addwf	otoa@i^0,w,c
  6340  00416A  6ED9               	movwf	fsr2l,c
  6341  00416C  0E01               	movlw	high _dbuf
  6342  00416E  203D               	addwfc	(otoa@i+1)^0,w,c
  6343  004170  6EDA               	movwf	fsr2h,c
  6344  004172  0E30               	movlw	48
  6345  004174  6EDF               	movwf	indf2,c
  6346  004176                     
  6347                           ; BSR set to: 0
  6348                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 559:         --w;
  6349  004176  0632               	decf	otoa@w^0,f,c
  6350  004178  A0D8               	btfss	status,0,c
  6351  00417A  0633               	decf	(otoa@w+1)^0,f,c
  6352  00417C                     l4963:
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 563:     return p
      +                          ad(fp, &dbuf[i], w);
  6356  00417C  C01C  F011         	movff	otoa@fp,pad@fp
  6357  004180  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  6358  004184  0E00               	movlw	low _dbuf
  6359  004186  243C               	addwf	otoa@i^0,w,c
  6360  004188  6E13               	movwf	pad@buf^0,c
  6361  00418A  0E01               	movlw	high _dbuf
  6362  00418C  203D               	addwfc	(otoa@i+1)^0,w,c
  6363  00418E  6E14               	movwf	(pad@buf+1)^0,c
  6364  004190  C032  F015         	movff	otoa@w,pad@p
  6365  004194  C033  F016         	movff	otoa@w+1,pad@p+1
  6366  004198  ECFE  F028         	call	_pad	;wreg free
  6367  00419C  C011  F01C         	movff	?_pad,?_otoa
  6368  0041A0  C012  F01D         	movff	?_pad+1,?_otoa+1
  6369  0041A4  0012               	return		;funcret
  6370  0041A6                     __end_of_otoa:
  6371                           	callstack 0
  6372                           
  6373 ;; *************** function _efgtoa *****************
  6374 ;; Defined at:
  6375 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  6378 ;;		 -> vsnprintf@f(6), 
  6379 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  6380 ;;  c               1   57[COMRAM] unsigned char 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  u               4   52[BANK0 ] unsigned char 
  6383 ;;  g               4   44[BANK0 ] unsigned char 
  6384 ;;  l               4   38[BANK0 ] unsigned char 
  6385 ;;  h               4   34[BANK0 ] unsigned char 
  6386 ;;  ou              4   20[BANK0 ] unsigned char 
  6387 ;;  n               2   50[BANK0 ] int 
  6388 ;;  e               2   48[BANK0 ] int 
  6389 ;;  i               2   42[BANK0 ] int 
  6390 ;;  w               2   30[BANK0 ] int 
  6391 ;;  p               2   28[BANK0 ] int 
  6392 ;;  sign            2   26[BANK0 ] int 
  6393 ;;  d               2   24[BANK0 ] int 
  6394 ;;  m               2   18[BANK0 ] int 
  6395 ;;  ne              2   16[BANK0 ] int 
  6396 ;;  pp              2   14[BANK0 ] int 
  6397 ;;  t               2   12[BANK0 ] int 
  6398 ;;  mode            1   33[BANK0 ] unsigned char 
  6399 ;;  nmode           1   32[BANK0 ] unsigned char 
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  2   51[COMRAM] int 
  6402 ;; Registers used:
  6403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6409 ;;      Params:         7       0       0       0       0       0       0
  6410 ;;      Locals:         0      56       0       0       0       0       0
  6411 ;;      Temps:          5       0       0       0       0       0       0
  6412 ;;      Totals:        12      56       0       0       0       0       0
  6413 ;;Total ram usage:       68 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    4
  6416 ;; This function calls:
  6417 ;;		___awdiv
  6418 ;;		___awmod
  6419 ;;		___fladd
  6420 ;;		___fldiv
  6421 ;;		___fleq
  6422 ;;		___flge
  6423 ;;		___flmul
  6424 ;;		___flneg
  6425 ;;		___flsub
  6426 ;;		___fltol
  6427 ;;		___fpclassifyf
  6428 ;;		_floorf
  6429 ;;		_isupper
  6430 ;;		_pad
  6431 ;;		_strcpy
  6432 ;;		_tolower
  6433 ;; This function is called by:
  6434 ;;		_vfpfcnvrt
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text15
  6439  001B0E                     __ptext15:
  6440                           	callstack 0
  6441  001B0E                     _efgtoa:
  6442                           	callstack 22
  6443  001B0E                     
  6444                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  6445  001B0E  0E00               	movlw	0
  6446  001B10  0100               	movlb	0	; () banked
  6447  001B12  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6448  001B14  0E00               	movlw	0
  6449  001B16  6F7A               	movwf	efgtoa@sign& (0+255),b
  6450  001B18                     
  6451                           ; BSR set to: 0
  6452                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 340:     g = f;
  6453  001B18  C036  F08C         	movff	efgtoa@f,efgtoa@g
  6454  001B1C  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  6455  001B20  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  6456  001B24  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  6457  001B28                     
  6458                           ; BSR set to: 0
  6459                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  6460  001B28  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6461  001B2A  EF9B  F00D         	goto	u5810
  6462  001B2E  EF99  F00D         	goto	u5811
  6463  001B32                     u5811:
  6464  001B32  EFB1  F00D         	goto	l4621
  6465  001B36                     u5810:
  6466  001B36                     
  6467                           ; BSR set to: 0
  6468                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  6469  001B36  0E00               	movlw	0
  6470  001B38  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6471  001B3A  0E01               	movlw	1
  6472  001B3C  6F7A               	movwf	efgtoa@sign& (0+255),b
  6473  001B3E                     
  6474                           ; BSR set to: 0
  6475                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  6476  001B3E  C08C  F001         	movff	efgtoa@g,___flneg@f1
  6477  001B42  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  6478  001B46  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  6479  001B4A  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  6480  001B4E  EC0D  F02D         	call	___flneg	;wreg free
  6481  001B52  C001  F08C         	movff	?___flneg,efgtoa@g
  6482  001B56  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  6483  001B5A  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  6484  001B5E  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  6485  001B62                     l4621:
  6486                           
  6487                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  6488  001B62  0E00               	movlw	0
  6489  001B64  0100               	movlb	0	; () banked
  6490  001B66  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  6491  001B68  0E00               	movlw	0
  6492  001B6A  6F92               	movwf	efgtoa@n& (0+255),b
  6493  001B6C                     
  6494                           ; BSR set to: 0
  6495                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  6496  001B6C  C0EB  F07E         	movff	_width,efgtoa@w
  6497  001B70  C0EC  F07F         	movff	_width+1,efgtoa@w+1
  6498  001B74                     
  6499                           ; BSR set to: 0
  6500                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  6501  001B74  517A               	movf	efgtoa@sign& (0+255),w,b
  6502  001B76  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6503  001B78  A4D8               	btfss	status,2,c
  6504  001B7A  EFC1  F00D         	goto	u5821
  6505  001B7E  EFC3  F00D         	goto	u5820
  6506  001B82                     u5821:
  6507  001B82  EFCA  F00D         	goto	l4629
  6508  001B86                     u5820:
  6509  001B86                     
  6510                           ; BSR set to: 0
  6511  001B86  A5EF               	btfss	_flags& (0+255),2,b
  6512  001B88  EFC8  F00D         	goto	u5831
  6513  001B8C  EFCA  F00D         	goto	u5830
  6514  001B90                     u5831:
  6515  001B90  EFE4  F00D         	goto	l4641
  6516  001B94                     u5830:
  6517  001B94                     l4629:
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  6521  001B94  517A               	movf	efgtoa@sign& (0+255),w,b
  6522  001B96  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6523  001B98  A4D8               	btfss	status,2,c
  6524  001B9A  EFD1  F00D         	goto	u5841
  6525  001B9E  EFD3  F00D         	goto	u5840
  6526  001BA2                     u5841:
  6527  001BA2  EFD9  F00D         	goto	l4633
  6528  001BA6                     u5840:
  6529  001BA6                     
  6530                           ; BSR set to: 0
  6531  001BA6  0E00               	movlw	0
  6532  001BA8  6F61               	movwf	(_efgtoa$1066+1)& (0+255),b
  6533  001BAA  0E2B               	movlw	43
  6534  001BAC  6F60               	movwf	_efgtoa$1066& (0+255),b
  6535  001BAE  EFDD  F00D         	goto	l4635
  6536  001BB2                     l4633:
  6537                           
  6538                           ; BSR set to: 0
  6539  001BB2  0E00               	movlw	0
  6540  001BB4  6F61               	movwf	(_efgtoa$1066+1)& (0+255),b
  6541  001BB6  0E2D               	movlw	45
  6542  001BB8  6F60               	movwf	_efgtoa$1066& (0+255),b
  6543  001BBA                     l4635:
  6544                           
  6545                           ; BSR set to: 0
  6546  001BBA  C060  F100         	movff	_efgtoa$1066,_dbuf
  6547  001BBE                     
  6548                           ; BSR set to: 0
  6549                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 351:         ++n;
  6550  001BBE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6551  001BC0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6552  001BC2                     
  6553                           ; BSR set to: 0
  6554                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 352:         --w;
  6555  001BC2  077E               	decf	efgtoa@w& (0+255),f,b
  6556  001BC4  A0D8               	btfss	status,0,c
  6557  001BC6  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  6558  001BC8                     l4641:
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6562  001BC8  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  6563  001BCC  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6564  001BD0  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6565  001BD4  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6566  001BD8  ECCE  F026         	call	___fpclassifyf	;wreg free
  6567  001BDC  0401               	decf	?___fpclassifyf^0,w,c
  6568  001BDE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6569  001BE0  A4D8               	btfss	status,2,c
  6570  001BE2  EFF5  F00D         	goto	u5851
  6571  001BE6  EFF7  F00D         	goto	u5850
  6572  001BEA                     u5851:
  6573  001BEA  EF4E  F00E         	goto	l4659
  6574  001BEE                     u5850:
  6575  001BEE  0EBF               	movlw	191
  6576  001BF0  6E3B               	movwf	??_efgtoa^0,c
  6577  001BF2  0EFF               	movlw	255
  6578  001BF4  6E3C               	movwf	(??_efgtoa+1)^0,c
  6579  001BF6  503A               	movf	efgtoa@c^0,w,c
  6580  001BF8  6E3D               	movwf	(??_efgtoa+2)^0,c
  6581  001BFA  6A3E               	clrf	(??_efgtoa+3)^0,c
  6582  001BFC  503B               	movf	??_efgtoa^0,w,c
  6583  001BFE  263D               	addwf	(??_efgtoa+2)^0,f,c
  6584  001C00  503C               	movf	(??_efgtoa+1)^0,w,c
  6585  001C02  223E               	addwfc	(??_efgtoa+3)^0,f,c
  6586  001C04  503E               	movf	(??_efgtoa+3)^0,w,c
  6587  001C06  E10A               	bnz	u5860
  6588  001C08  0E1A               	movlw	26
  6589  001C0A  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  6590  001C0C  A0D8               	btfss	status,0,c
  6591  001C0E  EF0B  F00E         	goto	u5861
  6592  001C12  EF0E  F00E         	goto	u5860
  6593  001C16                     u5861:
  6594  001C16  0E01               	movlw	1
  6595  001C18  EF0F  F00E         	goto	u5870
  6596  001C1C                     u5860:
  6597  001C1C  0E00               	movlw	0
  6598  001C1E                     u5870:
  6599  001C1E  0100               	movlb	0	; () banked
  6600  001C20  6F62               	movwf	_efgtoa$1067& (0+255),b
  6601  001C22  6B63               	clrf	(_efgtoa$1067+1)& (0+255),b
  6602  001C24                     
  6603                           ; BSR set to: 0
  6604  001C24  5162               	movf	_efgtoa$1067& (0+255),w,b
  6605  001C26  1163               	iorwf	(_efgtoa$1067+1)& (0+255),w,b
  6606  001C28  B4D8               	btfsc	status,2,c
  6607  001C2A  EF19  F00E         	goto	u5881
  6608  001C2E  EF1B  F00E         	goto	u5880
  6609  001C32                     u5881:
  6610  001C32  EF29  F00E         	goto	l4651
  6611  001C36                     u5880:
  6612  001C36                     
  6613                           ; BSR set to: 0
  6614                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  6615  001C36  0E00               	movlw	low _dbuf
  6616  001C38  2592               	addwf	efgtoa@n& (0+255),w,b
  6617  001C3A  6E01               	movwf	strcpy@dest^0,c
  6618  001C3C  0E01               	movlw	high _dbuf
  6619  001C3E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6620  001C40  6E02               	movwf	(strcpy@dest+1)^0,c
  6621  001C42  0E17               	movlw	low STR_7
  6622  001C44  6E03               	movwf	strcpy@src^0,c
  6623  001C46  0E06               	movlw	high STR_7
  6624  001C48  6E04               	movwf	(strcpy@src+1)^0,c
  6625  001C4A  ECAC  F02B         	call	_strcpy	;wreg free
  6626                           
  6627                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  6628  001C4E  EF35  F00E         	goto	l4653
  6629  001C52                     l4651:
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  6633  001C52  0E00               	movlw	low _dbuf
  6634  001C54  2592               	addwf	efgtoa@n& (0+255),w,b
  6635  001C56  6E01               	movwf	strcpy@dest^0,c
  6636  001C58  0E01               	movlw	high _dbuf
  6637  001C5A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6638  001C5C  6E02               	movwf	(strcpy@dest+1)^0,c
  6639  001C5E  0E27               	movlw	low STR_8
  6640  001C60  6E03               	movwf	strcpy@src^0,c
  6641  001C62  0E06               	movlw	high STR_8
  6642  001C64  6E04               	movwf	(strcpy@src+1)^0,c
  6643  001C66  ECAC  F02B         	call	_strcpy	;wreg free
  6644  001C6A                     l4653:
  6645                           
  6646                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6647  001C6A  0100               	movlb	0	; () banked
  6648  001C6C  0EFD               	movlw	253
  6649  001C6E  277E               	addwf	efgtoa@w& (0+255),f,b
  6650  001C70  0EFF               	movlw	255
  6651  001C72  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6652  001C74                     l4655:
  6653                           
  6654                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6655  001C74  C034  F011         	movff	efgtoa@fp,pad@fp
  6656  001C78  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  6657  001C7C  0E00               	movlw	low _dbuf
  6658  001C7E  6E13               	movwf	pad@buf^0,c
  6659  001C80  0E01               	movlw	high _dbuf
  6660  001C82  6E14               	movwf	(pad@buf+1)^0,c
  6661  001C84  C07E  F015         	movff	efgtoa@w,pad@p
  6662  001C88  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  6663  001C8C  ECFE  F028         	call	_pad	;wreg free
  6664  001C90  C011  F034         	movff	?_pad,?_efgtoa
  6665  001C94  C012  F035         	movff	?_pad+1,?_efgtoa+1
  6666  001C98  EFB2  F013         	goto	l898
  6667  001C9C                     l4659:
  6668                           
  6669                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6670  001C9C  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  6671  001CA0  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6672  001CA4  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6673  001CA8  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6674  001CAC  ECCE  F026         	call	___fpclassifyf	;wreg free
  6675  001CB0  5001               	movf	?___fpclassifyf^0,w,c
  6676  001CB2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6677  001CB4  A4D8               	btfss	status,2,c
  6678  001CB6  EF5F  F00E         	goto	u5891
  6679  001CBA  EF61  F00E         	goto	u5890
  6680  001CBE                     u5891:
  6681  001CBE  EFA1  F00E         	goto	l4677
  6682  001CC2                     u5890:
  6683  001CC2  0EBF               	movlw	191
  6684  001CC4  6E3B               	movwf	??_efgtoa^0,c
  6685  001CC6  0EFF               	movlw	255
  6686  001CC8  6E3C               	movwf	(??_efgtoa+1)^0,c
  6687  001CCA  503A               	movf	efgtoa@c^0,w,c
  6688  001CCC  6E3D               	movwf	(??_efgtoa+2)^0,c
  6689  001CCE  6A3E               	clrf	(??_efgtoa+3)^0,c
  6690  001CD0  503B               	movf	??_efgtoa^0,w,c
  6691  001CD2  263D               	addwf	(??_efgtoa+2)^0,f,c
  6692  001CD4  503C               	movf	(??_efgtoa+1)^0,w,c
  6693  001CD6  223E               	addwfc	(??_efgtoa+3)^0,f,c
  6694  001CD8  503E               	movf	(??_efgtoa+3)^0,w,c
  6695  001CDA  E10A               	bnz	u5900
  6696  001CDC  0E1A               	movlw	26
  6697  001CDE  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  6698  001CE0  A0D8               	btfss	status,0,c
  6699  001CE2  EF75  F00E         	goto	u5901
  6700  001CE6  EF78  F00E         	goto	u5900
  6701  001CEA                     u5901:
  6702  001CEA  0E01               	movlw	1
  6703  001CEC  EF79  F00E         	goto	u5910
  6704  001CF0                     u5900:
  6705  001CF0  0E00               	movlw	0
  6706  001CF2                     u5910:
  6707  001CF2  0100               	movlb	0	; () banked
  6708  001CF4  6F64               	movwf	_efgtoa$1071& (0+255),b
  6709  001CF6  6B65               	clrf	(_efgtoa$1071+1)& (0+255),b
  6710  001CF8                     
  6711                           ; BSR set to: 0
  6712  001CF8  5164               	movf	_efgtoa$1071& (0+255),w,b
  6713  001CFA  1165               	iorwf	(_efgtoa$1071+1)& (0+255),w,b
  6714  001CFC  B4D8               	btfsc	status,2,c
  6715  001CFE  EF83  F00E         	goto	u5921
  6716  001D02  EF85  F00E         	goto	u5920
  6717  001D06                     u5921:
  6718  001D06  EF93  F00E         	goto	l4669
  6719  001D0A                     u5920:
  6720  001D0A                     
  6721                           ; BSR set to: 0
  6722                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  6723  001D0A  0E00               	movlw	low _dbuf
  6724  001D0C  2592               	addwf	efgtoa@n& (0+255),w,b
  6725  001D0E  6E01               	movwf	strcpy@dest^0,c
  6726  001D10  0E01               	movlw	high _dbuf
  6727  001D12  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6728  001D14  6E02               	movwf	(strcpy@dest+1)^0,c
  6729  001D16  0E1B               	movlw	low STR_11
  6730  001D18  6E03               	movwf	strcpy@src^0,c
  6731  001D1A  0E06               	movlw	high STR_11
  6732  001D1C  6E04               	movwf	(strcpy@src+1)^0,c
  6733  001D1E  ECAC  F02B         	call	_strcpy	;wreg free
  6734                           
  6735                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  6736  001D22  EF35  F00E         	goto	l4653
  6737  001D26                     l4669:
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  6741  001D26  0E00               	movlw	low _dbuf
  6742  001D28  2592               	addwf	efgtoa@n& (0+255),w,b
  6743  001D2A  6E01               	movwf	strcpy@dest^0,c
  6744  001D2C  0E01               	movlw	high _dbuf
  6745  001D2E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6746  001D30  6E02               	movwf	(strcpy@dest+1)^0,c
  6747  001D32  0E2F               	movlw	low STR_12
  6748  001D34  6E03               	movwf	strcpy@src^0,c
  6749  001D36  0E06               	movlw	high STR_12
  6750  001D38  6E04               	movwf	(strcpy@src+1)^0,c
  6751  001D3A  ECAC  F02B         	call	_strcpy	;wreg free
  6752  001D3E  EF35  F00E         	goto	l4653
  6753  001D42                     l4677:
  6754                           
  6755                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  6756  001D42  0E00               	movlw	0
  6757  001D44  0100               	movlb	0	; () banked
  6758  001D46  6F94               	movwf	efgtoa@u& (0+255),b
  6759  001D48  0E00               	movlw	0
  6760  001D4A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  6761  001D4C  0E80               	movlw	128
  6762  001D4E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  6763  001D50  0E3F               	movlw	63
  6764  001D52  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  6765                           
  6766                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  6767  001D54  0E00               	movlw	0
  6768  001D56  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  6769  001D58  0E00               	movlw	0
  6770  001D5A  6F90               	movwf	efgtoa@e& (0+255),b
  6771  001D5C                     
  6772                           ; BSR set to: 0
  6773                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  6774  001D5C  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  6775  001D60  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  6776  001D64  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  6777  001D68  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  6778  001D6C  0E00               	movlw	0
  6779  001D6E  6E05               	movwf	___fleq@ff2^0,c
  6780  001D70  0E00               	movlw	0
  6781  001D72  6E06               	movwf	(___fleq@ff2+1)^0,c
  6782  001D74  0E00               	movlw	0
  6783  001D76  6E07               	movwf	(___fleq@ff2+2)^0,c
  6784  001D78  0E00               	movlw	0
  6785  001D7A  6E08               	movwf	(___fleq@ff2+3)^0,c
  6786  001D7C  EC1B  F02A         	call	___fleq	;wreg free
  6787  001D80  B0D8               	btfsc	status,0,c
  6788  001D82  EFC5  F00E         	goto	u5931
  6789  001D86  EFC7  F00E         	goto	u5930
  6790  001D8A                     u5931:
  6791  001D8A  EF4A  F00F         	goto	l4695
  6792  001D8E                     u5930:
  6793  001D8E  EFE6  F00E         	goto	l4687
  6794  001D92                     l4683:
  6795                           
  6796                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  6797  001D92  C094  F00F         	movff	efgtoa@u,___flmul@b
  6798  001D96  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  6799  001D9A  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  6800  001D9E  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  6801  001DA2  0E00               	movlw	0
  6802  001DA4  6E13               	movwf	___flmul@a^0,c
  6803  001DA6  0E00               	movlw	0
  6804  001DA8  6E14               	movwf	(___flmul@a+1)^0,c
  6805  001DAA  0E20               	movlw	32
  6806  001DAC  6E15               	movwf	(___flmul@a+2)^0,c
  6807  001DAE  0E41               	movlw	65
  6808  001DB0  6E16               	movwf	(___flmul@a+3)^0,c
  6809  001DB2  EC13  F016         	call	___flmul	;wreg free
  6810  001DB6  C00F  F094         	movff	?___flmul,efgtoa@u
  6811  001DBA  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  6812  001DBE  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  6813  001DC2  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  6814  001DC6                     
  6815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  6816  001DC6  0100               	movlb	0	; () banked
  6817  001DC8  4B90               	infsnz	efgtoa@e& (0+255),f,b
  6818  001DCA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6819  001DCC                     l4687:
  6820                           
  6821                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  6822  001DCC  C08C  F028         	movff	efgtoa@g,___flge@ff1
  6823  001DD0  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  6824  001DD4  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  6825  001DD8  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  6826  001DDC  0E00               	movlw	0
  6827  001DDE  6E13               	movwf	___flmul@a^0,c
  6828  001DE0  0E00               	movlw	0
  6829  001DE2  6E14               	movwf	(___flmul@a+1)^0,c
  6830  001DE4  0E20               	movlw	32
  6831  001DE6  6E15               	movwf	(___flmul@a+2)^0,c
  6832  001DE8  0E41               	movlw	65
  6833  001DEA  6E16               	movwf	(___flmul@a+3)^0,c
  6834  001DEC  C094  F00F         	movff	efgtoa@u,___flmul@b
  6835  001DF0  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  6836  001DF4  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  6837  001DF8  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  6838  001DFC  EC13  F016         	call	___flmul	;wreg free
  6839  001E00  C00F  F02C         	movff	?___flmul,___flge@ff2
  6840  001E04  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  6841  001E08  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  6842  001E0C  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  6843  001E10  EC4C  F026         	call	___flge	;wreg free
  6844  001E14  B0D8               	btfsc	status,0,c
  6845  001E16  EF0F  F00F         	goto	u5941
  6846  001E1A  EF11  F00F         	goto	u5940
  6847  001E1E                     u5941:
  6848  001E1E  EFC9  F00E         	goto	l4683
  6849  001E22                     u5940:
  6850  001E22  EF31  F00F         	goto	l4693
  6851  001E26                     l4689:
  6852                           
  6853                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  6854  001E26  C094  F001         	movff	efgtoa@u,___fldiv@b
  6855  001E2A  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  6856  001E2E  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  6857  001E32  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  6858  001E36  0E00               	movlw	0
  6859  001E38  6E05               	movwf	___fldiv@a^0,c
  6860  001E3A  0E00               	movlw	0
  6861  001E3C  6E06               	movwf	(___fldiv@a+1)^0,c
  6862  001E3E  0E20               	movlw	32
  6863  001E40  6E07               	movwf	(___fldiv@a+2)^0,c
  6864  001E42  0E41               	movlw	65
  6865  001E44  6E08               	movwf	(___fldiv@a+3)^0,c
  6866  001E46  EC28  F018         	call	___fldiv	;wreg free
  6867  001E4A  C001  F094         	movff	?___fldiv,efgtoa@u
  6868  001E4E  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  6869  001E52  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  6870  001E56  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  6871  001E5A                     
  6872                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  6873  001E5A  0100               	movlb	0	; () banked
  6874  001E5C  0790               	decf	efgtoa@e& (0+255),f,b
  6875  001E5E  A0D8               	btfss	status,0,c
  6876  001E60  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  6877  001E62                     l4693:
  6878                           
  6879                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  6880  001E62  C08C  F028         	movff	efgtoa@g,___flge@ff1
  6881  001E66  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  6882  001E6A  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  6883  001E6E  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  6884  001E72  C094  F02C         	movff	efgtoa@u,___flge@ff2
  6885  001E76  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  6886  001E7A  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  6887  001E7E  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  6888  001E82  EC4C  F026         	call	___flge	;wreg free
  6889  001E86  A0D8               	btfss	status,0,c
  6890  001E88  EF48  F00F         	goto	u5951
  6891  001E8C  EF4A  F00F         	goto	u5950
  6892  001E90                     u5951:
  6893  001E90  EF13  F00F         	goto	l4689
  6894  001E94                     u5950:
  6895  001E94                     l4695:
  6896                           
  6897                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  6898  001E94  C03A  F007         	movff	efgtoa@c,tolower@c
  6899  001E98  6A08               	clrf	(tolower@c+1)^0,c
  6900  001E9A  EC4D  F02B         	call	_tolower	;wreg free
  6901  001E9E  5007               	movf	?_tolower^0,w,c
  6902  001EA0  0100               	movlb	0	; () banked
  6903  001EA2  6F81               	movwf	efgtoa@mode& (0+255),b
  6904  001EA4                     
  6905                           ; BSR set to: 0
  6906                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  6907  001EA4  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  6908  001EA8                     
  6909                           ; BSR set to: 0
  6910                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  6911  001EA8  0E67               	movlw	103
  6912  001EAA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6913  001EAC  A4D8               	btfss	status,2,c
  6914  001EAE  EF5B  F00F         	goto	u5961
  6915  001EB2  EF5D  F00F         	goto	u5960
  6916  001EB6                     u5961:
  6917  001EB6  EF83  F00F         	goto	l4709
  6918  001EBA                     u5960:
  6919  001EBA                     
  6920                           ; BSR set to: 0
  6921                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  6922  001EBA  51ED               	movf	_prec& (0+255),w,b
  6923  001EBC  11EE               	iorwf	(_prec+1)& (0+255),w,b
  6924  001EBE  A4D8               	btfss	status,2,c
  6925  001EC0  EF64  F00F         	goto	u5971
  6926  001EC4  EF66  F00F         	goto	u5970
  6927  001EC8                     u5971:
  6928  001EC8  EF6A  F00F         	goto	l4705
  6929  001ECC                     u5970:
  6930  001ECC                     
  6931                           ; BSR set to: 0
  6932                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  6933  001ECC  0E00               	movlw	0
  6934  001ECE  6FEE               	movwf	(_prec+1)& (0+255),b
  6935  001ED0  0E01               	movlw	1
  6936  001ED2  6FED               	movwf	_prec& (0+255),b
  6937  001ED4                     l4705:
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  6941  001ED4  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  6942  001ED6  EF77  F00F         	goto	u5980
  6943  001EDA  51EE               	movf	(_prec+1)& (0+255),w,b
  6944  001EDC  E106               	bnz	u5981
  6945  001EDE  05ED               	decf	_prec& (0+255),w,b
  6946  001EE0  B0D8               	btfsc	status,0,c
  6947  001EE2  EF75  F00F         	goto	u5981
  6948  001EE6  EF77  F00F         	goto	u5980
  6949  001EEA                     u5981:
  6950  001EEA  EF7D  F00F         	goto	l916
  6951  001EEE                     u5980:
  6952  001EEE                     l4707:
  6953                           
  6954                           ; BSR set to: 0
  6955  001EEE  0E00               	movlw	0
  6956  001EF0  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6957  001EF2  0E06               	movlw	6
  6958  001EF4  6F7C               	movwf	efgtoa@p& (0+255),b
  6959  001EF6  EF8C  F00F         	goto	l4715
  6960  001EFA                     l916:
  6961                           
  6962                           ; BSR set to: 0
  6963  001EFA  C0ED  F07C         	movff	_prec,efgtoa@p
  6964  001EFE  C0EE  F07D         	movff	_prec+1,efgtoa@p+1
  6965  001F02  EF8C  F00F         	goto	l4715
  6966  001F06                     l4709:
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  6970  001F06  BFEE               	btfsc	(_prec+1)& (0+255),7,b
  6971  001F08  EF88  F00F         	goto	u5991
  6972  001F0C  EF8A  F00F         	goto	u5990
  6973  001F10                     u5991:
  6974  001F10  EF77  F00F         	goto	l4707
  6975  001F14                     u5990:
  6976  001F14  EF7D  F00F         	goto	l916
  6977  001F18                     l4715:
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  6981  001F18  0E67               	movlw	103
  6982  001F1A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  6983  001F1C  A4D8               	btfss	status,2,c
  6984  001F1E  EF93  F00F         	goto	u6001
  6985  001F22  EF95  F00F         	goto	u6000
  6986  001F26                     u6001:
  6987  001F26  EFC4  F00F         	goto	l4725
  6988  001F2A                     u6000:
  6989  001F2A                     
  6990                           ; BSR set to: 0
  6991                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  6992  001F2A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  6993  001F2C  EFA3  F00F         	goto	u6010
  6994  001F30  0EFC               	movlw	252
  6995  001F32  5D90               	subwf	efgtoa@e& (0+255),w,b
  6996  001F34  0EFF               	movlw	255
  6997  001F36  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6998  001F38  A0D8               	btfss	status,0,c
  6999  001F3A  EFA1  F00F         	goto	u6011
  7000  001F3E  EFA3  F00F         	goto	u6010
  7001  001F42                     u6011:
  7002  001F42  EFC2  F00F         	goto	l4723
  7003  001F46                     u6010:
  7004  001F46                     
  7005                           ; BSR set to: 0
  7006  001F46  0EFF               	movlw	255
  7007  001F48  6E3B               	movwf	??_efgtoa^0,c
  7008  001F4A  0EFF               	movlw	255
  7009  001F4C  6E3C               	movwf	(??_efgtoa+1)^0,c
  7010  001F4E  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  7011  001F52  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  7012  001F56  503B               	movf	??_efgtoa^0,w,c
  7013  001F58  263D               	addwf	(??_efgtoa+2)^0,f,c
  7014  001F5A  503C               	movf	(??_efgtoa+1)^0,w,c
  7015  001F5C  223E               	addwfc	(??_efgtoa+3)^0,f,c
  7016  001F5E  5190               	movf	efgtoa@e& (0+255),w,b
  7017  001F60  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  7018  001F62  503E               	movf	(??_efgtoa+3)^0,w,c
  7019  001F64  0A80               	xorlw	128
  7020  001F66  6E3F               	movwf	(??_efgtoa+4)^0,c
  7021  001F68  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  7022  001F6A  0A80               	xorlw	128
  7023  001F6C  583F               	subwfb	(??_efgtoa+4)^0,w,c
  7024  001F6E  A0D8               	btfss	status,0,c
  7025  001F70  EFBC  F00F         	goto	u6021
  7026  001F74  EFBE  F00F         	goto	u6020
  7027  001F78                     u6021:
  7028  001F78  EFC2  F00F         	goto	l4723
  7029  001F7C                     u6020:
  7030  001F7C                     
  7031                           ; BSR set to: 0
  7032                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  7033  001F7C  0E66               	movlw	102
  7034  001F7E  6F80               	movwf	efgtoa@nmode& (0+255),b
  7035                           
  7036                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  7037  001F80  EFC4  F00F         	goto	l4725
  7038  001F84                     l4723:
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  7042  001F84  0E65               	movlw	101
  7043  001F86  6F80               	movwf	efgtoa@nmode& (0+255),b
  7044  001F88                     l4725:
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 411:     m = p;
  7048  001F88  C07C  F072         	movff	efgtoa@p,efgtoa@m
  7049  001F8C  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  7050  001F90                     
  7051                           ; BSR set to: 0
  7052                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  7053  001F90  0E67               	movlw	103
  7054  001F92  1981               	xorwf	efgtoa@mode& (0+255),w,b
  7055  001F94  A4D8               	btfss	status,2,c
  7056  001F96  EFCF  F00F         	goto	u6031
  7057  001F9A  EFD1  F00F         	goto	u6030
  7058  001F9E                     u6031:
  7059  001F9E  EFE1  F00F         	goto	l4733
  7060  001FA2                     u6030:
  7061  001FA2                     
  7062                           ; BSR set to: 0
  7063  001FA2  0E66               	movlw	102
  7064  001FA4  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  7065  001FA6  A4D8               	btfss	status,2,c
  7066  001FA8  EFD8  F00F         	goto	u6041
  7067  001FAC  EFDA  F00F         	goto	u6040
  7068  001FB0                     u6041:
  7069  001FB0  EFE3  F00F         	goto	l4735
  7070  001FB4                     u6040:
  7071  001FB4                     
  7072                           ; BSR set to: 0
  7073  001FB4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7074  001FB6  EFE1  F00F         	goto	u6050
  7075  001FBA  EFDF  F00F         	goto	u6051
  7076  001FBE                     u6051:
  7077  001FBE  EFE3  F00F         	goto	l4735
  7078  001FC2                     u6050:
  7079  001FC2                     l4733:
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 413:         ++m;
  7083  001FC2  4B72               	infsnz	efgtoa@m& (0+255),f,b
  7084  001FC4  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  7085  001FC6                     l4735:
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  7089  001FC6  0E66               	movlw	102
  7090  001FC8  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  7091  001FCA  A4D8               	btfss	status,2,c
  7092  001FCC  EFEA  F00F         	goto	u6061
  7093  001FD0  EFEC  F00F         	goto	u6060
  7094  001FD4                     u6061:
  7095  001FD4  EF0C  F010         	goto	l4745
  7096  001FD8                     u6060:
  7097  001FD8                     
  7098                           ; BSR set to: 0
  7099                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  7100  001FD8  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7101  001FDA  EFF3  F00F         	goto	u6070
  7102  001FDE  EFF1  F00F         	goto	u6071
  7103  001FE2                     u6071:
  7104  001FE2  EFFF  F00F         	goto	l4741
  7105  001FE6                     u6070:
  7106  001FE6                     
  7107                           ; BSR set to: 0
  7108                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  7109  001FE6  0E00               	movlw	0
  7110  001FE8  6F94               	movwf	efgtoa@u& (0+255),b
  7111  001FEA  0E00               	movlw	0
  7112  001FEC  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  7113  001FEE  0E80               	movlw	128
  7114  001FF0  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  7115  001FF2  0E3F               	movlw	63
  7116  001FF4  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  7117                           
  7118                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  7119  001FF6  0E00               	movlw	0
  7120  001FF8  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  7121  001FFA  0E00               	movlw	0
  7122  001FFC  6F90               	movwf	efgtoa@e& (0+255),b
  7123  001FFE                     l4741:
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  7127  001FFE  0E67               	movlw	103
  7128  002000  1981               	xorwf	efgtoa@mode& (0+255),w,b
  7129  002002  B4D8               	btfsc	status,2,c
  7130  002004  EF06  F010         	goto	u6081
  7131  002008  EF08  F010         	goto	u6080
  7132  00200C                     u6081:
  7133  00200C  EF0C  F010         	goto	l4745
  7134  002010                     u6080:
  7135  002010                     
  7136                           ; BSR set to: 0
  7137                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  7138  002010  5190               	movf	efgtoa@e& (0+255),w,b
  7139  002012  2772               	addwf	efgtoa@m& (0+255),f,b
  7140  002014  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  7141  002016  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7142  002018                     l4745:
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  7146  002018  0E00               	movlw	0
  7147  00201A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  7148  00201C  0E00               	movlw	0
  7149  00201E  6F8A               	movwf	efgtoa@i& (0+255),b
  7150  002020                     
  7151                           ; BSR set to: 0
  7152                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 429:     h = g;
  7153  002020  C08C  F082         	movff	efgtoa@g,efgtoa@h
  7154  002024  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  7155  002028  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  7156  00202C  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  7157  002030                     
  7158                           ; BSR set to: 0
  7159                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  7160  002030  C094  F074         	movff	efgtoa@u,efgtoa@ou
  7161  002034  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  7162  002038  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  7163  00203C  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  7164                           
  7165                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  7166  002040  EF9D  F010         	goto	l4759
  7167  002044                     l4751:
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  7171  002044  C082  F001         	movff	efgtoa@h,___fldiv@b
  7172  002048  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  7173  00204C  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  7174  002050  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  7175  002054  C094  F005         	movff	efgtoa@u,___fldiv@a
  7176  002058  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  7177  00205C  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  7178  002060  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  7179  002064  EC28  F018         	call	___fldiv	;wreg free
  7180  002068  C001  F01A         	movff	?___fldiv,floorf@x
  7181  00206C  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  7182  002070  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  7183  002074  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  7184  002078  ECD4  F01C         	call	_floorf	;wreg free
  7185  00207C  C01A  F086         	movff	?_floorf,efgtoa@l
  7186  002080  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  7187  002084  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  7188  002088  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  7189                           
  7190                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  7191  00208C  C086  F001         	movff	efgtoa@l,___fltol@f1
  7192  002090  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  7193  002094  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  7194  002098  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  7195  00209C  ECC9  F025         	call	___fltol	;wreg free
  7196  0020A0  C001  F078         	movff	?___fltol,efgtoa@d
  7197  0020A4  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  7198  0020A8                     
  7199                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  7200  0020A8  C082  F028         	movff	efgtoa@h,___flsub@b
  7201  0020AC  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  7202  0020B0  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  7203  0020B4  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  7204  0020B8  C094  F013         	movff	efgtoa@u,___flmul@a
  7205  0020BC  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  7206  0020C0  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  7207  0020C4  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  7208  0020C8  C086  F00F         	movff	efgtoa@l,___flmul@b
  7209  0020CC  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  7210  0020D0  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  7211  0020D4  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  7212  0020D8  EC13  F016         	call	___flmul	;wreg free
  7213  0020DC  C00F  F02C         	movff	?___flmul,___flsub@a
  7214  0020E0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  7215  0020E4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  7216  0020E8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  7217  0020EC  EC31  F02C         	call	___flsub	;wreg free
  7218  0020F0  C028  F082         	movff	?___flsub,efgtoa@h
  7219  0020F4  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  7220  0020F8  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  7221  0020FC  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  7222  002100                     
  7223                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  7224  002100  C094  F001         	movff	efgtoa@u,___fldiv@b
  7225  002104  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  7226  002108  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  7227  00210C  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  7228  002110  0E00               	movlw	0
  7229  002112  6E05               	movwf	___fldiv@a^0,c
  7230  002114  0E00               	movlw	0
  7231  002116  6E06               	movwf	(___fldiv@a+1)^0,c
  7232  002118  0E20               	movlw	32
  7233  00211A  6E07               	movwf	(___fldiv@a+2)^0,c
  7234  00211C  0E41               	movlw	65
  7235  00211E  6E08               	movwf	(___fldiv@a+3)^0,c
  7236  002120  EC28  F018         	call	___fldiv	;wreg free
  7237  002124  C001  F094         	movff	?___fldiv,efgtoa@u
  7238  002128  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  7239  00212C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  7240  002130  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  7241  002134                     
  7242                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 436:         ++i;
  7243  002134  0100               	movlb	0	; () banked
  7244  002136  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  7245  002138  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  7246  00213A                     l4759:
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  7250  00213A  5172               	movf	efgtoa@m& (0+255),w,b
  7251  00213C  5D8A               	subwf	efgtoa@i& (0+255),w,b
  7252  00213E  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  7253  002140  0A80               	xorlw	128
  7254  002142  6E3B               	movwf	??_efgtoa^0,c
  7255  002144  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  7256  002146  0A80               	xorlw	128
  7257  002148  583B               	subwfb	??_efgtoa^0,w,c
  7258  00214A  A0D8               	btfss	status,0,c
  7259  00214C  EFAA  F010         	goto	u6091
  7260  002150  EFAC  F010         	goto	u6090
  7261  002154                     u6091:
  7262  002154  EF22  F010         	goto	l4751
  7263  002158                     u6090:
  7264  002158                     
  7265                           ; BSR set to: 0
  7266                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  7267  002158  C094  F00F         	movff	efgtoa@u,___flmul@b
  7268  00215C  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  7269  002160  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  7270  002164  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  7271  002168  0E00               	movlw	0
  7272  00216A  6E13               	movwf	___flmul@a^0,c
  7273  00216C  0E00               	movlw	0
  7274  00216E  6E14               	movwf	(___flmul@a+1)^0,c
  7275  002170  0EA0               	movlw	160
  7276  002172  6E15               	movwf	(___flmul@a+2)^0,c
  7277  002174  0E40               	movlw	64
  7278  002176  6E16               	movwf	(___flmul@a+3)^0,c
  7279  002178  EC13  F016         	call	___flmul	;wreg free
  7280  00217C  C00F  F086         	movff	?___flmul,efgtoa@l
  7281  002180  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  7282  002184  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  7283  002188  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  7284  00218C                     
  7285                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  7286  00218C  C082  F028         	movff	efgtoa@h,___flge@ff1
  7287  002190  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  7288  002194  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  7289  002198  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  7290  00219C  C086  F02C         	movff	efgtoa@l,___flge@ff2
  7291  0021A0  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  7292  0021A4  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  7293  0021A8  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  7294  0021AC  EC4C  F026         	call	___flge	;wreg free
  7295  0021B0  B0D8               	btfsc	status,0,c
  7296  0021B2  EFDD  F010         	goto	u6101
  7297  0021B6  EFDF  F010         	goto	u6100
  7298  0021BA                     u6101:
  7299  0021BA  EFEA  F010         	goto	l4767
  7300  0021BE                     u6100:
  7301  0021BE                     
  7302                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  7303  0021BE  0E00               	movlw	0
  7304  0021C0  0100               	movlb	0	; () banked
  7305  0021C2  6F86               	movwf	efgtoa@l& (0+255),b
  7306  0021C4  0E00               	movlw	0
  7307  0021C6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  7308  0021C8  0E00               	movlw	0
  7309  0021CA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  7310  0021CC  0E00               	movlw	0
  7311  0021CE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  7312                           
  7313                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 443:     } else {
  7314  0021D0  EF13  F011         	goto	l4773
  7315  0021D4                     l4767:
  7316                           
  7317                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  7318  0021D4  C082  F001         	movff	efgtoa@h,___fleq@ff1
  7319  0021D8  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  7320  0021DC  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  7321  0021E0  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  7322  0021E4  C086  F005         	movff	efgtoa@l,___fleq@ff2
  7323  0021E8  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  7324  0021EC  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  7325  0021F0  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  7326  0021F4  EC1B  F02A         	call	___fleq	;wreg free
  7327  0021F8  A0D8               	btfss	status,0,c
  7328  0021FA  EF01  F011         	goto	u6111
  7329  0021FE  EF03  F011         	goto	u6110
  7330  002202                     u6111:
  7331  002202  EF13  F011         	goto	l4773
  7332  002206                     u6110:
  7333  002206  0100               	movlb	0	; () banked
  7334  002208  B178               	btfsc	efgtoa@d& (0+255),0,b
  7335  00220A  EF09  F011         	goto	u6121
  7336  00220E  EF0B  F011         	goto	u6120
  7337  002212                     u6121:
  7338  002212  EF13  F011         	goto	l4773
  7339  002216                     u6120:
  7340  002216                     
  7341                           ; BSR set to: 0
  7342                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  7343  002216  0E00               	movlw	0
  7344  002218  6F86               	movwf	efgtoa@l& (0+255),b
  7345  00221A  0E00               	movlw	0
  7346  00221C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  7347  00221E  0E00               	movlw	0
  7348  002220  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  7349  002222  0E00               	movlw	0
  7350  002224  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  7351  002226                     l4773:
  7352                           
  7353                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  7354  002226  C08C  F001         	movff	efgtoa@g,___fladd@b
  7355  00222A  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  7356  00222E  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  7357  002232  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  7358  002236  C086  F005         	movff	efgtoa@l,___fladd@a
  7359  00223A  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  7360  00223E  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  7361  002242  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  7362  002246  ECB3  F013         	call	___fladd	;wreg free
  7363  00224A  C001  F082         	movff	?___fladd,efgtoa@h
  7364  00224E  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  7365  002252  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  7366  002256  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  7367  00225A                     
  7368                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  7369  00225A  C082  F028         	movff	efgtoa@h,___flge@ff1
  7370  00225E  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  7371  002262  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  7372  002266  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  7373  00226A  0E00               	movlw	0
  7374  00226C  6E13               	movwf	___flmul@a^0,c
  7375  00226E  0E00               	movlw	0
  7376  002270  6E14               	movwf	(___flmul@a+1)^0,c
  7377  002272  0E20               	movlw	32
  7378  002274  6E15               	movwf	(___flmul@a+2)^0,c
  7379  002276  0E41               	movlw	65
  7380  002278  6E16               	movwf	(___flmul@a+3)^0,c
  7381  00227A  C074  F00F         	movff	efgtoa@ou,___flmul@b
  7382  00227E  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  7383  002282  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  7384  002286  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  7385  00228A  EC13  F016         	call	___flmul	;wreg free
  7386  00228E  C00F  F02C         	movff	?___flmul,___flge@ff2
  7387  002292  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  7388  002296  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  7389  00229A  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  7390  00229E  EC4C  F026         	call	___flge	;wreg free
  7391  0022A2  A0D8               	btfss	status,0,c
  7392  0022A4  EF56  F011         	goto	u6131
  7393  0022A8  EF58  F011         	goto	u6130
  7394  0022AC                     u6131:
  7395  0022AC  EF81  F011         	goto	l4785
  7396  0022B0                     u6130:
  7397  0022B0                     
  7398                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 454:   e++;
  7399  0022B0  0100               	movlb	0	; () banked
  7400  0022B2  4B90               	infsnz	efgtoa@e& (0+255),f,b
  7401  0022B4  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  7402  0022B6                     
  7403                           ; BSR set to: 0
  7404                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  7405  0022B6  C074  F00F         	movff	efgtoa@ou,___flmul@b
  7406  0022BA  C075  F010         	movff	efgtoa@ou+1,___flmul@b+1
  7407  0022BE  C076  F011         	movff	efgtoa@ou+2,___flmul@b+2
  7408  0022C2  C077  F012         	movff	efgtoa@ou+3,___flmul@b+3
  7409  0022C6  0E00               	movlw	0
  7410  0022C8  6E13               	movwf	___flmul@a^0,c
  7411  0022CA  0E00               	movlw	0
  7412  0022CC  6E14               	movwf	(___flmul@a+1)^0,c
  7413  0022CE  0E20               	movlw	32
  7414  0022D0  6E15               	movwf	(___flmul@a+2)^0,c
  7415  0022D2  0E41               	movlw	65
  7416  0022D4  6E16               	movwf	(___flmul@a+3)^0,c
  7417  0022D6  EC13  F016         	call	___flmul	;wreg free
  7418  0022DA  C00F  F074         	movff	?___flmul,efgtoa@ou
  7419  0022DE  C010  F075         	movff	?___flmul+1,efgtoa@ou+1
  7420  0022E2  C011  F076         	movff	?___flmul+2,efgtoa@ou+2
  7421  0022E6  C012  F077         	movff	?___flmul+3,efgtoa@ou+3
  7422  0022EA                     
  7423                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  7424  0022EA  0E66               	movlw	102
  7425  0022EC  0100               	movlb	0	; () banked
  7426  0022EE  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  7427  0022F0  A4D8               	btfss	status,2,c
  7428  0022F2  EF7D  F011         	goto	u6141
  7429  0022F6  EF7F  F011         	goto	u6140
  7430  0022FA                     u6141:
  7431  0022FA  EF81  F011         	goto	l4785
  7432  0022FE                     u6140:
  7433  0022FE                     
  7434                           ; BSR set to: 0
  7435                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 458:    m++;
  7436  0022FE  4B72               	infsnz	efgtoa@m& (0+255),f,b
  7437  002300  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  7438  002302                     l4785:
  7439                           
  7440                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  7441  002302  C074  F094         	movff	efgtoa@ou,efgtoa@u
  7442  002306  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  7443  00230A  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  7444  00230E  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  7445  002312                     
  7446                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  7447  002312  0E65               	movlw	101
  7448  002314  0100               	movlb	0	; () banked
  7449  002316  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  7450  002318  B4D8               	btfsc	status,2,c
  7451  00231A  EF91  F011         	goto	u6151
  7452  00231E  EF93  F011         	goto	u6150
  7453  002322                     u6151:
  7454  002322  EF99  F011         	goto	l4791
  7455  002326                     u6150:
  7456  002326                     
  7457                           ; BSR set to: 0
  7458  002326  C090  F070         	movff	efgtoa@e,efgtoa@ne
  7459  00232A  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  7460  00232E  EF9D  F011         	goto	l944
  7461  002332                     l4791:
  7462                           
  7463                           ; BSR set to: 0
  7464  002332  0E00               	movlw	0
  7465  002334  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  7466  002336  0E00               	movlw	0
  7467  002338  6F70               	movwf	efgtoa@ne& (0+255),b
  7468  00233A                     l944:
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  7472  00233A  0E00               	movlw	0
  7473  00233C  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  7474  00233E  0E00               	movlw	0
  7475  002340  6F6E               	movwf	efgtoa@pp& (0+255),b
  7476                           
  7477                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  7478  002342  0E00               	movlw	0
  7479  002344  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  7480  002346  0E00               	movlw	0
  7481  002348  6F6C               	movwf	efgtoa@t& (0+255),b
  7482                           
  7483                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  7484  00234A  0E00               	movlw	0
  7485  00234C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  7486  00234E  0E00               	movlw	0
  7487  002350  6F8A               	movwf	efgtoa@i& (0+255),b
  7488                           
  7489                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7490  002352  EF98  F012         	goto	l4841
  7491  002356                     l4793:
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  7495  002356  C082  F001         	movff	efgtoa@h,___fldiv@b
  7496  00235A  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  7497  00235E  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  7498  002362  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  7499  002366  C094  F005         	movff	efgtoa@u,___fldiv@a
  7500  00236A  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  7501  00236E  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  7502  002372  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  7503  002376  EC28  F018         	call	___fldiv	;wreg free
  7504  00237A  C001  F01A         	movff	?___fldiv,floorf@x
  7505  00237E  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  7506  002382  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  7507  002386  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  7508  00238A  ECD4  F01C         	call	_floorf	;wreg free
  7509  00238E  C01A  F086         	movff	?_floorf,efgtoa@l
  7510  002392  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  7511  002396  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  7512  00239A  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  7513                           
  7514                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  7515  00239E  C086  F001         	movff	efgtoa@l,___fltol@f1
  7516  0023A2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  7517  0023A6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  7518  0023AA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  7519  0023AE  ECC9  F025         	call	___fltol	;wreg free
  7520  0023B2  C001  F078         	movff	?___fltol,efgtoa@d
  7521  0023B6  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  7522  0023BA                     
  7523                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7524  0023BA  0100               	movlb	0	; () banked
  7525  0023BC  B9EF               	btfsc	_flags& (0+255),4,b
  7526  0023BE  EFE3  F011         	goto	u6161
  7527  0023C2  EFE5  F011         	goto	u6160
  7528  0023C6                     u6161:
  7529  0023C6  EF02  F012         	goto	l4805
  7530  0023CA                     u6160:
  7531  0023CA                     
  7532                           ; BSR set to: 0
  7533  0023CA  5178               	movf	efgtoa@d& (0+255),w,b
  7534  0023CC  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7535  0023CE  A4D8               	btfss	status,2,c
  7536  0023D0  EFEC  F011         	goto	u6171
  7537  0023D4  EFEE  F011         	goto	u6170
  7538  0023D8                     u6171:
  7539  0023D8  EF02  F012         	goto	l4805
  7540  0023DC                     u6170:
  7541  0023DC                     
  7542                           ; BSR set to: 0
  7543  0023DC  0E67               	movlw	103
  7544  0023DE  1981               	xorwf	efgtoa@mode& (0+255),w,b
  7545  0023E0  A4D8               	btfss	status,2,c
  7546  0023E2  EFF5  F011         	goto	u6181
  7547  0023E6  EFF7  F011         	goto	u6180
  7548  0023EA                     u6181:
  7549  0023EA  EF02  F012         	goto	l4805
  7550  0023EE                     u6180:
  7551  0023EE                     
  7552                           ; BSR set to: 0
  7553  0023EE  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7554  0023F0  EFFE  F011         	goto	u6190
  7555  0023F4  EFFC  F011         	goto	u6191
  7556  0023F8                     u6191:
  7557  0023F8  EF02  F012         	goto	l4805
  7558  0023FC                     u6190:
  7559  0023FC                     
  7560                           ; BSR set to: 0
  7561                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  7562  0023FC  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  7563  0023FE  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  7564                           
  7565                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  7566  002400  EF4C  F012         	goto	l4833
  7567  002404                     l4805:
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  7571  002404  516E               	movf	efgtoa@pp& (0+255),w,b
  7572  002406  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7573  002408  A4D8               	btfss	status,2,c
  7574  00240A  EF09  F012         	goto	u6201
  7575  00240E  EF0B  F012         	goto	u6200
  7576  002412                     u6201:
  7577  002412  EF35  F012         	goto	l4825
  7578  002416                     u6200:
  7579  002416                     
  7580                           ; BSR set to: 0
  7581  002416  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7582  002418  EF12  F012         	goto	u6210
  7583  00241C  EF10  F012         	goto	u6211
  7584  002420                     u6211:
  7585  002420  EF35  F012         	goto	l4825
  7586  002424                     u6210:
  7587  002424                     
  7588                           ; BSR set to: 0
  7589                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  7590  002424  0E00               	movlw	low _dbuf
  7591  002426  2592               	addwf	efgtoa@n& (0+255),w,b
  7592  002428  6ED9               	movwf	fsr2l,c
  7593  00242A  0E01               	movlw	high _dbuf
  7594  00242C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7595  00242E  6EDA               	movwf	fsr2h,c
  7596  002430  0E2E               	movlw	46
  7597  002432  6EDF               	movwf	indf2,c
  7598  002434                     
  7599                           ; BSR set to: 0
  7600  002434  4B92               	infsnz	efgtoa@n& (0+255),f,b
  7601  002436  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  7602  002438                     
  7603                           ; BSR set to: 0
  7604                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  7605  002438  077E               	decf	efgtoa@w& (0+255),f,b
  7606  00243A  A0D8               	btfss	status,0,c
  7607  00243C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  7608  00243E                     
  7609                           ; BSR set to: 0
  7610                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  7611  00243E  0E00               	movlw	0
  7612  002440  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  7613  002442  0E01               	movlw	1
  7614  002444  6F6E               	movwf	efgtoa@pp& (0+255),b
  7615  002446  EF35  F012         	goto	l4825
  7616  00244A                     l4817:
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  7620  00244A  0E00               	movlw	low _dbuf
  7621  00244C  2592               	addwf	efgtoa@n& (0+255),w,b
  7622  00244E  6ED9               	movwf	fsr2l,c
  7623  002450  0E01               	movlw	high _dbuf
  7624  002452  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7625  002454  6EDA               	movwf	fsr2h,c
  7626  002456  0E30               	movlw	48
  7627  002458  6EDF               	movwf	indf2,c
  7628  00245A                     
  7629                           ; BSR set to: 0
  7630  00245A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  7631  00245C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  7632  00245E                     
  7633                           ; BSR set to: 0
  7634                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  7635  00245E  077E               	decf	efgtoa@w& (0+255),f,b
  7636  002460  A0D8               	btfss	status,0,c
  7637  002462  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  7638  002464                     
  7639                           ; BSR set to: 0
  7640                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  7641  002464  076C               	decf	efgtoa@t& (0+255),f,b
  7642  002466  A0D8               	btfss	status,0,c
  7643  002468  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  7644  00246A                     l4825:
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  7648  00246A  516C               	movf	efgtoa@t& (0+255),w,b
  7649  00246C  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7650  00246E  A4D8               	btfss	status,2,c
  7651  002470  EF3C  F012         	goto	u6221
  7652  002474  EF3E  F012         	goto	u6220
  7653  002478                     u6221:
  7654  002478  EF25  F012         	goto	l4817
  7655  00247C                     u6220:
  7656  00247C                     
  7657                           ; BSR set to: 0
  7658                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7659  00247C  0E00               	movlw	low _dbuf
  7660  00247E  2592               	addwf	efgtoa@n& (0+255),w,b
  7661  002480  6ED9               	movwf	fsr2l,c
  7662  002482  0E01               	movlw	high _dbuf
  7663  002484  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7664  002486  6EDA               	movwf	fsr2h,c
  7665  002488  5178               	movf	efgtoa@d& (0+255),w,b
  7666  00248A  0F30               	addlw	48
  7667  00248C  6EDF               	movwf	indf2,c
  7668  00248E                     
  7669                           ; BSR set to: 0
  7670  00248E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  7671  002490  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  7672  002492                     
  7673                           ; BSR set to: 0
  7674                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  7675  002492  077E               	decf	efgtoa@w& (0+255),f,b
  7676  002494  A0D8               	btfss	status,0,c
  7677  002496  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  7678  002498                     l4833:
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  7682  002498  C082  F028         	movff	efgtoa@h,___flsub@b
  7683  00249C  C083  F029         	movff	efgtoa@h+1,___flsub@b+1
  7684  0024A0  C084  F02A         	movff	efgtoa@h+2,___flsub@b+2
  7685  0024A4  C085  F02B         	movff	efgtoa@h+3,___flsub@b+3
  7686  0024A8  C094  F013         	movff	efgtoa@u,___flmul@a
  7687  0024AC  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  7688  0024B0  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  7689  0024B4  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  7690  0024B8  C086  F00F         	movff	efgtoa@l,___flmul@b
  7691  0024BC  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  7692  0024C0  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  7693  0024C4  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  7694  0024C8  EC13  F016         	call	___flmul	;wreg free
  7695  0024CC  C00F  F02C         	movff	?___flmul,___flsub@a
  7696  0024D0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  7697  0024D4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  7698  0024D8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  7699  0024DC  EC31  F02C         	call	___flsub	;wreg free
  7700  0024E0  C028  F082         	movff	?___flsub,efgtoa@h
  7701  0024E4  C029  F083         	movff	?___flsub+1,efgtoa@h+1
  7702  0024E8  C02A  F084         	movff	?___flsub+2,efgtoa@h+2
  7703  0024EC  C02B  F085         	movff	?___flsub+3,efgtoa@h+3
  7704  0024F0                     
  7705                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  7706  0024F0  C094  F001         	movff	efgtoa@u,___fldiv@b
  7707  0024F4  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  7708  0024F8  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  7709  0024FC  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  7710  002500  0E00               	movlw	0
  7711  002502  6E05               	movwf	___fldiv@a^0,c
  7712  002504  0E00               	movlw	0
  7713  002506  6E06               	movwf	(___fldiv@a+1)^0,c
  7714  002508  0E20               	movlw	32
  7715  00250A  6E07               	movwf	(___fldiv@a+2)^0,c
  7716  00250C  0E41               	movlw	65
  7717  00250E  6E08               	movwf	(___fldiv@a+3)^0,c
  7718  002510  EC28  F018         	call	___fldiv	;wreg free
  7719  002514  C001  F094         	movff	?___fldiv,efgtoa@u
  7720  002518  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  7721  00251C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  7722  002520  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  7723  002524                     
  7724                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  7725  002524  0100               	movlb	0	; () banked
  7726  002526  0770               	decf	efgtoa@ne& (0+255),f,b
  7727  002528  A0D8               	btfss	status,0,c
  7728  00252A  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  7729  00252C                     
  7730                           ; BSR set to: 0
  7731                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 490:         ++i;
  7732  00252C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  7733  00252E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  7734  002530                     l4841:
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7738  002530  5172               	movf	efgtoa@m& (0+255),w,b
  7739  002532  5D8A               	subwf	efgtoa@i& (0+255),w,b
  7740  002534  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  7741  002536  0A80               	xorlw	128
  7742  002538  6E3B               	movwf	??_efgtoa^0,c
  7743  00253A  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  7744  00253C  0A80               	xorlw	128
  7745  00253E  583B               	subwfb	??_efgtoa^0,w,c
  7746  002540  B0D8               	btfsc	status,0,c
  7747  002542  EFA5  F012         	goto	u6231
  7748  002546  EFA7  F012         	goto	u6230
  7749  00254A                     u6231:
  7750  00254A  EFB5  F012         	goto	l4845
  7751  00254E                     u6230:
  7752  00254E                     
  7753                           ; BSR set to: 0
  7754  00254E  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7755  002550  EFB3  F012         	goto	u6241
  7756  002554  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  7757  002556  E109               	bnz	u6240
  7758  002558  0E4B               	movlw	75
  7759  00255A  5D92               	subwf	efgtoa@n& (0+255),w,b
  7760  00255C  A0D8               	btfss	status,0,c
  7761  00255E  EFB3  F012         	goto	u6241
  7762  002562  EFB5  F012         	goto	u6240
  7763  002566                     u6241:
  7764  002566  EFAB  F011         	goto	l4793
  7765  00256A                     u6240:
  7766  00256A                     l4845:
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7770  00256A  516E               	movf	efgtoa@pp& (0+255),w,b
  7771  00256C  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7772  00256E  A4D8               	btfss	status,2,c
  7773  002570  EFBC  F012         	goto	u6251
  7774  002574  EFBE  F012         	goto	u6250
  7775  002578                     u6251:
  7776  002578  EFCF  F012         	goto	l4853
  7777  00257C                     u6250:
  7778  00257C                     
  7779                           ; BSR set to: 0
  7780  00257C  A9EF               	btfss	_flags& (0+255),4,b
  7781  00257E  EFC3  F012         	goto	u6261
  7782  002582  EFC5  F012         	goto	u6260
  7783  002586                     u6261:
  7784  002586  EFCF  F012         	goto	l4853
  7785  00258A                     u6260:
  7786  00258A                     
  7787                           ; BSR set to: 0
  7788                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  7789  00258A  0E00               	movlw	low _dbuf
  7790  00258C  2592               	addwf	efgtoa@n& (0+255),w,b
  7791  00258E  6ED9               	movwf	fsr2l,c
  7792  002590  0E01               	movlw	high _dbuf
  7793  002592  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7794  002594  6EDA               	movwf	fsr2h,c
  7795  002596  0E2E               	movlw	46
  7796  002598  6EDF               	movwf	indf2,c
  7797  00259A                     
  7798                           ; BSR set to: 0
  7799  00259A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  7800  00259C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  7801  00259E                     l4853:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  7805  00259E  0E00               	movlw	low _dbuf
  7806  0025A0  2592               	addwf	efgtoa@n& (0+255),w,b
  7807  0025A2  6ED9               	movwf	fsr2l,c
  7808  0025A4  0E01               	movlw	high _dbuf
  7809  0025A6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7810  0025A8  6EDA               	movwf	fsr2h,c
  7811  0025AA  0E00               	movlw	0
  7812  0025AC  6EDF               	movwf	indf2,c
  7813  0025AE                     
  7814                           ; BSR set to: 0
  7815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  7816  0025AE  0E65               	movlw	101
  7817  0025B0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  7818  0025B2  A4D8               	btfss	status,2,c
  7819  0025B4  EFDE  F012         	goto	u6271
  7820  0025B8  EFE0  F012         	goto	u6270
  7821  0025BC                     u6271:
  7822  0025BC  EF3A  F00E         	goto	l4655
  7823  0025C0                     u6270:
  7824  0025C0                     
  7825                           ; BSR set to: 0
  7826                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  7827  0025C0  0E00               	movlw	0
  7828  0025C2  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  7829  0025C4  0E4F               	movlw	79
  7830  0025C6  6F8A               	movwf	efgtoa@i& (0+255),b
  7831  0025C8                     
  7832                           ; BSR set to: 0
  7833                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  7834  0025C8  0E00               	movlw	low _dbuf
  7835  0025CA  258A               	addwf	efgtoa@i& (0+255),w,b
  7836  0025CC  6ED9               	movwf	fsr2l,c
  7837  0025CE  0E01               	movlw	high _dbuf
  7838  0025D0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7839  0025D2  6EDA               	movwf	fsr2h,c
  7840  0025D4  0E00               	movlw	0
  7841  0025D6  6EDF               	movwf	indf2,c
  7842  0025D8                     
  7843                           ; BSR set to: 0
  7844                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  7845  0025D8  0E00               	movlw	0
  7846  0025DA  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  7847  0025DC  0E00               	movlw	0
  7848  0025DE  6F7A               	movwf	efgtoa@sign& (0+255),b
  7849  0025E0                     
  7850                           ; BSR set to: 0
  7851                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  7852  0025E0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7853  0025E2  EFF7  F012         	goto	u6280
  7854  0025E6  EFF5  F012         	goto	u6281
  7855  0025EA                     u6281:
  7856  0025EA  EFFF  F012         	goto	l4869
  7857  0025EE                     u6280:
  7858  0025EE                     
  7859                           ; BSR set to: 0
  7860                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  7861  0025EE  0E00               	movlw	0
  7862  0025F0  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  7863  0025F2  0E01               	movlw	1
  7864  0025F4  6F7A               	movwf	efgtoa@sign& (0+255),b
  7865  0025F6                     
  7866                           ; BSR set to: 0
  7867                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  7868  0025F6  6D90               	negf	efgtoa@e& (0+255),b
  7869  0025F8  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  7870  0025FA  B0D8               	btfsc	status,0,c
  7871  0025FC  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  7872  0025FE                     l4869:
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  7876  0025FE  0E00               	movlw	0
  7877  002600  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  7878  002602  0E02               	movlw	2
  7879  002604  6F7C               	movwf	efgtoa@p& (0+255),b
  7880                           
  7881                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7882  002606  EF30  F013         	goto	l4881
  7883  00260A                     l4871:
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  7887  00260A  078A               	decf	efgtoa@i& (0+255),f,b
  7888  00260C  A0D8               	btfss	status,0,c
  7889  00260E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  7890  002610                     
  7891                           ; BSR set to: 0
  7892                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  7893  002610  0E00               	movlw	low _dbuf
  7894  002612  258A               	addwf	efgtoa@i& (0+255),w,b
  7895  002614  6ED9               	movwf	fsr2l,c
  7896  002616  0E01               	movlw	high _dbuf
  7897  002618  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7898  00261A  6EDA               	movwf	fsr2h,c
  7899  00261C  C090  F001         	movff	efgtoa@e,___awmod@dividend
  7900  002620  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  7901  002624  0E00               	movlw	0
  7902  002626  6E04               	movwf	(___awmod@divisor+1)^0,c
  7903  002628  0E0A               	movlw	10
  7904  00262A  6E03               	movwf	___awmod@divisor^0,c
  7905  00262C  ECC3  F029         	call	___awmod	;wreg free
  7906  002630  5001               	movf	?___awmod^0,w,c
  7907  002632  0F30               	addlw	48
  7908  002634  6EDF               	movwf	indf2,c
  7909  002636                     
  7910                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  7911  002636  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  7912  00263A  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  7913  00263E  0E00               	movlw	0
  7914  002640  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7915  002642  0E0A               	movlw	10
  7916  002644  6E03               	movwf	___awdiv@divisor^0,c
  7917  002646  EC61  F029         	call	___awdiv	;wreg free
  7918  00264A  C001  F090         	movff	?___awdiv,efgtoa@e
  7919  00264E  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  7920  002652                     
  7921                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  7922  002652  0100               	movlb	0	; () banked
  7923  002654  077C               	decf	efgtoa@p& (0+255),f,b
  7924  002656  A0D8               	btfss	status,0,c
  7925  002658  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  7926  00265A                     
  7927                           ; BSR set to: 0
  7928                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  7929  00265A  077E               	decf	efgtoa@w& (0+255),f,b
  7930  00265C  A0D8               	btfss	status,0,c
  7931  00265E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  7932  002660                     l4881:
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7936  002660  5190               	movf	efgtoa@e& (0+255),w,b
  7937  002662  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7938  002664  A4D8               	btfss	status,2,c
  7939  002666  EF37  F013         	goto	u6291
  7940  00266A  EF39  F013         	goto	u6290
  7941  00266E                     u6291:
  7942  00266E  EF05  F013         	goto	l4871
  7943  002672                     u6290:
  7944  002672                     
  7945                           ; BSR set to: 0
  7946  002672  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7947  002674  EF46  F013         	goto	u6300
  7948  002678  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  7949  00267A  E106               	bnz	u6301
  7950  00267C  057C               	decf	efgtoa@p& (0+255),w,b
  7951  00267E  B0D8               	btfsc	status,0,c
  7952  002680  EF44  F013         	goto	u6301
  7953  002684  EF46  F013         	goto	u6300
  7954  002688                     u6301:
  7955  002688  EF05  F013         	goto	l4871
  7956  00268C                     u6300:
  7957  00268C                     
  7958                           ; BSR set to: 0
  7959                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 514:         --i;
  7960  00268C  078A               	decf	efgtoa@i& (0+255),f,b
  7961  00268E  A0D8               	btfss	status,0,c
  7962  002690  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  7963  002692                     
  7964                           ; BSR set to: 0
  7965                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  7966  002692  517A               	movf	efgtoa@sign& (0+255),w,b
  7967  002694  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7968  002696  A4D8               	btfss	status,2,c
  7969  002698  EF50  F013         	goto	u6311
  7970  00269C  EF52  F013         	goto	u6310
  7971  0026A0                     u6311:
  7972  0026A0  EF58  F013         	goto	l4891
  7973  0026A4                     u6310:
  7974  0026A4                     
  7975                           ; BSR set to: 0
  7976  0026A4  0E00               	movlw	0
  7977  0026A6  6F67               	movwf	(_efgtoa$1075+1)& (0+255),b
  7978  0026A8  0E2B               	movlw	43
  7979  0026AA  6F66               	movwf	_efgtoa$1075& (0+255),b
  7980  0026AC  EF5C  F013         	goto	l4893
  7981  0026B0                     l4891:
  7982                           
  7983                           ; BSR set to: 0
  7984  0026B0  0E00               	movlw	0
  7985  0026B2  6F67               	movwf	(_efgtoa$1075+1)& (0+255),b
  7986  0026B4  0E2D               	movlw	45
  7987  0026B6  6F66               	movwf	_efgtoa$1075& (0+255),b
  7988  0026B8                     l4893:
  7989                           
  7990                           ; BSR set to: 0
  7991  0026B8  0E00               	movlw	low _dbuf
  7992  0026BA  258A               	addwf	efgtoa@i& (0+255),w,b
  7993  0026BC  6ED9               	movwf	fsr2l,c
  7994  0026BE  0E01               	movlw	high _dbuf
  7995  0026C0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7996  0026C2  6EDA               	movwf	fsr2h,c
  7997  0026C4  C066  FFDF         	movff	_efgtoa$1075,indf2
  7998  0026C8                     
  7999                           ; BSR set to: 0
  8000                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 516:         --w;
  8001  0026C8  077E               	decf	efgtoa@w& (0+255),f,b
  8002  0026CA  A0D8               	btfss	status,0,c
  8003  0026CC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  8004  0026CE                     
  8005                           ; BSR set to: 0
  8006                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8007  0026CE  078A               	decf	efgtoa@i& (0+255),f,b
  8008  0026D0  A0D8               	btfss	status,0,c
  8009  0026D2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  8010  0026D4                     
  8011                           ; BSR set to: 0
  8012  0026D4  0EBF               	movlw	191
  8013  0026D6  6E3B               	movwf	??_efgtoa^0,c
  8014  0026D8  0EFF               	movlw	255
  8015  0026DA  6E3C               	movwf	(??_efgtoa+1)^0,c
  8016  0026DC  503A               	movf	efgtoa@c^0,w,c
  8017  0026DE  6E3D               	movwf	(??_efgtoa+2)^0,c
  8018  0026E0  6A3E               	clrf	(??_efgtoa+3)^0,c
  8019  0026E2  503B               	movf	??_efgtoa^0,w,c
  8020  0026E4  263D               	addwf	(??_efgtoa+2)^0,f,c
  8021  0026E6  503C               	movf	(??_efgtoa+1)^0,w,c
  8022  0026E8  223E               	addwfc	(??_efgtoa+3)^0,f,c
  8023  0026EA  503E               	movf	(??_efgtoa+3)^0,w,c
  8024  0026EC  E10A               	bnz	u6320
  8025  0026EE  0E1A               	movlw	26
  8026  0026F0  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  8027  0026F2  A0D8               	btfss	status,0,c
  8028  0026F4  EF7E  F013         	goto	u6321
  8029  0026F8  EF81  F013         	goto	u6320
  8030  0026FC                     u6321:
  8031  0026FC  0E01               	movlw	1
  8032  0026FE  EF82  F013         	goto	u6330
  8033  002702                     u6320:
  8034  002702  0E00               	movlw	0
  8035  002704                     u6330:
  8036  002704  6F6A               	movwf	_efgtoa$1077& (0+255),b
  8037  002706  6B6B               	clrf	(_efgtoa$1077+1)& (0+255),b
  8038  002708                     
  8039                           ; BSR set to: 0
  8040  002708  516A               	movf	_efgtoa$1077& (0+255),w,b
  8041  00270A  116B               	iorwf	(_efgtoa$1077+1)& (0+255),w,b
  8042  00270C  A4D8               	btfss	status,2,c
  8043  00270E  EF8B  F013         	goto	u6341
  8044  002712  EF8D  F013         	goto	u6340
  8045  002716                     u6341:
  8046  002716  EF93  F013         	goto	l4907
  8047  00271A                     u6340:
  8048  00271A                     
  8049                           ; BSR set to: 0
  8050  00271A  0E00               	movlw	0
  8051  00271C  6F69               	movwf	(_efgtoa$1076+1)& (0+255),b
  8052  00271E  0E65               	movlw	101
  8053  002720  6F68               	movwf	_efgtoa$1076& (0+255),b
  8054  002722  EF97  F013         	goto	l4909
  8055  002726                     l4907:
  8056                           
  8057                           ; BSR set to: 0
  8058  002726  0E00               	movlw	0
  8059  002728  6F69               	movwf	(_efgtoa$1076+1)& (0+255),b
  8060  00272A  0E45               	movlw	69
  8061  00272C  6F68               	movwf	_efgtoa$1076& (0+255),b
  8062  00272E                     l4909:
  8063                           
  8064                           ; BSR set to: 0
  8065  00272E  0E00               	movlw	low _dbuf
  8066  002730  258A               	addwf	efgtoa@i& (0+255),w,b
  8067  002732  6ED9               	movwf	fsr2l,c
  8068  002734  0E01               	movlw	high _dbuf
  8069  002736  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8070  002738  6EDA               	movwf	fsr2h,c
  8071  00273A  C068  FFDF         	movff	_efgtoa$1076,indf2
  8072  00273E                     
  8073                           ; BSR set to: 0
  8074                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 519:         --w;
  8075  00273E  077E               	decf	efgtoa@w& (0+255),f,b
  8076  002740  A0D8               	btfss	status,0,c
  8077  002742  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  8078  002744                     
  8079                           ; BSR set to: 0
  8080                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  8081  002744  0E00               	movlw	low _dbuf
  8082  002746  2592               	addwf	efgtoa@n& (0+255),w,b
  8083  002748  6E01               	movwf	strcpy@dest^0,c
  8084  00274A  0E01               	movlw	high _dbuf
  8085  00274C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8086  00274E  6E02               	movwf	(strcpy@dest+1)^0,c
  8087  002750  0E00               	movlw	low _dbuf
  8088  002752  258A               	addwf	efgtoa@i& (0+255),w,b
  8089  002754  6E03               	movwf	strcpy@src^0,c
  8090  002756  0E01               	movlw	high _dbuf
  8091  002758  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8092  00275A  6E04               	movwf	(strcpy@src+1)^0,c
  8093  00275C  ECAC  F02B         	call	_strcpy	;wreg free
  8094  002760  EF3A  F00E         	goto	l4655
  8095  002764                     l898:
  8096  002764  0012               	return		;funcret
  8097  002766                     __end_of_efgtoa:
  8098                           	callstack 0
  8099                           
  8100 ;; *************** function _tolower *****************
  8101 ;; Defined at:
  8102 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\tolower.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  c               2    6[COMRAM] int 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  2    6[COMRAM] int 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2, status,0
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8116 ;;      Params:         2       0       0       0       0       0       0
  8117 ;;      Locals:         2       0       0       0       0       0       0
  8118 ;;      Temps:          4       0       0       0       0       0       0
  8119 ;;      Totals:         8       0       0       0       0       0       0
  8120 ;;Total ram usage:        8 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    1
  8123 ;; This function calls:
  8124 ;;		_isupper
  8125 ;; This function is called by:
  8126 ;;		_efgtoa
  8127 ;;		_vfpfcnvrt
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text16
  8132  00569A                     __ptext16:
  8133                           	callstack 0
  8134  00569A                     _tolower:
  8135                           	callstack 25
  8136  00569A  0EBF               	movlw	191
  8137  00569C  6E09               	movwf	??_tolower^0,c
  8138  00569E  0EFF               	movlw	255
  8139  0056A0  6E0A               	movwf	(??_tolower+1)^0,c
  8140  0056A2  C007  F00B         	movff	tolower@c,??_tolower+2
  8141  0056A6  C008  F00C         	movff	tolower@c+1,??_tolower+3
  8142  0056AA  5009               	movf	??_tolower^0,w,c
  8143  0056AC  260B               	addwf	(??_tolower+2)^0,f,c
  8144  0056AE  500A               	movf	(??_tolower+1)^0,w,c
  8145  0056B0  220C               	addwfc	(??_tolower+3)^0,f,c
  8146  0056B2  500C               	movf	(??_tolower+3)^0,w,c
  8147  0056B4  E10A               	bnz	u5390
  8148  0056B6  0E1A               	movlw	26
  8149  0056B8  5C0B               	subwf	(??_tolower+2)^0,w,c
  8150  0056BA  A0D8               	btfss	status,0,c
  8151  0056BC  EF62  F02B         	goto	u5391
  8152  0056C0  EF65  F02B         	goto	u5390
  8153  0056C4                     u5391:
  8154  0056C4  0E01               	movlw	1
  8155  0056C6  EF66  F02B         	goto	u5400
  8156  0056CA                     u5390:
  8157  0056CA  0E00               	movlw	0
  8158  0056CC                     u5400:
  8159  0056CC  6E0D               	movwf	_tolower$1378^0,c
  8160  0056CE  6A0E               	clrf	(_tolower$1378+1)^0,c
  8161  0056D0  500D               	movf	_tolower$1378^0,w,c
  8162  0056D2  100E               	iorwf	(_tolower$1378+1)^0,w,c
  8163  0056D4  B4D8               	btfsc	status,2,c
  8164  0056D6  EF6F  F02B         	goto	u5411
  8165  0056DA  EF71  F02B         	goto	u5410
  8166  0056DE                     u5411:
  8167  0056DE  EF78  F02B         	goto	l1288
  8168  0056E2                     u5410:
  8169  0056E2  0E20               	movlw	32
  8170  0056E4  1007               	iorwf	tolower@c^0,w,c
  8171  0056E6  6E07               	movwf	?_tolower^0,c
  8172  0056E8  5008               	movf	(tolower@c+1)^0,w,c
  8173  0056EA  6E08               	movwf	(?_tolower+1)^0,c
  8174  0056EC  EF7C  F02B         	goto	l1293
  8175  0056F0                     l1288:
  8176  0056F0  C007  F007         	movff	tolower@c,?_tolower
  8177  0056F4  C008  F008         	movff	tolower@c+1,?_tolower+1
  8178  0056F8                     l1293:
  8179  0056F8  0012               	return		;funcret
  8180  0056FA                     __end_of_tolower:
  8181                           	callstack 0
  8182                           
  8183 ;; *************** function _isupper *****************
  8184 ;; Defined at:
  8185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;  c               2    0[COMRAM] int 
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;                  2    0[COMRAM] int 
  8192 ;; Registers used:
  8193 ;;		wreg, status,2, status,0
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8199 ;;      Params:         2       0       0       0       0       0       0
  8200 ;;      Locals:         0       0       0       0       0       0       0
  8201 ;;      Temps:          4       0       0       0       0       0       0
  8202 ;;      Totals:         6       0       0       0       0       0       0
  8203 ;;Total ram usage:        6 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; This function calls:
  8206 ;;		Nothing
  8207 ;; This function is called by:
  8208 ;;		_efgtoa
  8209 ;;		_xtoa
  8210 ;;		_vfpfcnvrt
  8211 ;;		_tolower
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text17
  8216  0059E2                     __ptext17:
  8217                           	callstack 0
  8218  0059E2                     _isupper:
  8219                           	callstack 25
  8220  0059E2  0EBF               	movlw	191
  8221  0059E4  6E03               	movwf	??_isupper^0,c
  8222  0059E6  0EFF               	movlw	255
  8223  0059E8  6E04               	movwf	(??_isupper+1)^0,c
  8224  0059EA  C001  F005         	movff	isupper@c,??_isupper+2
  8225  0059EE  C002  F006         	movff	isupper@c+1,??_isupper+3
  8226  0059F2  5003               	movf	??_isupper^0,w,c
  8227  0059F4  2605               	addwf	(??_isupper+2)^0,f,c
  8228  0059F6  5004               	movf	(??_isupper+1)^0,w,c
  8229  0059F8  2206               	addwfc	(??_isupper+3)^0,f,c
  8230  0059FA  5006               	movf	(??_isupper+3)^0,w,c
  8231  0059FC  E10A               	bnz	u4310
  8232  0059FE  0E1A               	movlw	26
  8233  005A00  5C05               	subwf	(??_isupper+2)^0,w,c
  8234  005A02  A0D8               	btfss	status,0,c
  8235  005A04  EF06  F02D         	goto	u4311
  8236  005A08  EF09  F02D         	goto	u4310
  8237  005A0C                     u4311:
  8238  005A0C  0E01               	movlw	1
  8239  005A0E  EF0A  F02D         	goto	u4320
  8240  005A12                     u4310:
  8241  005A12  0E00               	movlw	0
  8242  005A14                     u4320:
  8243  005A14  6E01               	movwf	?_isupper^0,c
  8244  005A16  6A02               	clrf	(?_isupper+1)^0,c
  8245  005A18  0012               	return		;funcret
  8246  005A1A                     __end_of_isupper:
  8247                           	callstack 0
  8248                           
  8249 ;; *************** function _strcpy *****************
  8250 ;; Defined at:
  8251 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strcpy.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  dest            2    0[COMRAM] PTR unsigned char 
  8254 ;;		 -> dbuf(80), 
  8255 ;;  src             2    2[COMRAM] PTR const unsigned char 
  8256 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  8257 ;;		 -> dbuf(80), 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  d               2    8[COMRAM] PTR unsigned char 
  8260 ;;		 -> dbuf(80), 
  8261 ;;  s               2    6[COMRAM] PTR const unsigned char 
  8262 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  8263 ;;		 -> dbuf(80), 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  2    0[COMRAM] PTR unsigned char 
  8266 ;; Registers used:
  8267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8273 ;;      Params:         4       0       0       0       0       0       0
  8274 ;;      Locals:         4       0       0       0       0       0       0
  8275 ;;      Temps:          2       0       0       0       0       0       0
  8276 ;;      Totals:        10       0       0       0       0       0       0
  8277 ;;Total ram usage:       10 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; This function calls:
  8280 ;;		Nothing
  8281 ;; This function is called by:
  8282 ;;		_efgtoa
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           	psect	text18
  8287  005758                     __ptext18:
  8288                           	callstack 0
  8289  005758                     _strcpy:
  8290                           	callstack 25
  8291  005758  C003  F007         	movff	strcpy@src,strcpy@s
  8292  00575C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  8293  005760  C001  F009         	movff	strcpy@dest,strcpy@d
  8294  005764  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  8295  005768                     l4451:
  8296  005768  5007               	movf	strcpy@s^0,w,c
  8297  00576A  6E05               	movwf	??_strcpy^0,c
  8298  00576C  5008               	movf	(strcpy@s+1)^0,w,c
  8299  00576E  6E06               	movwf	(??_strcpy+1)^0,c
  8300  005770  4A07               	infsnz	strcpy@s^0,f,c
  8301  005772  2A08               	incf	(strcpy@s+1)^0,f,c
  8302  005774  C005  FFF6         	movff	??_strcpy,tblptrl
  8303  005778  C006  FFF7         	movff	??_strcpy+1,tblptrh
  8304  00577C  6AF8               	clrf	tblptru,c
  8305  00577E  C009  FFD9         	movff	strcpy@d,fsr2l
  8306  005782  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  8307  005786  4A09               	infsnz	strcpy@d^0,f,c
  8308  005788  2A0A               	incf	(strcpy@d+1)^0,f,c
  8309  00578A  0E05               	movlw	(high __ramtop+-1)
  8310  00578C  64F7               	cpfsgt	tblptrh,c
  8311  00578E  D003               	bra	u5377
  8312  005790  0008               	tblrd		*
  8313  005792  50F5               	movf	tablat,w,c
  8314  005794  D005               	bra	u5370
  8315  005796                     u5377:
  8316  005796  CFF6 FFE1          	movff	tblptrl,fsr1l
  8317  00579A  CFF7 FFE2          	movff	tblptrh,fsr1h
  8318  00579E  50E7               	movf	indf1,w,c
  8319  0057A0                     u5370:
  8320  0057A0  6EDF               	movwf	indf2,c
  8321  0057A2  50DF               	movf	indf2,w,c
  8322  0057A4  A4D8               	btfss	status,2,c
  8323  0057A6  EFD7  F02B         	goto	u5381
  8324  0057AA  EFD9  F02B         	goto	u5380
  8325  0057AE                     u5381:
  8326  0057AE  EFB4  F02B         	goto	l4451
  8327  0057B2                     u5380:
  8328  0057B2  0012               	return		;funcret
  8329  0057B4                     __end_of_strcpy:
  8330                           	callstack 0
  8331                           
  8332 ;; *************** function _floorf *****************
  8333 ;; Defined at:
  8334 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\floorf.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;  x               4   25[COMRAM] float 
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;  u               4   41[COMRAM] struct .
  8339 ;;  m               4   35[COMRAM] unsigned long 
  8340 ;;  e               2   39[COMRAM] int 
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  4   25[COMRAM] float 
  8343 ;; Registers used:
  8344 ;;		wreg, status,2, status,0
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8350 ;;      Params:         4       0       0       0       0       0       0
  8351 ;;      Locals:        10       0       0       0       0       0       0
  8352 ;;      Temps:          6       0       0       0       0       0       0
  8353 ;;      Totals:        20       0       0       0       0       0       0
  8354 ;;Total ram usage:       20 bytes
  8355 ;; Hardware stack levels used:    1
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_efgtoa
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text19
  8364  0039A8                     __ptext19:
  8365                           	callstack 0
  8366  0039A8                     _floorf:
  8367                           	callstack 25
  8368  0039A8  C0D9  F02A         	movff	floorf@F527,floorf@u
  8369  0039AC  C0DA  F02B         	movff	floorf@F527+1,floorf@u+1
  8370  0039B0  C0DB  F02C         	movff	floorf@F527+2,floorf@u+2
  8371  0039B4  C0DC  F02D         	movff	floorf@F527+3,floorf@u+3
  8372  0039B8  C01A  F02A         	movff	floorf@x,floorf@u
  8373  0039BC  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  8374  0039C0  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  8375  0039C4  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  8376  0039C8  0E81               	movlw	129
  8377  0039CA  6E1E               	movwf	??_floorf^0,c
  8378  0039CC  0EFF               	movlw	255
  8379  0039CE  6E1F               	movwf	(??_floorf+1)^0,c
  8380  0039D0  C02A  F020         	movff	floorf@u,??_floorf+2
  8381  0039D4  C02B  F021         	movff	floorf@u+1,??_floorf+3
  8382  0039D8  C02C  F022         	movff	floorf@u+2,??_floorf+4
  8383  0039DC  C02D  F023         	movff	floorf@u+3,??_floorf+5
  8384  0039E0  0E18               	movlw	24
  8385  0039E2  EFF8  F01C         	goto	u5420
  8386  0039E6                     u5425:
  8387  0039E6  90D8               	bcf	status,0,c
  8388  0039E8  3223               	rrcf	(??_floorf+5)^0,f,c
  8389  0039EA  3222               	rrcf	(??_floorf+4)^0,f,c
  8390  0039EC  3221               	rrcf	(??_floorf+3)^0,f,c
  8391  0039EE  3220               	rrcf	(??_floorf+2)^0,f,c
  8392  0039F0                     u5420:
  8393  0039F0  2EE8               	decfsz	wreg,f,c
  8394  0039F2  EFF3  F01C         	goto	u5425
  8395  0039F6  5020               	movf	(??_floorf+2)^0,w,c
  8396  0039F8  241E               	addwf	??_floorf^0,w,c
  8397  0039FA  6E28               	movwf	floorf@e^0,c
  8398  0039FC  0E00               	movlw	0
  8399  0039FE  201F               	addwfc	(??_floorf+1)^0,w,c
  8400  003A00  6E29               	movwf	(floorf@e+1)^0,c
  8401  003A02  BE29               	btfsc	(floorf@e+1)^0,7,c
  8402  003A04  EF0D  F01D         	goto	u5431
  8403  003A08  5029               	movf	(floorf@e+1)^0,w,c
  8404  003A0A  E109               	bnz	u5430
  8405  003A0C  0E17               	movlw	23
  8406  003A0E  5C28               	subwf	floorf@e^0,w,c
  8407  003A10  A0D8               	btfss	status,0,c
  8408  003A12  EF0D  F01D         	goto	u5431
  8409  003A16  EF0F  F01D         	goto	u5430
  8410  003A1A                     u5431:
  8411  003A1A  EF19  F01D         	goto	l4469
  8412  003A1E                     u5430:
  8413  003A1E                     l4467:
  8414  003A1E  C01A  F01A         	movff	floorf@x,?_floorf
  8415  003A22  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  8416  003A26  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  8417  003A2A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  8418  003A2E  EFDC  F01D         	goto	l1206
  8419  003A32                     l4469:
  8420  003A32  BE29               	btfsc	(floorf@e+1)^0,7,c
  8421  003A34  EF1E  F01D         	goto	u5441
  8422  003A38  EF20  F01D         	goto	u5440
  8423  003A3C                     u5441:
  8424  003A3C  EF90  F01D         	goto	l4479
  8425  003A40                     u5440:
  8426  003A40  C028  F01E         	movff	floorf@e,??_floorf
  8427  003A44  0EFF               	movlw	255
  8428  003A46  6E1F               	movwf	(??_floorf+1)^0,c
  8429  003A48  0EFF               	movlw	255
  8430  003A4A  6E20               	movwf	(??_floorf+2)^0,c
  8431  003A4C  0E7F               	movlw	127
  8432  003A4E  6E21               	movwf	(??_floorf+3)^0,c
  8433  003A50  0E00               	movlw	0
  8434  003A52  6E22               	movwf	(??_floorf+4)^0,c
  8435  003A54                     u5455:
  8436  003A54  661E               	tstfsz	??_floorf^0,c
  8437  003A56  EF2F  F01D         	goto	u5456
  8438  003A5A  EF37  F01D         	goto	u5457
  8439  003A5E                     u5456:
  8440  003A5E  3422               	rlcf	(??_floorf+4)^0,w,c
  8441  003A60  3222               	rrcf	(??_floorf+4)^0,f,c
  8442  003A62  3221               	rrcf	(??_floorf+3)^0,f,c
  8443  003A64  3220               	rrcf	(??_floorf+2)^0,f,c
  8444  003A66  321F               	rrcf	(??_floorf+1)^0,f,c
  8445  003A68  2E1E               	decfsz	??_floorf^0,f,c
  8446  003A6A  EF2A  F01D         	goto	u5455
  8447  003A6E                     u5457:
  8448  003A6E  C01F  F024         	movff	??_floorf+1,floorf@m
  8449  003A72  C020  F025         	movff	??_floorf+2,floorf@m+1
  8450  003A76  C021  F026         	movff	??_floorf+3,floorf@m+2
  8451  003A7A  C022  F027         	movff	??_floorf+4,floorf@m+3
  8452  003A7E  5024               	movf	floorf@m^0,w,c
  8453  003A80  142A               	andwf	floorf@u^0,w,c
  8454  003A82  6E1E               	movwf	??_floorf^0,c
  8455  003A84  5025               	movf	(floorf@m+1)^0,w,c
  8456  003A86  142B               	andwf	(floorf@u+1)^0,w,c
  8457  003A88  6E1F               	movwf	(??_floorf+1)^0,c
  8458  003A8A  5026               	movf	(floorf@m+2)^0,w,c
  8459  003A8C  142C               	andwf	(floorf@u+2)^0,w,c
  8460  003A8E  6E20               	movwf	(??_floorf+2)^0,c
  8461  003A90  5027               	movf	(floorf@m+3)^0,w,c
  8462  003A92  142D               	andwf	(floorf@u+3)^0,w,c
  8463  003A94  6E21               	movwf	(??_floorf+3)^0,c
  8464  003A96  501E               	movf	??_floorf^0,w,c
  8465  003A98  101F               	iorwf	(??_floorf+1)^0,w,c
  8466  003A9A  1020               	iorwf	(??_floorf+2)^0,w,c
  8467  003A9C  1021               	iorwf	(??_floorf+3)^0,w,c
  8468  003A9E  A4D8               	btfss	status,2,c
  8469  003AA0  EF54  F01D         	goto	u5461
  8470  003AA4  EF56  F01D         	goto	u5460
  8471  003AA8                     u5461:
  8472  003AA8  EF58  F01D         	goto	l4475
  8473  003AAC                     u5460:
  8474  003AAC  EF0F  F01D         	goto	l4467
  8475  003AB0                     l4475:
  8476  003AB0  C02A  F01E         	movff	floorf@u,??_floorf
  8477  003AB4  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  8478  003AB8  C02C  F020         	movff	floorf@u+2,??_floorf+2
  8479  003ABC  C02D  F021         	movff	floorf@u+3,??_floorf+3
  8480  003AC0  0E20               	movlw	32
  8481  003AC2  EF68  F01D         	goto	u5470
  8482  003AC6                     u5475:
  8483  003AC6  90D8               	bcf	status,0,c
  8484  003AC8  3221               	rrcf	(??_floorf+3)^0,f,c
  8485  003ACA  3220               	rrcf	(??_floorf+2)^0,f,c
  8486  003ACC  321F               	rrcf	(??_floorf+1)^0,f,c
  8487  003ACE  321E               	rrcf	??_floorf^0,f,c
  8488  003AD0                     u5470:
  8489  003AD0  2EE8               	decfsz	wreg,f,c
  8490  003AD2  EF63  F01D         	goto	u5475
  8491  003AD6  501E               	movf	??_floorf^0,w,c
  8492  003AD8  101F               	iorwf	(??_floorf+1)^0,w,c
  8493  003ADA  1020               	iorwf	(??_floorf+2)^0,w,c
  8494  003ADC  1021               	iorwf	(??_floorf+3)^0,w,c
  8495  003ADE  B4D8               	btfsc	status,2,c
  8496  003AE0  EF74  F01D         	goto	u5481
  8497  003AE4  EF76  F01D         	goto	u5480
  8498  003AE8                     u5481:
  8499  003AE8  EF7E  F01D         	goto	l1209
  8500  003AEC                     u5480:
  8501  003AEC  5024               	movf	floorf@m^0,w,c
  8502  003AEE  262A               	addwf	floorf@u^0,f,c
  8503  003AF0  5025               	movf	(floorf@m+1)^0,w,c
  8504  003AF2  222B               	addwfc	(floorf@u+1)^0,f,c
  8505  003AF4  5026               	movf	(floorf@m+2)^0,w,c
  8506  003AF6  222C               	addwfc	(floorf@u+2)^0,f,c
  8507  003AF8  5027               	movf	(floorf@m+3)^0,w,c
  8508  003AFA  222D               	addwfc	(floorf@u+3)^0,f,c
  8509  003AFC                     l1209:
  8510  003AFC  1C24               	comf	floorf@m^0,w,c
  8511  003AFE  6E1E               	movwf	??_floorf^0,c
  8512  003B00  1C25               	comf	(floorf@m+1)^0,w,c
  8513  003B02  6E1F               	movwf	(??_floorf+1)^0,c
  8514  003B04  1C26               	comf	(floorf@m+2)^0,w,c
  8515  003B06  6E20               	movwf	(??_floorf+2)^0,c
  8516  003B08  1C27               	comf	(floorf@m+3)^0,w,c
  8517  003B0A  6E21               	movwf	(??_floorf+3)^0,c
  8518  003B0C  501E               	movf	??_floorf^0,w,c
  8519  003B0E  162A               	andwf	floorf@u^0,f,c
  8520  003B10  501F               	movf	(??_floorf+1)^0,w,c
  8521  003B12  162B               	andwf	(floorf@u+1)^0,f,c
  8522  003B14  5020               	movf	(??_floorf+2)^0,w,c
  8523  003B16  162C               	andwf	(floorf@u+2)^0,f,c
  8524  003B18  5021               	movf	(??_floorf+3)^0,w,c
  8525  003B1A  162D               	andwf	(floorf@u+3)^0,f,c
  8526  003B1C  EFD4  F01D         	goto	l4487
  8527  003B20                     l4479:
  8528  003B20  C02A  F01E         	movff	floorf@u,??_floorf
  8529  003B24  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  8530  003B28  C02C  F020         	movff	floorf@u+2,??_floorf+2
  8531  003B2C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  8532  003B30  0E20               	movlw	32
  8533  003B32  EFA0  F01D         	goto	u5490
  8534  003B36                     u5495:
  8535  003B36  90D8               	bcf	status,0,c
  8536  003B38  3221               	rrcf	(??_floorf+3)^0,f,c
  8537  003B3A  3220               	rrcf	(??_floorf+2)^0,f,c
  8538  003B3C  321F               	rrcf	(??_floorf+1)^0,f,c
  8539  003B3E  321E               	rrcf	??_floorf^0,f,c
  8540  003B40                     u5490:
  8541  003B40  2EE8               	decfsz	wreg,f,c
  8542  003B42  EF9B  F01D         	goto	u5495
  8543  003B46  501E               	movf	??_floorf^0,w,c
  8544  003B48  101F               	iorwf	(??_floorf+1)^0,w,c
  8545  003B4A  1020               	iorwf	(??_floorf+2)^0,w,c
  8546  003B4C  1021               	iorwf	(??_floorf+3)^0,w,c
  8547  003B4E  A4D8               	btfss	status,2,c
  8548  003B50  EFAC  F01D         	goto	u5501
  8549  003B54  EFAE  F01D         	goto	u5500
  8550  003B58                     u5501:
  8551  003B58  EFB8  F01D         	goto	l4483
  8552  003B5C                     u5500:
  8553  003B5C  0E00               	movlw	0
  8554  003B5E  6E2A               	movwf	floorf@u^0,c
  8555  003B60  0E00               	movlw	0
  8556  003B62  6E2B               	movwf	(floorf@u+1)^0,c
  8557  003B64  0E00               	movlw	0
  8558  003B66  6E2C               	movwf	(floorf@u+2)^0,c
  8559  003B68  0E00               	movlw	0
  8560  003B6A  6E2D               	movwf	(floorf@u+3)^0,c
  8561  003B6C  EFD4  F01D         	goto	l4487
  8562  003B70                     l4483:
  8563  003B70  90D8               	bcf	status,0,c
  8564  003B72  342A               	rlcf	floorf@u^0,w,c
  8565  003B74  6E1E               	movwf	??_floorf^0,c
  8566  003B76  342B               	rlcf	(floorf@u+1)^0,w,c
  8567  003B78  6E1F               	movwf	(??_floorf+1)^0,c
  8568  003B7A  342C               	rlcf	(floorf@u+2)^0,w,c
  8569  003B7C  6E20               	movwf	(??_floorf+2)^0,c
  8570  003B7E  342D               	rlcf	(floorf@u+3)^0,w,c
  8571  003B80  6E21               	movwf	(??_floorf+3)^0,c
  8572  003B82  501E               	movf	??_floorf^0,w,c
  8573  003B84  101F               	iorwf	(??_floorf+1)^0,w,c
  8574  003B86  1020               	iorwf	(??_floorf+2)^0,w,c
  8575  003B88  1021               	iorwf	(??_floorf+3)^0,w,c
  8576  003B8A  B4D8               	btfsc	status,2,c
  8577  003B8C  EFCA  F01D         	goto	u5511
  8578  003B90  EFCC  F01D         	goto	u5510
  8579  003B94                     u5511:
  8580  003B94  EFD4  F01D         	goto	l4487
  8581  003B98                     u5510:
  8582  003B98  0E00               	movlw	0
  8583  003B9A  6E2A               	movwf	floorf@u^0,c
  8584  003B9C  0E00               	movlw	0
  8585  003B9E  6E2B               	movwf	(floorf@u+1)^0,c
  8586  003BA0  0E80               	movlw	128
  8587  003BA2  6E2C               	movwf	(floorf@u+2)^0,c
  8588  003BA4  0EBF               	movlw	191
  8589  003BA6  6E2D               	movwf	(floorf@u+3)^0,c
  8590  003BA8                     l4487:
  8591  003BA8  C02A  F01A         	movff	floorf@u,?_floorf
  8592  003BAC  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  8593  003BB0  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  8594  003BB4  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  8595  003BB8                     l1206:
  8596  003BB8  0012               	return		;funcret
  8597  003BBA                     __end_of_floorf:
  8598                           	callstack 0
  8599                           
  8600 ;; *************** function ___fpclassifyf *****************
  8601 ;; Defined at:
  8602 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\__fpclassifyf.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;  x               4    0[COMRAM] float 
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;  u               4   10[COMRAM] struct .
  8607 ;;  e               2    8[COMRAM] int 
  8608 ;; Return value:  Size  Location     Type
  8609 ;;                  2    0[COMRAM] int 
  8610 ;; Registers used:
  8611 ;;		wreg, status,2, status,0
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8617 ;;      Params:         4       0       0       0       0       0       0
  8618 ;;      Locals:         6       0       0       0       0       0       0
  8619 ;;      Temps:          4       0       0       0       0       0       0
  8620 ;;      Totals:        14       0       0       0       0       0       0
  8621 ;;Total ram usage:       14 bytes
  8622 ;; Hardware stack levels used:    1
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_efgtoa
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           	psect	text20
  8631  004D9C                     __ptext20:
  8632                           	callstack 0
  8633  004D9C                     ___fpclassifyf:
  8634                           	callstack 25
  8635  004D9C  C0DD  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8636  004DA0  C0DE  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8637  004DA4  C0DF  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8638  004DA8  C0E0  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8639  004DAC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8640  004DB0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8641  004DB4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8642  004DB8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8643  004DBC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8644  004DC0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8645  004DC4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8646  004DC8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8647  004DCC  0E18               	movlw	24
  8648  004DCE  EFEE  F026         	goto	u5300
  8649  004DD2                     u5305:
  8650  004DD2  90D8               	bcf	status,0,c
  8651  004DD4  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8652  004DD6  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8653  004DD8  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8654  004DDA  3205               	rrcf	??___fpclassifyf^0,f,c
  8655  004DDC                     u5300:
  8656  004DDC  2EE8               	decfsz	wreg,f,c
  8657  004DDE  EFE9  F026         	goto	u5305
  8658  004DE2  5005               	movf	??___fpclassifyf^0,w,c
  8659  004DE4  6E09               	movwf	___fpclassifyf@e^0,c
  8660  004DE6  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8661  004DE8  5009               	movf	___fpclassifyf@e^0,w,c
  8662  004DEA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8663  004DEC  A4D8               	btfss	status,2,c
  8664  004DEE  EFFB  F026         	goto	u5311
  8665  004DF2  EFFD  F026         	goto	u5310
  8666  004DF6                     u5311:
  8667  004DF6  EF1D  F027         	goto	l4439
  8668  004DFA                     u5310:
  8669  004DFA  90D8               	bcf	status,0,c
  8670  004DFC  340B               	rlcf	___fpclassifyf@u^0,w,c
  8671  004DFE  6E05               	movwf	??___fpclassifyf^0,c
  8672  004E00  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8673  004E02  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8674  004E04  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8675  004E06  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8676  004E08  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8677  004E0A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8678  004E0C  5005               	movf	??___fpclassifyf^0,w,c
  8679  004E0E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8680  004E10  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8681  004E12  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8682  004E14  A4D8               	btfss	status,2,c
  8683  004E16  EF0F  F027         	goto	u5321
  8684  004E1A  EF11  F027         	goto	u5320
  8685  004E1E                     u5321:
  8686  004E1E  EF17  F027         	goto	l4435
  8687  004E22                     u5320:
  8688  004E22  0E00               	movlw	0
  8689  004E24  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8690  004E26  0E02               	movlw	2
  8691  004E28  6E01               	movwf	?___fpclassifyf^0,c
  8692  004E2A  EF4C  F027         	goto	l1159
  8693  004E2E                     l4435:
  8694  004E2E  0E00               	movlw	0
  8695  004E30  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8696  004E32  0E03               	movlw	3
  8697  004E34  6E01               	movwf	?___fpclassifyf^0,c
  8698  004E36  EF4C  F027         	goto	l1159
  8699  004E3A                     l4439:
  8700  004E3A  2809               	incf	___fpclassifyf@e^0,w,c
  8701  004E3C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8702  004E3E  A4D8               	btfss	status,2,c
  8703  004E40  EF24  F027         	goto	u5331
  8704  004E44  EF26  F027         	goto	u5330
  8705  004E48                     u5331:
  8706  004E48  EF48  F027         	goto	l4445
  8707  004E4C                     u5330:
  8708  004E4C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8709  004E50  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8710  004E54  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8711  004E58  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8712  004E5C  0E09               	movlw	9
  8713  004E5E                     u5345:
  8714  004E5E  90D8               	bcf	status,0,c
  8715  004E60  3605               	rlcf	??___fpclassifyf^0,f,c
  8716  004E62  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8717  004E64  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8718  004E66  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8719  004E68  2EE8               	decfsz	wreg,f,c
  8720  004E6A  EF2F  F027         	goto	u5345
  8721  004E6E  5005               	movf	??___fpclassifyf^0,w,c
  8722  004E70  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8723  004E72  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8724  004E74  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8725  004E76  B4D8               	btfsc	status,2,c
  8726  004E78  EF40  F027         	goto	u5351
  8727  004E7C  EF43  F027         	goto	u5350
  8728  004E80                     u5351:
  8729  004E80  0E01               	movlw	1
  8730  004E82  EF44  F027         	goto	u5360
  8731  004E86                     u5350:
  8732  004E86  0E00               	movlw	0
  8733  004E88                     u5360:
  8734  004E88  6E01               	movwf	?___fpclassifyf^0,c
  8735  004E8A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8736  004E8C  EF4C  F027         	goto	l1159
  8737  004E90                     l4445:
  8738  004E90  0E00               	movlw	0
  8739  004E92  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8740  004E94  0E04               	movlw	4
  8741  004E96  6E01               	movwf	?___fpclassifyf^0,c
  8742  004E98                     l1159:
  8743  004E98  0012               	return		;funcret
  8744  004E9A                     __end_of___fpclassifyf:
  8745                           	callstack 0
  8746                           
  8747 ;; *************** function ___fltol *****************
  8748 ;; Defined at:
  8749 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  f1              4    0[COMRAM] int 
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;  exp1            1    9[COMRAM] unsigned char 
  8754 ;;  sign1           1    8[COMRAM] unsigned char 
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  4    0[COMRAM] long 
  8757 ;; Registers used:
  8758 ;;		wreg, status,2, status,0
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8764 ;;      Params:         4       0       0       0       0       0       0
  8765 ;;      Locals:         2       0       0       0       0       0       0
  8766 ;;      Temps:          4       0       0       0       0       0       0
  8767 ;;      Totals:        10       0       0       0       0       0       0
  8768 ;;Total ram usage:       10 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_efgtoa
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text21
  8778  004B92                     __ptext21:
  8779                           	callstack 0
  8780  004B92                     ___fltol:
  8781                           	callstack 25
  8782  004B92  3403               	rlcf	(___fltol@f1+2)^0,w,c
  8783  004B94  3404               	rlcf	(___fltol@f1+3)^0,w,c
  8784  004B96  6E0A               	movwf	___fltol@exp1^0,c
  8785  004B98  500A               	movf	___fltol@exp1^0,w,c
  8786  004B9A  A4D8               	btfss	status,2,c
  8787  004B9C  EFD2  F025         	goto	u5111
  8788  004BA0  EFD4  F025         	goto	u5110
  8789  004BA4                     u5111:
  8790  004BA4  EFDE  F025         	goto	l4325
  8791  004BA8                     u5110:
  8792  004BA8                     l4321:
  8793  004BA8  0E00               	movlw	0
  8794  004BAA  6E01               	movwf	?___fltol^0,c
  8795  004BAC  0E00               	movlw	0
  8796  004BAE  6E02               	movwf	(?___fltol+1)^0,c
  8797  004BB0  0E00               	movlw	0
  8798  004BB2  6E03               	movwf	(?___fltol+2)^0,c
  8799  004BB4  0E00               	movlw	0
  8800  004BB6  6E04               	movwf	(?___fltol+3)^0,c
  8801  004BB8  EF4B  F026         	goto	l390
  8802  004BBC                     l4325:
  8803  004BBC  C001  F005         	movff	___fltol@f1,??___fltol
  8804  004BC0  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  8805  004BC4  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  8806  004BC8  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  8807  004BCC  0E20               	movlw	32
  8808  004BCE  EFEE  F025         	goto	u5120
  8809  004BD2                     u5125:
  8810  004BD2  90D8               	bcf	status,0,c
  8811  004BD4  3208               	rrcf	(??___fltol+3)^0,f,c
  8812  004BD6  3207               	rrcf	(??___fltol+2)^0,f,c
  8813  004BD8  3206               	rrcf	(??___fltol+1)^0,f,c
  8814  004BDA  3205               	rrcf	??___fltol^0,f,c
  8815  004BDC                     u5120:
  8816  004BDC  2EE8               	decfsz	wreg,f,c
  8817  004BDE  EFE9  F025         	goto	u5125
  8818  004BE2  5005               	movf	??___fltol^0,w,c
  8819  004BE4  6E09               	movwf	___fltol@sign1^0,c
  8820  004BE6  8E03               	bsf	(___fltol@f1+2)^0,7,c
  8821  004BE8  0EFF               	movlw	255
  8822  004BEA  1601               	andwf	___fltol@f1^0,f,c
  8823  004BEC  0EFF               	movlw	255
  8824  004BEE  1602               	andwf	(___fltol@f1+1)^0,f,c
  8825  004BF0  0EFF               	movlw	255
  8826  004BF2  1603               	andwf	(___fltol@f1+2)^0,f,c
  8827  004BF4  0E00               	movlw	0
  8828  004BF6  1604               	andwf	(___fltol@f1+3)^0,f,c
  8829  004BF8  0E96               	movlw	150
  8830  004BFA  5E0A               	subwf	___fltol@exp1^0,f,c
  8831  004BFC  BE0A               	btfsc	___fltol@exp1^0,7,c
  8832  004BFE  EF05  F026         	goto	u5130
  8833  004C02  EF03  F026         	goto	u5131
  8834  004C06                     u5131:
  8835  004C06  EF1B  F026         	goto	l4345
  8836  004C0A                     u5130:
  8837  004C0A  500A               	movf	___fltol@exp1^0,w,c
  8838  004C0C  0A80               	xorlw	128
  8839  004C0E  0F97               	addlw	151
  8840  004C10  B0D8               	btfsc	status,0,c
  8841  004C12  EF0D  F026         	goto	u5141
  8842  004C16  EF0F  F026         	goto	u5140
  8843  004C1A                     u5141:
  8844  004C1A  EF11  F026         	goto	l4341
  8845  004C1E                     u5140:
  8846  004C1E  EFD4  F025         	goto	l4321
  8847  004C22                     l4341:
  8848  004C22  90D8               	bcf	status,0,c
  8849  004C24  3204               	rrcf	(___fltol@f1+3)^0,f,c
  8850  004C26  3203               	rrcf	(___fltol@f1+2)^0,f,c
  8851  004C28  3202               	rrcf	(___fltol@f1+1)^0,f,c
  8852  004C2A  3201               	rrcf	___fltol@f1^0,f,c
  8853  004C2C  3E0A               	incfsz	___fltol@exp1^0,f,c
  8854  004C2E  EF11  F026         	goto	l4341
  8855  004C32  EF33  F026         	goto	l4355
  8856  004C36                     l4345:
  8857  004C36  0E1F               	movlw	31
  8858  004C38  640A               	cpfsgt	___fltol@exp1^0,c
  8859  004C3A  EF21  F026         	goto	u5151
  8860  004C3E  EF23  F026         	goto	u5150
  8861  004C42                     u5151:
  8862  004C42  EF2B  F026         	goto	l4353
  8863  004C46                     u5150:
  8864  004C46  EFD4  F025         	goto	l4321
  8865  004C4A                     l4351:
  8866  004C4A  90D8               	bcf	status,0,c
  8867  004C4C  3601               	rlcf	___fltol@f1^0,f,c
  8868  004C4E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  8869  004C50  3603               	rlcf	(___fltol@f1+2)^0,f,c
  8870  004C52  3604               	rlcf	(___fltol@f1+3)^0,f,c
  8871  004C54  060A               	decf	___fltol@exp1^0,f,c
  8872  004C56                     l4353:
  8873  004C56  500A               	movf	___fltol@exp1^0,w,c
  8874  004C58  A4D8               	btfss	status,2,c
  8875  004C5A  EF31  F026         	goto	u5161
  8876  004C5E  EF33  F026         	goto	u5160
  8877  004C62                     u5161:
  8878  004C62  EF25  F026         	goto	l4351
  8879  004C66                     u5160:
  8880  004C66                     l4355:
  8881  004C66  5009               	movf	___fltol@sign1^0,w,c
  8882  004C68  B4D8               	btfsc	status,2,c
  8883  004C6A  EF39  F026         	goto	u5171
  8884  004C6E  EF3B  F026         	goto	u5170
  8885  004C72                     u5171:
  8886  004C72  EF43  F026         	goto	l4359
  8887  004C76                     u5170:
  8888  004C76  1E04               	comf	(___fltol@f1+3)^0,f,c
  8889  004C78  1E03               	comf	(___fltol@f1+2)^0,f,c
  8890  004C7A  1E02               	comf	(___fltol@f1+1)^0,f,c
  8891  004C7C  6C01               	negf	___fltol@f1^0,c
  8892  004C7E  0E00               	movlw	0
  8893  004C80  2202               	addwfc	(___fltol@f1+1)^0,f,c
  8894  004C82  2203               	addwfc	(___fltol@f1+2)^0,f,c
  8895  004C84  2204               	addwfc	(___fltol@f1+3)^0,f,c
  8896  004C86                     l4359:
  8897  004C86  C001  F001         	movff	___fltol@f1,?___fltol
  8898  004C8A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  8899  004C8E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  8900  004C92  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  8901  004C96                     l390:
  8902  004C96  0012               	return		;funcret
  8903  004C98                     __end_of___fltol:
  8904                           	callstack 0
  8905                           
  8906 ;; *************** function ___flsub *****************
  8907 ;; Defined at:
  8908 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;  b               4   39[COMRAM] long 
  8911 ;;  a               4   43[COMRAM] long 
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;		None
  8914 ;; Return value:  Size  Location     Type
  8915 ;;                  4   39[COMRAM] long 
  8916 ;; Registers used:
  8917 ;;		wreg, status,2, status,0, cstack
  8918 ;; Tracked objects:
  8919 ;;		On entry : 0/0
  8920 ;;		On exit  : 0/0
  8921 ;;		Unchanged: 0/0
  8922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8923 ;;      Params:         8       0       0       0       0       0       0
  8924 ;;      Locals:         0       0       0       0       0       0       0
  8925 ;;      Temps:          0       0       0       0       0       0       0
  8926 ;;      Totals:         8       0       0       0       0       0       0
  8927 ;;Total ram usage:        8 bytes
  8928 ;; Hardware stack levels used:    1
  8929 ;; Hardware stack levels required when called:    1
  8930 ;; This function calls:
  8931 ;;		___fladd
  8932 ;; This function is called by:
  8933 ;;		_efgtoa
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text22
  8938  005862                     __ptext22:
  8939                           	callstack 0
  8940  005862                     ___flsub:
  8941                           	callstack 24
  8942  005862  0E00               	movlw	0
  8943  005864  1A2C               	xorwf	___flsub@a^0,f,c
  8944  005866  0E00               	movlw	0
  8945  005868  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  8946  00586A  0E00               	movlw	0
  8947  00586C  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  8948  00586E  0E80               	movlw	128
  8949  005870  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  8950  005872  C028  F001         	movff	___flsub@b,___fladd@b
  8951  005876  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  8952  00587A  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  8953  00587E  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  8954  005882  C02C  F005         	movff	___flsub@a,___fladd@a
  8955  005886  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  8956  00588A  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  8957  00588E  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  8958  005892  ECB3  F013         	call	___fladd	;wreg free
  8959  005896  C001  F028         	movff	?___fladd,?___flsub
  8960  00589A  C002  F029         	movff	?___fladd+1,?___flsub+1
  8961  00589E  C003  F02A         	movff	?___fladd+2,?___flsub+2
  8962  0058A2  C004  F02B         	movff	?___fladd+3,?___flsub+3
  8963  0058A6  0012               	return		;funcret
  8964  0058A8                     __end_of___flsub:
  8965                           	callstack 0
  8966                           
  8967 ;; *************** function ___fladd *****************
  8968 ;; Defined at:
  8969 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;  b               4    0[COMRAM] long 
  8972 ;;  a               4    4[COMRAM] long 
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;  grs             1   15[COMRAM] unsigned char 
  8975 ;;  bexp            1   14[COMRAM] unsigned char 
  8976 ;;  aexp            1   13[COMRAM] unsigned char 
  8977 ;;  signs           1   12[COMRAM] unsigned char 
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  4    0[COMRAM] unsigned char 
  8980 ;; Registers used:
  8981 ;;		wreg, status,2, status,0
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8987 ;;      Params:         8       0       0       0       0       0       0
  8988 ;;      Locals:         4       0       0       0       0       0       0
  8989 ;;      Temps:          4       0       0       0       0       0       0
  8990 ;;      Totals:        16       0       0       0       0       0       0
  8991 ;;Total ram usage:       16 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; This function calls:
  8994 ;;		Nothing
  8995 ;; This function is called by:
  8996 ;;		___flsub
  8997 ;;		_efgtoa
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           	psect	text23
  9002  002766                     __ptext23:
  9003                           	callstack 0
  9004  002766                     ___fladd:
  9005                           	callstack 24
  9006  002766  5004               	movf	(___fladd@b+3)^0,w,c
  9007  002768  0B80               	andlw	128
  9008  00276A  6E0D               	movwf	___fladd@signs^0,c
  9009  00276C  5004               	movf	(___fladd@b+3)^0,w,c
  9010  00276E  2404               	addwf	(___fladd@b+3)^0,w,c
  9011  002770  6E0F               	movwf	___fladd@bexp^0,c
  9012  002772  AE03               	btfss	(___fladd@b+2)^0,7,c
  9013  002774  EFBE  F013         	goto	u3901
  9014  002778  EFC0  F013         	goto	u3900
  9015  00277C                     u3901:
  9016  00277C  EFC1  F013         	goto	l3611
  9017  002780                     u3900:
  9018  002780  800F               	bsf	___fladd@bexp^0,0,c
  9019  002782                     l3611:
  9020  002782  500F               	movf	___fladd@bexp^0,w,c
  9021  002784  B4D8               	btfsc	status,2,c
  9022  002786  EFC7  F013         	goto	u3911
  9023  00278A  EFC9  F013         	goto	u3910
  9024  00278E                     u3911:
  9025  00278E  EFDE  F013         	goto	l3621
  9026  002792                     u3910:
  9027  002792  280F               	incf	___fladd@bexp^0,w,c
  9028  002794  A4D8               	btfss	status,2,c
  9029  002796  EFCF  F013         	goto	u3921
  9030  00279A  EFD1  F013         	goto	u3920
  9031  00279E                     u3921:
  9032  00279E  EFD9  F013         	goto	l3617
  9033  0027A2                     u3920:
  9034  0027A2  0E00               	movlw	0
  9035  0027A4  6E01               	movwf	___fladd@b^0,c
  9036  0027A6  0E00               	movlw	0
  9037  0027A8  6E02               	movwf	(___fladd@b+1)^0,c
  9038  0027AA  0E00               	movlw	0
  9039  0027AC  6E03               	movwf	(___fladd@b+2)^0,c
  9040  0027AE  0E00               	movlw	0
  9041  0027B0  6E04               	movwf	(___fladd@b+3)^0,c
  9042  0027B2                     l3617:
  9043  0027B2  8E03               	bsf	(___fladd@b+2)^0,7,c
  9044  0027B4  0E00               	movlw	0
  9045  0027B6  6E04               	movwf	(___fladd@b+3)^0,c
  9046  0027B8  EFE6  F013         	goto	l3623
  9047  0027BC                     l3621:
  9048  0027BC  0E00               	movlw	0
  9049  0027BE  6E01               	movwf	___fladd@b^0,c
  9050  0027C0  0E00               	movlw	0
  9051  0027C2  6E02               	movwf	(___fladd@b+1)^0,c
  9052  0027C4  0E00               	movlw	0
  9053  0027C6  6E03               	movwf	(___fladd@b+2)^0,c
  9054  0027C8  0E00               	movlw	0
  9055  0027CA  6E04               	movwf	(___fladd@b+3)^0,c
  9056  0027CC                     l3623:
  9057  0027CC  5008               	movf	(___fladd@a+3)^0,w,c
  9058  0027CE  0B80               	andlw	128
  9059  0027D0  6E0E               	movwf	___fladd@aexp^0,c
  9060  0027D2  500D               	movf	___fladd@signs^0,w,c
  9061  0027D4  180E               	xorwf	___fladd@aexp^0,w,c
  9062  0027D6  B4D8               	btfsc	status,2,c
  9063  0027D8  EFF0  F013         	goto	u3931
  9064  0027DC  EFF2  F013         	goto	u3930
  9065  0027E0                     u3931:
  9066  0027E0  EFF3  F013         	goto	l3629
  9067  0027E4                     u3930:
  9068  0027E4  8C0D               	bsf	___fladd@signs^0,6,c
  9069  0027E6                     l3629:
  9070  0027E6  5008               	movf	(___fladd@a+3)^0,w,c
  9071  0027E8  2408               	addwf	(___fladd@a+3)^0,w,c
  9072  0027EA  6E0E               	movwf	___fladd@aexp^0,c
  9073  0027EC  AE07               	btfss	(___fladd@a+2)^0,7,c
  9074  0027EE  EFFB  F013         	goto	u3941
  9075  0027F2  EFFD  F013         	goto	u3940
  9076  0027F6                     u3941:
  9077  0027F6  EFFE  F013         	goto	l3635
  9078  0027FA                     u3940:
  9079  0027FA  800E               	bsf	___fladd@aexp^0,0,c
  9080  0027FC                     l3635:
  9081  0027FC  500E               	movf	___fladd@aexp^0,w,c
  9082  0027FE  B4D8               	btfsc	status,2,c
  9083  002800  EF04  F014         	goto	u3951
  9084  002804  EF06  F014         	goto	u3950
  9085  002808                     u3951:
  9086  002808  EF1B  F014         	goto	l3645
  9087  00280C                     u3950:
  9088  00280C  280E               	incf	___fladd@aexp^0,w,c
  9089  00280E  A4D8               	btfss	status,2,c
  9090  002810  EF0C  F014         	goto	u3961
  9091  002814  EF0E  F014         	goto	u3960
  9092  002818                     u3961:
  9093  002818  EF16  F014         	goto	l3641
  9094  00281C                     u3960:
  9095  00281C  0E00               	movlw	0
  9096  00281E  6E05               	movwf	___fladd@a^0,c
  9097  002820  0E00               	movlw	0
  9098  002822  6E06               	movwf	(___fladd@a+1)^0,c
  9099  002824  0E00               	movlw	0
  9100  002826  6E07               	movwf	(___fladd@a+2)^0,c
  9101  002828  0E00               	movlw	0
  9102  00282A  6E08               	movwf	(___fladd@a+3)^0,c
  9103  00282C                     l3641:
  9104  00282C  8E07               	bsf	(___fladd@a+2)^0,7,c
  9105  00282E  0E00               	movlw	0
  9106  002830  6E08               	movwf	(___fladd@a+3)^0,c
  9107  002832  EF23  F014         	goto	l3647
  9108  002836                     l3645:
  9109  002836  0E00               	movlw	0
  9110  002838  6E05               	movwf	___fladd@a^0,c
  9111  00283A  0E00               	movlw	0
  9112  00283C  6E06               	movwf	(___fladd@a+1)^0,c
  9113  00283E  0E00               	movlw	0
  9114  002840  6E07               	movwf	(___fladd@a+2)^0,c
  9115  002842  0E00               	movlw	0
  9116  002844  6E08               	movwf	(___fladd@a+3)^0,c
  9117  002846                     l3647:
  9118  002846  500F               	movf	___fladd@bexp^0,w,c
  9119  002848  5C0E               	subwf	___fladd@aexp^0,w,c
  9120  00284A  B0D8               	btfsc	status,0,c
  9121  00284C  EF2A  F014         	goto	u3971
  9122  002850  EF2C  F014         	goto	u3970
  9123  002854                     u3971:
  9124  002854  EF53  F014         	goto	l3683
  9125  002858                     u3970:
  9126  002858  AC0D               	btfss	___fladd@signs^0,6,c
  9127  00285A  EF31  F014         	goto	u3981
  9128  00285E  EF33  F014         	goto	u3980
  9129  002862                     u3981:
  9130  002862  EF35  F014         	goto	l3653
  9131  002866                     u3980:
  9132  002866  0E80               	movlw	128
  9133  002868  1A0D               	xorwf	___fladd@signs^0,f,c
  9134  00286A                     l3653:
  9135  00286A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  9136  00286E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9137  002872  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  9138  002876  C001  F010         	movff	___fladd@b,___fladd@grs
  9139  00287A  C005  F001         	movff	___fladd@a,___fladd@b
  9140  00287E  C010  F005         	movff	___fladd@grs,___fladd@a
  9141  002882  C002  F010         	movff	___fladd@b+1,___fladd@grs
  9142  002886  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  9143  00288A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  9144  00288E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  9145  002892  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  9146  002896  C010  F007         	movff	___fladd@grs,___fladd@a+2
  9147  00289A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  9148  00289E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  9149  0028A2  C010  F008         	movff	___fladd@grs,___fladd@a+3
  9150  0028A6                     l3683:
  9151  0028A6  0E00               	movlw	0
  9152  0028A8  6E10               	movwf	___fladd@grs^0,c
  9153  0028AA  500F               	movf	___fladd@bexp^0,w,c
  9154  0028AC  C00E  F009         	movff	___fladd@aexp,??___fladd
  9155  0028B0  6A0A               	clrf	(??___fladd+1)^0,c
  9156  0028B2  5E09               	subwf	??___fladd^0,f,c
  9157  0028B4  0E00               	movlw	0
  9158  0028B6  5A0A               	subwfb	(??___fladd+1)^0,f,c
  9159  0028B8  BE0A               	btfsc	(??___fladd+1)^0,7,c
  9160  0028BA  EF68  F014         	goto	u3991
  9161  0028BE  500A               	movf	(??___fladd+1)^0,w,c
  9162  0028C0  E109               	bnz	u3990
  9163  0028C2  0E1A               	movlw	26
  9164  0028C4  5C09               	subwf	??___fladd^0,w,c
  9165  0028C6  A0D8               	btfss	status,0,c
  9166  0028C8  EF68  F014         	goto	u3991
  9167  0028CC  EF6A  F014         	goto	u3990
  9168  0028D0                     u3991:
  9169  0028D0  EFA1  F014         	goto	l622
  9170  0028D4                     u3990:
  9171  0028D4  5001               	movf	___fladd@b^0,w,c
  9172  0028D6  1002               	iorwf	(___fladd@b+1)^0,w,c
  9173  0028D8  1003               	iorwf	(___fladd@b+2)^0,w,c
  9174  0028DA  1004               	iorwf	(___fladd@b+3)^0,w,c
  9175  0028DC  A4D8               	btfss	status,2,c
  9176  0028DE  EF73  F014         	goto	u4001
  9177  0028E2  EF76  F014         	goto	u4000
  9178  0028E6                     u4001:
  9179  0028E6  0E01               	movlw	1
  9180  0028E8  EF77  F014         	goto	u4010
  9181  0028EC                     u4000:
  9182  0028EC  0E00               	movlw	0
  9183  0028EE                     u4010:
  9184  0028EE  6E10               	movwf	___fladd@grs^0,c
  9185  0028F0  0E00               	movlw	0
  9186  0028F2  6E01               	movwf	___fladd@b^0,c
  9187  0028F4  0E00               	movlw	0
  9188  0028F6  6E02               	movwf	(___fladd@b+1)^0,c
  9189  0028F8  0E00               	movlw	0
  9190  0028FA  6E03               	movwf	(___fladd@b+2)^0,c
  9191  0028FC  0E00               	movlw	0
  9192  0028FE  6E04               	movwf	(___fladd@b+3)^0,c
  9193  002900  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9194  002904  EFAA  F014         	goto	l621
  9195  002908                     l623:
  9196  002908  A010               	btfss	___fladd@grs^0,0,c
  9197  00290A  EF89  F014         	goto	u4021
  9198  00290E  EF8B  F014         	goto	u4020
  9199  002912                     u4021:
  9200  002912  EF91  F014         	goto	l3695
  9201  002916                     u4020:
  9202  002916  90D8               	bcf	status,0,c
  9203  002918  3010               	rrcf	___fladd@grs^0,w,c
  9204  00291A  0901               	iorlw	1
  9205  00291C  6E10               	movwf	___fladd@grs^0,c
  9206  00291E  EF93  F014         	goto	l3697
  9207  002922                     l3695:
  9208  002922  90D8               	bcf	status,0,c
  9209  002924  3210               	rrcf	___fladd@grs^0,f,c
  9210  002926                     l3697:
  9211  002926  A001               	btfss	___fladd@b^0,0,c
  9212  002928  EF98  F014         	goto	u4031
  9213  00292C  EF9A  F014         	goto	u4030
  9214  002930                     u4031:
  9215  002930  EF9B  F014         	goto	l3701
  9216  002934                     u4030:
  9217  002934  8E10               	bsf	___fladd@grs^0,7,c
  9218  002936                     l3701:
  9219  002936  3404               	rlcf	(___fladd@b+3)^0,w,c
  9220  002938  3204               	rrcf	(___fladd@b+3)^0,f,c
  9221  00293A  3203               	rrcf	(___fladd@b+2)^0,f,c
  9222  00293C  3202               	rrcf	(___fladd@b+1)^0,f,c
  9223  00293E  3201               	rrcf	___fladd@b^0,f,c
  9224  002940  2A0F               	incf	___fladd@bexp^0,f,c
  9225  002942                     l622:
  9226  002942  500E               	movf	___fladd@aexp^0,w,c
  9227  002944  5C0F               	subwf	___fladd@bexp^0,w,c
  9228  002946  A0D8               	btfss	status,0,c
  9229  002948  EFA8  F014         	goto	u4041
  9230  00294C  EFAA  F014         	goto	u4040
  9231  002950                     u4041:
  9232  002950  EF84  F014         	goto	l623
  9233  002954                     u4040:
  9234  002954                     l621:
  9235  002954  BC0D               	btfsc	___fladd@signs^0,6,c
  9236  002956  EFAF  F014         	goto	u4051
  9237  00295A  EFB1  F014         	goto	u4050
  9238  00295E                     u4051:
  9239  00295E  EFF1  F014         	goto	l3729
  9240  002962                     u4050:
  9241  002962  500F               	movf	___fladd@bexp^0,w,c
  9242  002964  A4D8               	btfss	status,2,c
  9243  002966  EFB7  F014         	goto	u4061
  9244  00296A  EFB9  F014         	goto	u4060
  9245  00296E                     u4061:
  9246  00296E  EFC3  F014         	goto	l3711
  9247  002972                     u4060:
  9248  002972  0E00               	movlw	0
  9249  002974  6E01               	movwf	?___fladd^0,c
  9250  002976  0E00               	movlw	0
  9251  002978  6E02               	movwf	(?___fladd+1)^0,c
  9252  00297A  0E00               	movlw	0
  9253  00297C  6E03               	movwf	(?___fladd+2)^0,c
  9254  00297E  0E00               	movlw	0
  9255  002980  6E04               	movwf	(?___fladd+3)^0,c
  9256  002982  EF12  F016         	goto	l630
  9257  002986                     l3711:
  9258  002986  5005               	movf	___fladd@a^0,w,c
  9259  002988  2601               	addwf	___fladd@b^0,f,c
  9260  00298A  5006               	movf	(___fladd@a+1)^0,w,c
  9261  00298C  2202               	addwfc	(___fladd@b+1)^0,f,c
  9262  00298E  5007               	movf	(___fladd@a+2)^0,w,c
  9263  002990  2203               	addwfc	(___fladd@b+2)^0,f,c
  9264  002992  5008               	movf	(___fladd@a+3)^0,w,c
  9265  002994  2204               	addwfc	(___fladd@b+3)^0,f,c
  9266  002996  A004               	btfss	(___fladd@b+3)^0,0,c
  9267  002998  EFD0  F014         	goto	u4071
  9268  00299C  EFD2  F014         	goto	u4070
  9269  0029A0                     u4071:
  9270  0029A0  EF7E  F015         	goto	l3765
  9271  0029A4                     u4070:
  9272  0029A4  A010               	btfss	___fladd@grs^0,0,c
  9273  0029A6  EFD7  F014         	goto	u4081
  9274  0029AA  EFD9  F014         	goto	u4080
  9275  0029AE                     u4081:
  9276  0029AE  EFDF  F014         	goto	l3719
  9277  0029B2                     u4080:
  9278  0029B2  90D8               	bcf	status,0,c
  9279  0029B4  3010               	rrcf	___fladd@grs^0,w,c
  9280  0029B6  0901               	iorlw	1
  9281  0029B8  6E10               	movwf	___fladd@grs^0,c
  9282  0029BA  EFE1  F014         	goto	l3721
  9283  0029BE                     l3719:
  9284  0029BE  90D8               	bcf	status,0,c
  9285  0029C0  3210               	rrcf	___fladd@grs^0,f,c
  9286  0029C2                     l3721:
  9287  0029C2  A001               	btfss	___fladd@b^0,0,c
  9288  0029C4  EFE6  F014         	goto	u4091
  9289  0029C8  EFE8  F014         	goto	u4090
  9290  0029CC                     u4091:
  9291  0029CC  EFE9  F014         	goto	l3725
  9292  0029D0                     u4090:
  9293  0029D0  8E10               	bsf	___fladd@grs^0,7,c
  9294  0029D2                     l3725:
  9295  0029D2  3404               	rlcf	(___fladd@b+3)^0,w,c
  9296  0029D4  3204               	rrcf	(___fladd@b+3)^0,f,c
  9297  0029D6  3203               	rrcf	(___fladd@b+2)^0,f,c
  9298  0029D8  3202               	rrcf	(___fladd@b+1)^0,f,c
  9299  0029DA  3201               	rrcf	___fladd@b^0,f,c
  9300  0029DC  2A0F               	incf	___fladd@bexp^0,f,c
  9301  0029DE  EF7E  F015         	goto	l3765
  9302  0029E2                     l3729:
  9303  0029E2  5005               	movf	___fladd@a^0,w,c
  9304  0029E4  5C01               	subwf	___fladd@b^0,w,c
  9305  0029E6  5006               	movf	(___fladd@a+1)^0,w,c
  9306  0029E8  5802               	subwfb	(___fladd@b+1)^0,w,c
  9307  0029EA  5007               	movf	(___fladd@a+2)^0,w,c
  9308  0029EC  5803               	subwfb	(___fladd@b+2)^0,w,c
  9309  0029EE  5004               	movf	(___fladd@b+3)^0,w,c
  9310  0029F0  0A80               	xorlw	128
  9311  0029F2  6E09               	movwf	??___fladd^0,c
  9312  0029F4  5008               	movf	(___fladd@a+3)^0,w,c
  9313  0029F6  0A80               	xorlw	128
  9314  0029F8  5809               	subwfb	??___fladd^0,w,c
  9315  0029FA  B0D8               	btfsc	status,0,c
  9316  0029FC  EF02  F015         	goto	u4101
  9317  002A00  EF04  F015         	goto	u4100
  9318  002A04                     u4101:
  9319  002A04  EF2F  F015         	goto	l3739
  9320  002A08                     u4100:
  9321  002A08  5001               	movf	___fladd@b^0,w,c
  9322  002A0A  5C05               	subwf	___fladd@a^0,w,c
  9323  002A0C  6E09               	movwf	??___fladd^0,c
  9324  002A0E  5002               	movf	(___fladd@b+1)^0,w,c
  9325  002A10  5806               	subwfb	(___fladd@a+1)^0,w,c
  9326  002A12  6E0A               	movwf	(??___fladd+1)^0,c
  9327  002A14  5003               	movf	(___fladd@b+2)^0,w,c
  9328  002A16  5807               	subwfb	(___fladd@a+2)^0,w,c
  9329  002A18  6E0B               	movwf	(??___fladd+2)^0,c
  9330  002A1A  5004               	movf	(___fladd@b+3)^0,w,c
  9331  002A1C  5808               	subwfb	(___fladd@a+3)^0,w,c
  9332  002A1E  6E0C               	movwf	(??___fladd+3)^0,c
  9333  002A20  0EFF               	movlw	255
  9334  002A22  2409               	addwf	??___fladd^0,w,c
  9335  002A24  6E01               	movwf	___fladd@b^0,c
  9336  002A26  0EFF               	movlw	255
  9337  002A28  200A               	addwfc	(??___fladd+1)^0,w,c
  9338  002A2A  6E02               	movwf	(___fladd@b+1)^0,c
  9339  002A2C  0EFF               	movlw	255
  9340  002A2E  200B               	addwfc	(??___fladd+2)^0,w,c
  9341  002A30  6E03               	movwf	(___fladd@b+2)^0,c
  9342  002A32  0EFF               	movlw	255
  9343  002A34  200C               	addwfc	(??___fladd+3)^0,w,c
  9344  002A36  6E04               	movwf	(___fladd@b+3)^0,c
  9345  002A38  0E80               	movlw	128
  9346  002A3A  1A0D               	xorwf	___fladd@signs^0,f,c
  9347  002A3C  6C10               	negf	___fladd@grs^0,c
  9348  002A3E  5010               	movf	___fladd@grs^0,w,c
  9349  002A40  A4D8               	btfss	status,2,c
  9350  002A42  EF25  F015         	goto	u4111
  9351  002A46  EF27  F015         	goto	u4110
  9352  002A4A                     u4111:
  9353  002A4A  EF37  F015         	goto	l638
  9354  002A4E                     u4110:
  9355  002A4E  0E01               	movlw	1
  9356  002A50  2601               	addwf	___fladd@b^0,f,c
  9357  002A52  0E00               	movlw	0
  9358  002A54  2202               	addwfc	(___fladd@b+1)^0,f,c
  9359  002A56  2203               	addwfc	(___fladd@b+2)^0,f,c
  9360  002A58  2204               	addwfc	(___fladd@b+3)^0,f,c
  9361  002A5A  EF37  F015         	goto	l638
  9362  002A5E                     l3739:
  9363  002A5E  5005               	movf	___fladd@a^0,w,c
  9364  002A60  5E01               	subwf	___fladd@b^0,f,c
  9365  002A62  5006               	movf	(___fladd@a+1)^0,w,c
  9366  002A64  5A02               	subwfb	(___fladd@b+1)^0,f,c
  9367  002A66  5007               	movf	(___fladd@a+2)^0,w,c
  9368  002A68  5A03               	subwfb	(___fladd@b+2)^0,f,c
  9369  002A6A  5008               	movf	(___fladd@a+3)^0,w,c
  9370  002A6C  5A04               	subwfb	(___fladd@b+3)^0,f,c
  9371  002A6E                     l638:
  9372  002A6E  5001               	movf	___fladd@b^0,w,c
  9373  002A70  1002               	iorwf	(___fladd@b+1)^0,w,c
  9374  002A72  1003               	iorwf	(___fladd@b+2)^0,w,c
  9375  002A74  1004               	iorwf	(___fladd@b+3)^0,w,c
  9376  002A76  A4D8               	btfss	status,2,c
  9377  002A78  EF40  F015         	goto	u4121
  9378  002A7C  EF42  F015         	goto	u4120
  9379  002A80                     u4121:
  9380  002A80  EF77  F015         	goto	l3763
  9381  002A84                     u4120:
  9382  002A84  5010               	movf	___fladd@grs^0,w,c
  9383  002A86  A4D8               	btfss	status,2,c
  9384  002A88  EF48  F015         	goto	u4131
  9385  002A8C  EF4A  F015         	goto	u4130
  9386  002A90                     u4131:
  9387  002A90  EF77  F015         	goto	l3763
  9388  002A94                     u4130:
  9389  002A94  0E00               	movlw	0
  9390  002A96  6E01               	movwf	?___fladd^0,c
  9391  002A98  0E00               	movlw	0
  9392  002A9A  6E02               	movwf	(?___fladd+1)^0,c
  9393  002A9C  0E00               	movlw	0
  9394  002A9E  6E03               	movwf	(?___fladd+2)^0,c
  9395  002AA0  0E00               	movlw	0
  9396  002AA2  6E04               	movwf	(?___fladd+3)^0,c
  9397  002AA4  EF12  F016         	goto	l630
  9398  002AA8                     l3747:
  9399  002AA8  90D8               	bcf	status,0,c
  9400  002AAA  3601               	rlcf	___fladd@b^0,f,c
  9401  002AAC  3602               	rlcf	(___fladd@b+1)^0,f,c
  9402  002AAE  3603               	rlcf	(___fladd@b+2)^0,f,c
  9403  002AB0  3604               	rlcf	(___fladd@b+3)^0,f,c
  9404  002AB2  AE10               	btfss	___fladd@grs^0,7,c
  9405  002AB4  EF5E  F015         	goto	u4141
  9406  002AB8  EF60  F015         	goto	u4140
  9407  002ABC                     u4141:
  9408  002ABC  EF61  F015         	goto	l3753
  9409  002AC0                     u4140:
  9410  002AC0  8001               	bsf	___fladd@b^0,0,c
  9411  002AC2                     l3753:
  9412  002AC2  A010               	btfss	___fladd@grs^0,0,c
  9413  002AC4  EF66  F015         	goto	u4151
  9414  002AC8  EF68  F015         	goto	u4150
  9415  002ACC                     u4151:
  9416  002ACC  EF6C  F015         	goto	l3757
  9417  002AD0                     u4150:
  9418  002AD0  80D8               	bsf	status,0,c
  9419  002AD2  3610               	rlcf	___fladd@grs^0,f,c
  9420  002AD4  EF6E  F015         	goto	l3759
  9421  002AD8                     l3757:
  9422  002AD8  90D8               	bcf	status,0,c
  9423  002ADA  3610               	rlcf	___fladd@grs^0,f,c
  9424  002ADC                     l3759:
  9425  002ADC  500F               	movf	___fladd@bexp^0,w,c
  9426  002ADE  B4D8               	btfsc	status,2,c
  9427  002AE0  EF74  F015         	goto	u4161
  9428  002AE4  EF76  F015         	goto	u4160
  9429  002AE8                     u4161:
  9430  002AE8  EF77  F015         	goto	l3763
  9431  002AEC                     u4160:
  9432  002AEC  060F               	decf	___fladd@bexp^0,f,c
  9433  002AEE                     l3763:
  9434  002AEE  AE03               	btfss	(___fladd@b+2)^0,7,c
  9435  002AF0  EF7C  F015         	goto	u4171
  9436  002AF4  EF7E  F015         	goto	u4170
  9437  002AF8                     u4171:
  9438  002AF8  EF54  F015         	goto	l3747
  9439  002AFC                     u4170:
  9440  002AFC                     l3765:
  9441  002AFC  0E00               	movlw	0
  9442  002AFE  6E0E               	movwf	___fladd@aexp^0,c
  9443  002B00  AE10               	btfss	___fladd@grs^0,7,c
  9444  002B02  EF85  F015         	goto	u4181
  9445  002B06  EF87  F015         	goto	u4180
  9446  002B0A                     u4181:
  9447  002B0A  EF9F  F015         	goto	l647
  9448  002B0E                     u4180:
  9449  002B0E  C010  F009         	movff	___fladd@grs,??___fladd
  9450  002B12  0E7F               	movlw	127
  9451  002B14  1609               	andwf	??___fladd^0,f,c
  9452  002B16  B4D8               	btfsc	status,2,c
  9453  002B18  EF90  F015         	goto	u4191
  9454  002B1C  EF92  F015         	goto	u4190
  9455  002B20                     u4191:
  9456  002B20  EF96  F015         	goto	l648
  9457  002B24                     u4190:
  9458  002B24                     l3771:
  9459  002B24  0E01               	movlw	1
  9460  002B26  6E0E               	movwf	___fladd@aexp^0,c
  9461  002B28  EF9F  F015         	goto	l647
  9462  002B2C                     l648:
  9463  002B2C  A001               	btfss	___fladd@b^0,0,c
  9464  002B2E  EF9B  F015         	goto	u4201
  9465  002B32  EF9D  F015         	goto	u4200
  9466  002B36                     u4201:
  9467  002B36  EF9F  F015         	goto	l647
  9468  002B3A                     u4200:
  9469  002B3A  EF92  F015         	goto	l3771
  9470  002B3E                     l647:
  9471  002B3E  500E               	movf	___fladd@aexp^0,w,c
  9472  002B40  B4D8               	btfsc	status,2,c
  9473  002B42  EFA5  F015         	goto	u4211
  9474  002B46  EFA7  F015         	goto	u4210
  9475  002B4A                     u4211:
  9476  002B4A  EFD2  F015         	goto	l3783
  9477  002B4E                     u4210:
  9478  002B4E  0E01               	movlw	1
  9479  002B50  2601               	addwf	___fladd@b^0,f,c
  9480  002B52  0E00               	movlw	0
  9481  002B54  2202               	addwfc	(___fladd@b+1)^0,f,c
  9482  002B56  2203               	addwfc	(___fladd@b+2)^0,f,c
  9483  002B58  2204               	addwfc	(___fladd@b+3)^0,f,c
  9484  002B5A  A004               	btfss	(___fladd@b+3)^0,0,c
  9485  002B5C  EFB2  F015         	goto	u4221
  9486  002B60  EFB4  F015         	goto	u4220
  9487  002B64                     u4221:
  9488  002B64  EFD2  F015         	goto	l3783
  9489  002B68                     u4220:
  9490  002B68  C001  F009         	movff	___fladd@b,??___fladd
  9491  002B6C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  9492  002B70  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  9493  002B74  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  9494  002B78  340C               	rlcf	(??___fladd+3)^0,w,c
  9495  002B7A  320C               	rrcf	(??___fladd+3)^0,f,c
  9496  002B7C  320B               	rrcf	(??___fladd+2)^0,f,c
  9497  002B7E  320A               	rrcf	(??___fladd+1)^0,f,c
  9498  002B80  3209               	rrcf	??___fladd^0,f,c
  9499  002B82  C009  F001         	movff	??___fladd,___fladd@b
  9500  002B86  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  9501  002B8A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  9502  002B8E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  9503  002B92  280F               	incf	___fladd@bexp^0,w,c
  9504  002B94  B4D8               	btfsc	status,2,c
  9505  002B96  EFCF  F015         	goto	u4231
  9506  002B9A  EFD1  F015         	goto	u4230
  9507  002B9E                     u4231:
  9508  002B9E  EFD2  F015         	goto	l3783
  9509  002BA2                     u4230:
  9510  002BA2  2A0F               	incf	___fladd@bexp^0,f,c
  9511  002BA4                     l3783:
  9512  002BA4  280F               	incf	___fladd@bexp^0,w,c
  9513  002BA6  B4D8               	btfsc	status,2,c
  9514  002BA8  EFD8  F015         	goto	u4241
  9515  002BAC  EFDA  F015         	goto	u4240
  9516  002BB0                     u4241:
  9517  002BB0  EFE2  F015         	goto	l3787
  9518  002BB4                     u4240:
  9519  002BB4  500F               	movf	___fladd@bexp^0,w,c
  9520  002BB6  A4D8               	btfss	status,2,c
  9521  002BB8  EFE0  F015         	goto	u4251
  9522  002BBC  EFE2  F015         	goto	u4250
  9523  002BC0                     u4251:
  9524  002BC0  EFF4  F015         	goto	l3791
  9525  002BC4                     u4250:
  9526  002BC4                     l3787:
  9527  002BC4  0E00               	movlw	0
  9528  002BC6  6E01               	movwf	___fladd@b^0,c
  9529  002BC8  0E00               	movlw	0
  9530  002BCA  6E02               	movwf	(___fladd@b+1)^0,c
  9531  002BCC  0E00               	movlw	0
  9532  002BCE  6E03               	movwf	(___fladd@b+2)^0,c
  9533  002BD0  0E00               	movlw	0
  9534  002BD2  6E04               	movwf	(___fladd@b+3)^0,c
  9535  002BD4  500F               	movf	___fladd@bexp^0,w,c
  9536  002BD6  A4D8               	btfss	status,2,c
  9537  002BD8  EFF0  F015         	goto	u4261
  9538  002BDC  EFF2  F015         	goto	u4260
  9539  002BE0                     u4261:
  9540  002BE0  EFF4  F015         	goto	l3791
  9541  002BE4                     u4260:
  9542  002BE4  0E00               	movlw	0
  9543  002BE6  6E0D               	movwf	___fladd@signs^0,c
  9544  002BE8                     l3791:
  9545  002BE8  A00F               	btfss	___fladd@bexp^0,0,c
  9546  002BEA  EFF9  F015         	goto	u4271
  9547  002BEE  EFFB  F015         	goto	u4270
  9548  002BF2                     u4271:
  9549  002BF2  EFFE  F015         	goto	l3795
  9550  002BF6                     u4270:
  9551  002BF6  8E03               	bsf	(___fladd@b+2)^0,7,c
  9552  002BF8  EFFF  F015         	goto	l3797
  9553  002BFC                     l3795:
  9554  002BFC  9E03               	bcf	(___fladd@b+2)^0,7,c
  9555  002BFE                     l3797:
  9556  002BFE  90D8               	bcf	status,0,c
  9557  002C00  300F               	rrcf	___fladd@bexp^0,w,c
  9558  002C02  6E04               	movwf	(___fladd@b+3)^0,c
  9559  002C04  AE0D               	btfss	___fladd@signs^0,7,c
  9560  002C06  EF07  F016         	goto	u4281
  9561  002C0A  EF09  F016         	goto	u4280
  9562  002C0E                     u4281:
  9563  002C0E  EF0A  F016         	goto	l3803
  9564  002C12                     u4280:
  9565  002C12  8E04               	bsf	(___fladd@b+3)^0,7,c
  9566  002C14                     l3803:
  9567  002C14  C001  F001         	movff	___fladd@b,?___fladd
  9568  002C18  C002  F002         	movff	___fladd@b+1,?___fladd+1
  9569  002C1C  C003  F003         	movff	___fladd@b+2,?___fladd+2
  9570  002C20  C004  F004         	movff	___fladd@b+3,?___fladd+3
  9571  002C24                     l630:
  9572  002C24  0012               	return		;funcret
  9573  002C26                     __end_of___fladd:
  9574                           	callstack 0
  9575                           
  9576 ;; *************** function ___flneg *****************
  9577 ;; Defined at:
  9578 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\flneg.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  f1              4    0[COMRAM] unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;		None
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  4    0[COMRAM] unsigned char 
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9592 ;;      Params:         4       0       0       0       0       0       0
  9593 ;;      Locals:         0       0       0       0       0       0       0
  9594 ;;      Temps:          0       0       0       0       0       0       0
  9595 ;;      Totals:         4       0       0       0       0       0       0
  9596 ;;Total ram usage:        4 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; This function calls:
  9599 ;;		Nothing
  9600 ;; This function is called by:
  9601 ;;		_efgtoa
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text24
  9606  005A1A                     __ptext24:
  9607                           	callstack 0
  9608  005A1A                     ___flneg:
  9609                           	callstack 25
  9610  005A1A  5001               	movf	___flneg@f1^0,w,c
  9611  005A1C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9612  005A1E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9613  005A20  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9614  005A22  B4D8               	btfsc	status,2,c
  9615  005A24  EF16  F02D         	goto	u5101
  9616  005A28  EF18  F02D         	goto	u5100
  9617  005A2C                     u5101:
  9618  005A2C  EF20  F02D         	goto	l4315
  9619  005A30                     u5100:
  9620  005A30  0E00               	movlw	0
  9621  005A32  1A01               	xorwf	___flneg@f1^0,f,c
  9622  005A34  0E00               	movlw	0
  9623  005A36  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9624  005A38  0E00               	movlw	0
  9625  005A3A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9626  005A3C  0E80               	movlw	128
  9627  005A3E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9628  005A40                     l4315:
  9629  005A40  C001  F001         	movff	___flneg@f1,?___flneg
  9630  005A44  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9631  005A48  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9632  005A4C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9633  005A50  0012               	return		;funcret
  9634  005A52                     __end_of___flneg:
  9635                           	callstack 0
  9636                           
  9637 ;; *************** function ___flmul *****************
  9638 ;; Defined at:
  9639 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcmul.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  b               4   14[COMRAM] unsigned char 
  9642 ;;  a               4   18[COMRAM] unsigned char 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;  prod            4   33[COMRAM] struct .
  9645 ;;  grs             4   27[COMRAM] unsigned long 
  9646 ;;  temp            2   37[COMRAM] struct .
  9647 ;;  bexp            1   32[COMRAM] unsigned char 
  9648 ;;  aexp            1   31[COMRAM] unsigned char 
  9649 ;;  sign            1   26[COMRAM] unsigned char 
  9650 ;; Return value:  Size  Location     Type
  9651 ;;                  4   14[COMRAM] unsigned char 
  9652 ;; Registers used:
  9653 ;;		wreg, status,2, status,0, prodl, prodh
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9659 ;;      Params:         8       0       0       0       0       0       0
  9660 ;;      Locals:        13       0       0       0       0       0       0
  9661 ;;      Temps:          4       0       0       0       0       0       0
  9662 ;;      Totals:        25       0       0       0       0       0       0
  9663 ;;Total ram usage:       25 bytes
  9664 ;; Hardware stack levels used:    1
  9665 ;; This function calls:
  9666 ;;		Nothing
  9667 ;; This function is called by:
  9668 ;;		_main
  9669 ;;		_efgtoa
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           	psect	text25
  9674  002C26                     __ptext25:
  9675                           	callstack 0
  9676  002C26                     ___flmul:
  9677                           	callstack 25
  9678  002C26  5012               	movf	(___flmul@b+3)^0,w,c
  9679  002C28  0B80               	andlw	128
  9680  002C2A  6E1B               	movwf	___flmul@sign^0,c
  9681  002C2C  5012               	movf	(___flmul@b+3)^0,w,c
  9682  002C2E  2412               	addwf	(___flmul@b+3)^0,w,c
  9683  002C30  6E21               	movwf	___flmul@bexp^0,c
  9684  002C32  AE11               	btfss	(___flmul@b+2)^0,7,c
  9685  002C34  EF1E  F016         	goto	u4711
  9686  002C38  EF20  F016         	goto	u4710
  9687  002C3C                     u4711:
  9688  002C3C  EF21  F016         	goto	l4063
  9689  002C40                     u4710:
  9690  002C40  8021               	bsf	___flmul@bexp^0,0,c
  9691  002C42                     l4063:
  9692  002C42  5021               	movf	___flmul@bexp^0,w,c
  9693  002C44  B4D8               	btfsc	status,2,c
  9694  002C46  EF27  F016         	goto	u4721
  9695  002C4A  EF29  F016         	goto	u4720
  9696  002C4E                     u4721:
  9697  002C4E  EF3C  F016         	goto	l4071
  9698  002C52                     u4720:
  9699  002C52  2821               	incf	___flmul@bexp^0,w,c
  9700  002C54  A4D8               	btfss	status,2,c
  9701  002C56  EF2F  F016         	goto	u4731
  9702  002C5A  EF31  F016         	goto	u4730
  9703  002C5E                     u4731:
  9704  002C5E  EF39  F016         	goto	l4069
  9705  002C62                     u4730:
  9706  002C62  0E00               	movlw	0
  9707  002C64  6E0F               	movwf	___flmul@b^0,c
  9708  002C66  0E00               	movlw	0
  9709  002C68  6E10               	movwf	(___flmul@b+1)^0,c
  9710  002C6A  0E00               	movlw	0
  9711  002C6C  6E11               	movwf	(___flmul@b+2)^0,c
  9712  002C6E  0E00               	movlw	0
  9713  002C70  6E12               	movwf	(___flmul@b+3)^0,c
  9714  002C72                     l4069:
  9715  002C72  8E11               	bsf	(___flmul@b+2)^0,7,c
  9716  002C74  EF44  F016         	goto	l4073
  9717  002C78                     l4071:
  9718  002C78  0E00               	movlw	0
  9719  002C7A  6E0F               	movwf	___flmul@b^0,c
  9720  002C7C  0E00               	movlw	0
  9721  002C7E  6E10               	movwf	(___flmul@b+1)^0,c
  9722  002C80  0E00               	movlw	0
  9723  002C82  6E11               	movwf	(___flmul@b+2)^0,c
  9724  002C84  0E00               	movlw	0
  9725  002C86  6E12               	movwf	(___flmul@b+3)^0,c
  9726  002C88                     l4073:
  9727  002C88  5016               	movf	(___flmul@a+3)^0,w,c
  9728  002C8A  0B80               	andlw	128
  9729  002C8C  1A1B               	xorwf	___flmul@sign^0,f,c
  9730  002C8E  5016               	movf	(___flmul@a+3)^0,w,c
  9731  002C90  2416               	addwf	(___flmul@a+3)^0,w,c
  9732  002C92  6E20               	movwf	___flmul@aexp^0,c
  9733  002C94  AE15               	btfss	(___flmul@a+2)^0,7,c
  9734  002C96  EF4F  F016         	goto	u4741
  9735  002C9A  EF51  F016         	goto	u4740
  9736  002C9E                     u4741:
  9737  002C9E  EF52  F016         	goto	l4081
  9738  002CA2                     u4740:
  9739  002CA2  8020               	bsf	___flmul@aexp^0,0,c
  9740  002CA4                     l4081:
  9741  002CA4  5020               	movf	___flmul@aexp^0,w,c
  9742  002CA6  B4D8               	btfsc	status,2,c
  9743  002CA8  EF58  F016         	goto	u4751
  9744  002CAC  EF5A  F016         	goto	u4750
  9745  002CB0                     u4751:
  9746  002CB0  EF6D  F016         	goto	l4089
  9747  002CB4                     u4750:
  9748  002CB4  2820               	incf	___flmul@aexp^0,w,c
  9749  002CB6  A4D8               	btfss	status,2,c
  9750  002CB8  EF60  F016         	goto	u4761
  9751  002CBC  EF62  F016         	goto	u4760
  9752  002CC0                     u4761:
  9753  002CC0  EF6A  F016         	goto	l4087
  9754  002CC4                     u4760:
  9755  002CC4  0E00               	movlw	0
  9756  002CC6  6E13               	movwf	___flmul@a^0,c
  9757  002CC8  0E00               	movlw	0
  9758  002CCA  6E14               	movwf	(___flmul@a+1)^0,c
  9759  002CCC  0E00               	movlw	0
  9760  002CCE  6E15               	movwf	(___flmul@a+2)^0,c
  9761  002CD0  0E00               	movlw	0
  9762  002CD2  6E16               	movwf	(___flmul@a+3)^0,c
  9763  002CD4                     l4087:
  9764  002CD4  8E15               	bsf	(___flmul@a+2)^0,7,c
  9765  002CD6  EF75  F016         	goto	l707
  9766  002CDA                     l4089:
  9767  002CDA  0E00               	movlw	0
  9768  002CDC  6E13               	movwf	___flmul@a^0,c
  9769  002CDE  0E00               	movlw	0
  9770  002CE0  6E14               	movwf	(___flmul@a+1)^0,c
  9771  002CE2  0E00               	movlw	0
  9772  002CE4  6E15               	movwf	(___flmul@a+2)^0,c
  9773  002CE6  0E00               	movlw	0
  9774  002CE8  6E16               	movwf	(___flmul@a+3)^0,c
  9775  002CEA                     l707:
  9776  002CEA  5020               	movf	___flmul@aexp^0,w,c
  9777  002CEC  B4D8               	btfsc	status,2,c
  9778  002CEE  EF7B  F016         	goto	u4771
  9779  002CF2  EF7D  F016         	goto	u4770
  9780  002CF6                     u4771:
  9781  002CF6  EF85  F016         	goto	l4093
  9782  002CFA                     u4770:
  9783  002CFA  5021               	movf	___flmul@bexp^0,w,c
  9784  002CFC  A4D8               	btfss	status,2,c
  9785  002CFE  EF83  F016         	goto	u4781
  9786  002D02  EF85  F016         	goto	u4780
  9787  002D06                     u4781:
  9788  002D06  EF8F  F016         	goto	l4097
  9789  002D0A                     u4780:
  9790  002D0A                     l4093:
  9791  002D0A  0E00               	movlw	0
  9792  002D0C  6E0F               	movwf	?___flmul^0,c
  9793  002D0E  0E00               	movlw	0
  9794  002D10  6E10               	movwf	(?___flmul+1)^0,c
  9795  002D12  0E00               	movlw	0
  9796  002D14  6E11               	movwf	(?___flmul+2)^0,c
  9797  002D16  0E00               	movlw	0
  9798  002D18  6E12               	movwf	(?___flmul+3)^0,c
  9799  002D1A  EF27  F018         	goto	l711
  9800  002D1E                     l4097:
  9801  002D1E  5015               	movf	(___flmul@a+2)^0,w,c
  9802  002D20  020F               	mulwf	___flmul@b^0,c
  9803  002D22  CFF3 F026          	movff	prodl,___flmul@temp
  9804  002D26  CFF4 F027          	movff	prodh,___flmul@temp+1
  9805  002D2A  5026               	movf	___flmul@temp^0,w,c
  9806  002D2C  6E1C               	movwf	___flmul@grs^0,c
  9807  002D2E  6A1D               	clrf	(___flmul@grs+1)^0,c
  9808  002D30  6A1E               	clrf	(___flmul@grs+2)^0,c
  9809  002D32  6A1F               	clrf	(___flmul@grs+3)^0,c
  9810  002D34  5027               	movf	(___flmul@temp+1)^0,w,c
  9811  002D36  6E22               	movwf	___flmul@prod^0,c
  9812  002D38  6A23               	clrf	(___flmul@prod+1)^0,c
  9813  002D3A  6A24               	clrf	(___flmul@prod+2)^0,c
  9814  002D3C  6A25               	clrf	(___flmul@prod+3)^0,c
  9815  002D3E  5014               	movf	(___flmul@a+1)^0,w,c
  9816  002D40  0210               	mulwf	(___flmul@b+1)^0,c
  9817  002D42  CFF3 F026          	movff	prodl,___flmul@temp
  9818  002D46  CFF4 F027          	movff	prodh,___flmul@temp+1
  9819  002D4A  5026               	movf	___flmul@temp^0,w,c
  9820  002D4C  261C               	addwf	___flmul@grs^0,f,c
  9821  002D4E  0E00               	movlw	0
  9822  002D50  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9823  002D52  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9824  002D54  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9825  002D56  5027               	movf	(___flmul@temp+1)^0,w,c
  9826  002D58  2622               	addwf	___flmul@prod^0,f,c
  9827  002D5A  0E00               	movlw	0
  9828  002D5C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9829  002D5E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9830  002D60  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9831  002D62  5013               	movf	___flmul@a^0,w,c
  9832  002D64  0211               	mulwf	(___flmul@b+2)^0,c
  9833  002D66  CFF3 F026          	movff	prodl,___flmul@temp
  9834  002D6A  CFF4 F027          	movff	prodh,___flmul@temp+1
  9835  002D6E  5026               	movf	___flmul@temp^0,w,c
  9836  002D70  261C               	addwf	___flmul@grs^0,f,c
  9837  002D72  0E00               	movlw	0
  9838  002D74  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9839  002D76  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9840  002D78  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9841  002D7A  5027               	movf	(___flmul@temp+1)^0,w,c
  9842  002D7C  2622               	addwf	___flmul@prod^0,f,c
  9843  002D7E  0E00               	movlw	0
  9844  002D80  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9845  002D82  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9846  002D84  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9847  002D86  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9848  002D8A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9849  002D8E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9850  002D92  6A1C               	clrf	___flmul@grs^0,c
  9851  002D94  5013               	movf	___flmul@a^0,w,c
  9852  002D96  0210               	mulwf	(___flmul@b+1)^0,c
  9853  002D98  CFF3 F026          	movff	prodl,___flmul@temp
  9854  002D9C  CFF4 F027          	movff	prodh,___flmul@temp+1
  9855  002DA0  5026               	movf	___flmul@temp^0,w,c
  9856  002DA2  261C               	addwf	___flmul@grs^0,f,c
  9857  002DA4  5027               	movf	(___flmul@temp+1)^0,w,c
  9858  002DA6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9859  002DA8  0E00               	movlw	0
  9860  002DAA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9861  002DAC  0E00               	movlw	0
  9862  002DAE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9863  002DB0  5014               	movf	(___flmul@a+1)^0,w,c
  9864  002DB2  020F               	mulwf	___flmul@b^0,c
  9865  002DB4  CFF3 F026          	movff	prodl,___flmul@temp
  9866  002DB8  CFF4 F027          	movff	prodh,___flmul@temp+1
  9867  002DBC  5026               	movf	___flmul@temp^0,w,c
  9868  002DBE  261C               	addwf	___flmul@grs^0,f,c
  9869  002DC0  5027               	movf	(___flmul@temp+1)^0,w,c
  9870  002DC2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9871  002DC4  0E00               	movlw	0
  9872  002DC6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9873  002DC8  0E00               	movlw	0
  9874  002DCA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9875  002DCC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9876  002DD0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9877  002DD4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9878  002DD8  6A1C               	clrf	___flmul@grs^0,c
  9879  002DDA  5013               	movf	___flmul@a^0,w,c
  9880  002DDC  020F               	mulwf	___flmul@b^0,c
  9881  002DDE  CFF3 F026          	movff	prodl,___flmul@temp
  9882  002DE2  CFF4 F027          	movff	prodh,___flmul@temp+1
  9883  002DE6  5026               	movf	___flmul@temp^0,w,c
  9884  002DE8  261C               	addwf	___flmul@grs^0,f,c
  9885  002DEA  5027               	movf	(___flmul@temp+1)^0,w,c
  9886  002DEC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  9887  002DEE  0E00               	movlw	0
  9888  002DF0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  9889  002DF2  0E00               	movlw	0
  9890  002DF4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  9891  002DF6  5015               	movf	(___flmul@a+2)^0,w,c
  9892  002DF8  0210               	mulwf	(___flmul@b+1)^0,c
  9893  002DFA  CFF3 F026          	movff	prodl,___flmul@temp
  9894  002DFE  CFF4 F027          	movff	prodh,___flmul@temp+1
  9895  002E02  5026               	movf	___flmul@temp^0,w,c
  9896  002E04  2622               	addwf	___flmul@prod^0,f,c
  9897  002E06  5027               	movf	(___flmul@temp+1)^0,w,c
  9898  002E08  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9899  002E0A  0E00               	movlw	0
  9900  002E0C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9901  002E0E  0E00               	movlw	0
  9902  002E10  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9903  002E12  5014               	movf	(___flmul@a+1)^0,w,c
  9904  002E14  0211               	mulwf	(___flmul@b+2)^0,c
  9905  002E16  CFF3 F026          	movff	prodl,___flmul@temp
  9906  002E1A  CFF4 F027          	movff	prodh,___flmul@temp+1
  9907  002E1E  5026               	movf	___flmul@temp^0,w,c
  9908  002E20  2622               	addwf	___flmul@prod^0,f,c
  9909  002E22  5027               	movf	(___flmul@temp+1)^0,w,c
  9910  002E24  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9911  002E26  0E00               	movlw	0
  9912  002E28  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9913  002E2A  0E00               	movlw	0
  9914  002E2C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9915  002E2E  5015               	movf	(___flmul@a+2)^0,w,c
  9916  002E30  0211               	mulwf	(___flmul@b+2)^0,c
  9917  002E32  CFF3 F026          	movff	prodl,___flmul@temp
  9918  002E36  CFF4 F027          	movff	prodh,___flmul@temp+1
  9919  002E3A  5026               	movf	___flmul@temp^0,w,c
  9920  002E3C  6E17               	movwf	??___flmul^0,c
  9921  002E3E  5027               	movf	(___flmul@temp+1)^0,w,c
  9922  002E40  6E18               	movwf	(??___flmul+1)^0,c
  9923  002E42  6A19               	clrf	(??___flmul+2)^0,c
  9924  002E44  6A1A               	clrf	(??___flmul+3)^0,c
  9925  002E46  C019  F01A         	movff	??___flmul+2,??___flmul+3
  9926  002E4A  C018  F019         	movff	??___flmul+1,??___flmul+2
  9927  002E4E  C017  F018         	movff	??___flmul,??___flmul+1
  9928  002E52  6A17               	clrf	??___flmul^0,c
  9929  002E54  5017               	movf	??___flmul^0,w,c
  9930  002E56  2622               	addwf	___flmul@prod^0,f,c
  9931  002E58  5018               	movf	(??___flmul+1)^0,w,c
  9932  002E5A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9933  002E5C  5019               	movf	(??___flmul+2)^0,w,c
  9934  002E5E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9935  002E60  501A               	movf	(??___flmul+3)^0,w,c
  9936  002E62  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9937  002E64  C01C  F017         	movff	___flmul@grs,??___flmul
  9938  002E68  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  9939  002E6C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  9940  002E70  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  9941  002E74  0E19               	movlw	25
  9942  002E76  EF42  F017         	goto	u4790
  9943  002E7A                     u4795:
  9944  002E7A  90D8               	bcf	status,0,c
  9945  002E7C  321A               	rrcf	(??___flmul+3)^0,f,c
  9946  002E7E  3219               	rrcf	(??___flmul+2)^0,f,c
  9947  002E80  3218               	rrcf	(??___flmul+1)^0,f,c
  9948  002E82  3217               	rrcf	??___flmul^0,f,c
  9949  002E84                     u4790:
  9950  002E84  2EE8               	decfsz	wreg,f,c
  9951  002E86  EF3D  F017         	goto	u4795
  9952  002E8A  5017               	movf	??___flmul^0,w,c
  9953  002E8C  2622               	addwf	___flmul@prod^0,f,c
  9954  002E8E  5018               	movf	(??___flmul+1)^0,w,c
  9955  002E90  2223               	addwfc	(___flmul@prod+1)^0,f,c
  9956  002E92  5019               	movf	(??___flmul+2)^0,w,c
  9957  002E94  2224               	addwfc	(___flmul@prod+2)^0,f,c
  9958  002E96  501A               	movf	(??___flmul+3)^0,w,c
  9959  002E98  2225               	addwfc	(___flmul@prod+3)^0,f,c
  9960  002E9A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  9961  002E9E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  9962  002EA2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  9963  002EA6  6A1C               	clrf	___flmul@grs^0,c
  9964  002EA8  5020               	movf	___flmul@aexp^0,w,c
  9965  002EAA  C021  F017         	movff	___flmul@bexp,??___flmul
  9966  002EAE  6A18               	clrf	(??___flmul+1)^0,c
  9967  002EB0  2617               	addwf	??___flmul^0,f,c
  9968  002EB2  0E00               	movlw	0
  9969  002EB4  2218               	addwfc	(??___flmul+1)^0,f,c
  9970  002EB6  0E82               	movlw	130
  9971  002EB8  2417               	addwf	??___flmul^0,w,c
  9972  002EBA  6E26               	movwf	___flmul@temp^0,c
  9973  002EBC  0EFF               	movlw	255
  9974  002EBE  2018               	addwfc	(??___flmul+1)^0,w,c
  9975  002EC0  6E27               	movwf	(___flmul@temp+1)^0,c
  9976  002EC2  EF78  F017         	goto	l4145
  9977  002EC6                     l4139:
  9978  002EC6  90D8               	bcf	status,0,c
  9979  002EC8  3622               	rlcf	___flmul@prod^0,f,c
  9980  002ECA  3623               	rlcf	(___flmul@prod+1)^0,f,c
  9981  002ECC  3624               	rlcf	(___flmul@prod+2)^0,f,c
  9982  002ECE  3625               	rlcf	(___flmul@prod+3)^0,f,c
  9983  002ED0  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  9984  002ED2  EF6D  F017         	goto	u4801
  9985  002ED6  EF6F  F017         	goto	u4800
  9986  002EDA                     u4801:
  9987  002EDA  EF70  F017         	goto	l714
  9988  002EDE                     u4800:
  9989  002EDE  8022               	bsf	___flmul@prod^0,0,c
  9990  002EE0                     l714:
  9991  002EE0  90D8               	bcf	status,0,c
  9992  002EE2  361C               	rlcf	___flmul@grs^0,f,c
  9993  002EE4  361D               	rlcf	(___flmul@grs+1)^0,f,c
  9994  002EE6  361E               	rlcf	(___flmul@grs+2)^0,f,c
  9995  002EE8  361F               	rlcf	(___flmul@grs+3)^0,f,c
  9996  002EEA  0626               	decf	___flmul@temp^0,f,c
  9997  002EEC  A0D8               	btfss	status,0,c
  9998  002EEE  0627               	decf	(___flmul@temp+1)^0,f,c
  9999  002EF0                     l4145:
 10000  002EF0  AE24               	btfss	(___flmul@prod+2)^0,7,c
 10001  002EF2  EF7D  F017         	goto	u4811
 10002  002EF6  EF7F  F017         	goto	u4810
 10003  002EFA                     u4811:
 10004  002EFA  EF63  F017         	goto	l4139
 10005  002EFE                     u4810:
 10006  002EFE  0E00               	movlw	0
 10007  002F00  6E20               	movwf	___flmul@aexp^0,c
 10008  002F02  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 10009  002F04  EF86  F017         	goto	u4821
 10010  002F08  EF88  F017         	goto	u4820
 10011  002F0C                     u4821:
 10012  002F0C  EFAC  F017         	goto	l716
 10013  002F10                     u4820:
 10014  002F10  0EFF               	movlw	255
 10015  002F12  141C               	andwf	___flmul@grs^0,w,c
 10016  002F14  6E17               	movwf	??___flmul^0,c
 10017  002F16  0EFF               	movlw	255
 10018  002F18  141D               	andwf	(___flmul@grs+1)^0,w,c
 10019  002F1A  6E18               	movwf	(??___flmul+1)^0,c
 10020  002F1C  0EFF               	movlw	255
 10021  002F1E  141E               	andwf	(___flmul@grs+2)^0,w,c
 10022  002F20  6E19               	movwf	(??___flmul+2)^0,c
 10023  002F22  0E7F               	movlw	127
 10024  002F24  141F               	andwf	(___flmul@grs+3)^0,w,c
 10025  002F26  6E1A               	movwf	(??___flmul+3)^0,c
 10026  002F28  5017               	movf	??___flmul^0,w,c
 10027  002F2A  1018               	iorwf	(??___flmul+1)^0,w,c
 10028  002F2C  1019               	iorwf	(??___flmul+2)^0,w,c
 10029  002F2E  101A               	iorwf	(??___flmul+3)^0,w,c
 10030  002F30  B4D8               	btfsc	status,2,c
 10031  002F32  EF9D  F017         	goto	u4831
 10032  002F36  EF9F  F017         	goto	u4830
 10033  002F3A                     u4831:
 10034  002F3A  EFA3  F017         	goto	l717
 10035  002F3E                     u4830:
 10036  002F3E                     l4153:
 10037  002F3E  0E01               	movlw	1
 10038  002F40  6E20               	movwf	___flmul@aexp^0,c
 10039  002F42  EFAC  F017         	goto	l716
 10040  002F46                     l717:
 10041  002F46  A022               	btfss	___flmul@prod^0,0,c
 10042  002F48  EFA8  F017         	goto	u4841
 10043  002F4C  EFAA  F017         	goto	u4840
 10044  002F50                     u4841:
 10045  002F50  EFAC  F017         	goto	l716
 10046  002F54                     u4840:
 10047  002F54  EF9F  F017         	goto	l4153
 10048  002F58                     l716:
 10049  002F58  5020               	movf	___flmul@aexp^0,w,c
 10050  002F5A  B4D8               	btfsc	status,2,c
 10051  002F5C  EFB2  F017         	goto	u4851
 10052  002F60  EFB4  F017         	goto	u4850
 10053  002F64                     u4851:
 10054  002F64  EFD8  F017         	goto	l4165
 10055  002F68                     u4850:
 10056  002F68  0E01               	movlw	1
 10057  002F6A  2622               	addwf	___flmul@prod^0,f,c
 10058  002F6C  0E00               	movlw	0
 10059  002F6E  2223               	addwfc	(___flmul@prod+1)^0,f,c
 10060  002F70  2224               	addwfc	(___flmul@prod+2)^0,f,c
 10061  002F72  2225               	addwfc	(___flmul@prod+3)^0,f,c
 10062  002F74  A025               	btfss	(___flmul@prod+3)^0,0,c
 10063  002F76  EFBF  F017         	goto	u4861
 10064  002F7A  EFC1  F017         	goto	u4860
 10065  002F7E                     u4861:
 10066  002F7E  EFD8  F017         	goto	l4165
 10067  002F82                     u4860:
 10068  002F82  C022  F017         	movff	___flmul@prod,??___flmul
 10069  002F86  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 10070  002F8A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 10071  002F8E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 10072  002F92  341A               	rlcf	(??___flmul+3)^0,w,c
 10073  002F94  321A               	rrcf	(??___flmul+3)^0,f,c
 10074  002F96  3219               	rrcf	(??___flmul+2)^0,f,c
 10075  002F98  3218               	rrcf	(??___flmul+1)^0,f,c
 10076  002F9A  3217               	rrcf	??___flmul^0,f,c
 10077  002F9C  C017  F022         	movff	??___flmul,___flmul@prod
 10078  002FA0  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 10079  002FA4  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 10080  002FA8  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 10081  002FAC  4A26               	infsnz	___flmul@temp^0,f,c
 10082  002FAE  2A27               	incf	(___flmul@temp+1)^0,f,c
 10083  002FB0                     l4165:
 10084  002FB0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10085  002FB2  EFE3  F017         	goto	u4871
 10086  002FB6  5027               	movf	(___flmul@temp+1)^0,w,c
 10087  002FB8  E108               	bnz	u4870
 10088  002FBA  2826               	incf	___flmul@temp^0,w,c
 10089  002FBC  A0D8               	btfss	status,0,c
 10090  002FBE  EFE3  F017         	goto	u4871
 10091  002FC2  EFE5  F017         	goto	u4870
 10092  002FC6                     u4871:
 10093  002FC6  EFEF  F017         	goto	l4169
 10094  002FCA                     u4870:
 10095  002FCA  0E00               	movlw	0
 10096  002FCC  6E22               	movwf	___flmul@prod^0,c
 10097  002FCE  0E00               	movlw	0
 10098  002FD0  6E23               	movwf	(___flmul@prod+1)^0,c
 10099  002FD2  0E80               	movlw	128
 10100  002FD4  6E24               	movwf	(___flmul@prod+2)^0,c
 10101  002FD6  0E7F               	movlw	127
 10102  002FD8  6E25               	movwf	(___flmul@prod+3)^0,c
 10103  002FDA  EF1D  F018         	goto	l4181
 10104  002FDE                     l4169:
 10105  002FDE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 10106  002FE0  EFFC  F017         	goto	u4880
 10107  002FE4  5027               	movf	(___flmul@temp+1)^0,w,c
 10108  002FE6  E106               	bnz	u4881
 10109  002FE8  0426               	decf	___flmul@temp^0,w,c
 10110  002FEA  B0D8               	btfsc	status,0,c
 10111  002FEC  EFFA  F017         	goto	u4881
 10112  002FF0  EFFC  F017         	goto	u4880
 10113  002FF4                     u4881:
 10114  002FF4  EF08  F018         	goto	l724
 10115  002FF8                     u4880:
 10116  002FF8  0E00               	movlw	0
 10117  002FFA  6E22               	movwf	___flmul@prod^0,c
 10118  002FFC  0E00               	movlw	0
 10119  002FFE  6E23               	movwf	(___flmul@prod+1)^0,c
 10120  003000  0E00               	movlw	0
 10121  003002  6E24               	movwf	(___flmul@prod+2)^0,c
 10122  003004  0E00               	movlw	0
 10123  003006  6E25               	movwf	(___flmul@prod+3)^0,c
 10124  003008  0E00               	movlw	0
 10125  00300A  6E1B               	movwf	___flmul@sign^0,c
 10126  00300C  EF1D  F018         	goto	l4181
 10127  003010                     l724:
 10128  003010  C026  F021         	movff	___flmul@temp,___flmul@bexp
 10129  003014  0EFF               	movlw	255
 10130  003016  1622               	andwf	___flmul@prod^0,f,c
 10131  003018  0EFF               	movlw	255
 10132  00301A  1623               	andwf	(___flmul@prod+1)^0,f,c
 10133  00301C  0E7F               	movlw	127
 10134  00301E  1624               	andwf	(___flmul@prod+2)^0,f,c
 10135  003020  0E00               	movlw	0
 10136  003022  1625               	andwf	(___flmul@prod+3)^0,f,c
 10137  003024  A021               	btfss	___flmul@bexp^0,0,c
 10138  003026  EF17  F018         	goto	u4891
 10139  00302A  EF19  F018         	goto	u4890
 10140  00302E                     u4891:
 10141  00302E  EF1A  F018         	goto	l4179
 10142  003032                     u4890:
 10143  003032  8E24               	bsf	(___flmul@prod+2)^0,7,c
 10144  003034                     l4179:
 10145  003034  90D8               	bcf	status,0,c
 10146  003036  3021               	rrcf	___flmul@bexp^0,w,c
 10147  003038  6E25               	movwf	(___flmul@prod+3)^0,c
 10148  00303A                     l4181:
 10149  00303A  501B               	movf	___flmul@sign^0,w,c
 10150  00303C  1225               	iorwf	(___flmul@prod+3)^0,f,c
 10151  00303E  C022  F00F         	movff	___flmul@prod,?___flmul
 10152  003042  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 10153  003046  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 10154  00304A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 10155  00304E                     l711:
 10156  00304E  0012               	return		;funcret
 10157  003050                     __end_of___flmul:
 10158                           	callstack 0
 10159                           
 10160 ;; *************** function ___flge *****************
 10161 ;; Defined at:
 10162 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\flge.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  ff1             4   39[COMRAM] unsigned char 
 10165 ;;  ff2             4   43[COMRAM] unsigned char 
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;		None
 10168 ;; Return value:  Size  Location     Type
 10169 ;;		None               void
 10170 ;; Registers used:
 10171 ;;		wreg, status,2, status,0
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10177 ;;      Params:         8       0       0       0       0       0       0
 10178 ;;      Locals:         0       0       0       0       0       0       0
 10179 ;;      Temps:          4       0       0       0       0       0       0
 10180 ;;      Totals:        12       0       0       0       0       0       0
 10181 ;;Total ram usage:       12 bytes
 10182 ;; Hardware stack levels used:    1
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_efgtoa
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text26
 10191  004C98                     __ptext26:
 10192                           	callstack 0
 10193  004C98                     ___flge:
 10194                           	callstack 25
 10195  004C98  0E00               	movlw	0
 10196  004C9A  1428               	andwf	___flge@ff1^0,w,c
 10197  004C9C  6E30               	movwf	??___flge^0,c
 10198  004C9E  0E00               	movlw	0
 10199  004CA0  1429               	andwf	(___flge@ff1+1)^0,w,c
 10200  004CA2  6E31               	movwf	(??___flge+1)^0,c
 10201  004CA4  0E80               	movlw	128
 10202  004CA6  142A               	andwf	(___flge@ff1+2)^0,w,c
 10203  004CA8  6E32               	movwf	(??___flge+2)^0,c
 10204  004CAA  0E7F               	movlw	127
 10205  004CAC  142B               	andwf	(___flge@ff1+3)^0,w,c
 10206  004CAE  6E33               	movwf	(??___flge+3)^0,c
 10207  004CB0  5030               	movf	??___flge^0,w,c
 10208  004CB2  1031               	iorwf	(??___flge+1)^0,w,c
 10209  004CB4  1032               	iorwf	(??___flge+2)^0,w,c
 10210  004CB6  1033               	iorwf	(??___flge+3)^0,w,c
 10211  004CB8  A4D8               	btfss	status,2,c
 10212  004CBA  EF61  F026         	goto	u5051
 10213  004CBE  EF63  F026         	goto	u5050
 10214  004CC2                     u5051:
 10215  004CC2  EF6B  F026         	goto	l4293
 10216  004CC6                     u5050:
 10217  004CC6  0E00               	movlw	0
 10218  004CC8  6E28               	movwf	___flge@ff1^0,c
 10219  004CCA  0E00               	movlw	0
 10220  004CCC  6E29               	movwf	(___flge@ff1+1)^0,c
 10221  004CCE  0E00               	movlw	0
 10222  004CD0  6E2A               	movwf	(___flge@ff1+2)^0,c
 10223  004CD2  0E00               	movlw	0
 10224  004CD4  6E2B               	movwf	(___flge@ff1+3)^0,c
 10225  004CD6                     l4293:
 10226  004CD6  0E00               	movlw	0
 10227  004CD8  142C               	andwf	___flge@ff2^0,w,c
 10228  004CDA  6E30               	movwf	??___flge^0,c
 10229  004CDC  0E00               	movlw	0
 10230  004CDE  142D               	andwf	(___flge@ff2+1)^0,w,c
 10231  004CE0  6E31               	movwf	(??___flge+1)^0,c
 10232  004CE2  0E80               	movlw	128
 10233  004CE4  142E               	andwf	(___flge@ff2+2)^0,w,c
 10234  004CE6  6E32               	movwf	(??___flge+2)^0,c
 10235  004CE8  0E7F               	movlw	127
 10236  004CEA  142F               	andwf	(___flge@ff2+3)^0,w,c
 10237  004CEC  6E33               	movwf	(??___flge+3)^0,c
 10238  004CEE  5030               	movf	??___flge^0,w,c
 10239  004CF0  1031               	iorwf	(??___flge+1)^0,w,c
 10240  004CF2  1032               	iorwf	(??___flge+2)^0,w,c
 10241  004CF4  1033               	iorwf	(??___flge+3)^0,w,c
 10242  004CF6  A4D8               	btfss	status,2,c
 10243  004CF8  EF80  F026         	goto	u5061
 10244  004CFC  EF82  F026         	goto	u5060
 10245  004D00                     u5061:
 10246  004D00  EF8A  F026         	goto	l4297
 10247  004D04                     u5060:
 10248  004D04  0E00               	movlw	0
 10249  004D06  6E2C               	movwf	___flge@ff2^0,c
 10250  004D08  0E00               	movlw	0
 10251  004D0A  6E2D               	movwf	(___flge@ff2+1)^0,c
 10252  004D0C  0E00               	movlw	0
 10253  004D0E  6E2E               	movwf	(___flge@ff2+2)^0,c
 10254  004D10  0E00               	movlw	0
 10255  004D12  6E2F               	movwf	(___flge@ff2+3)^0,c
 10256  004D14                     l4297:
 10257  004D14  AE2B               	btfss	(___flge@ff1+3)^0,7,c
 10258  004D16  EF8F  F026         	goto	u5071
 10259  004D1A  EF91  F026         	goto	u5070
 10260  004D1E                     u5071:
 10261  004D1E  EF9A  F026         	goto	l4301
 10262  004D22                     u5070:
 10263  004D22  6C28               	negf	___flge@ff1^0,c
 10264  004D24  1E29               	comf	(___flge@ff1+1)^0,f,c
 10265  004D26  B0D8               	btfsc	status,0,c
 10266  004D28  2A29               	incf	(___flge@ff1+1)^0,f,c
 10267  004D2A  1E2A               	comf	(___flge@ff1+2)^0,f,c
 10268  004D2C  B0D8               	btfsc	status,0,c
 10269  004D2E  2A2A               	incf	(___flge@ff1+2)^0,f,c
 10270  004D30  0E80               	movlw	128
 10271  004D32  562B               	subfwb	(___flge@ff1+3)^0,f,c
 10272  004D34                     l4301:
 10273  004D34  AE2F               	btfss	(___flge@ff2+3)^0,7,c
 10274  004D36  EF9F  F026         	goto	u5081
 10275  004D3A  EFA1  F026         	goto	u5080
 10276  004D3E                     u5081:
 10277  004D3E  EFAA  F026         	goto	l358
 10278  004D42                     u5080:
 10279  004D42  6C2C               	negf	___flge@ff2^0,c
 10280  004D44  1E2D               	comf	(___flge@ff2+1)^0,f,c
 10281  004D46  B0D8               	btfsc	status,0,c
 10282  004D48  2A2D               	incf	(___flge@ff2+1)^0,f,c
 10283  004D4A  1E2E               	comf	(___flge@ff2+2)^0,f,c
 10284  004D4C  B0D8               	btfsc	status,0,c
 10285  004D4E  2A2E               	incf	(___flge@ff2+2)^0,f,c
 10286  004D50  0E80               	movlw	128
 10287  004D52  562F               	subfwb	(___flge@ff2+3)^0,f,c
 10288  004D54                     l358:
 10289  004D54  0E00               	movlw	0
 10290  004D56  1A28               	xorwf	___flge@ff1^0,f,c
 10291  004D58  0E00               	movlw	0
 10292  004D5A  1A29               	xorwf	(___flge@ff1+1)^0,f,c
 10293  004D5C  0E00               	movlw	0
 10294  004D5E  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
 10295  004D60  0E80               	movlw	128
 10296  004D62  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
 10297  004D64  0E00               	movlw	0
 10298  004D66  1A2C               	xorwf	___flge@ff2^0,f,c
 10299  004D68  0E00               	movlw	0
 10300  004D6A  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
 10301  004D6C  0E00               	movlw	0
 10302  004D6E  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
 10303  004D70  0E80               	movlw	128
 10304  004D72  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
 10305  004D74  502C               	movf	___flge@ff2^0,w,c
 10306  004D76  5C28               	subwf	___flge@ff1^0,w,c
 10307  004D78  502D               	movf	(___flge@ff2+1)^0,w,c
 10308  004D7A  5829               	subwfb	(___flge@ff1+1)^0,w,c
 10309  004D7C  502E               	movf	(___flge@ff2+2)^0,w,c
 10310  004D7E  582A               	subwfb	(___flge@ff1+2)^0,w,c
 10311  004D80  502F               	movf	(___flge@ff2+3)^0,w,c
 10312  004D82  582B               	subwfb	(___flge@ff1+3)^0,w,c
 10313  004D84  B0D8               	btfsc	status,0,c
 10314  004D86  EFC7  F026         	goto	u5091
 10315  004D8A  EFC9  F026         	goto	u5090
 10316  004D8E                     u5091:
 10317  004D8E  EFCC  F026         	goto	l4307
 10318  004D92                     u5090:
 10319  004D92  90D8               	bcf	status,0,c
 10320  004D94  EFCD  F026         	goto	l363
 10321  004D98                     l4307:
 10322  004D98  80D8               	bsf	status,0,c
 10323  004D9A                     l363:
 10324  004D9A  0012               	return		;funcret
 10325  004D9C                     __end_of___flge:
 10326                           	callstack 0
 10327                           
 10328 ;; *************** function ___fleq *****************
 10329 ;; Defined at:
 10330 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fleq.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;  ff1             4    0[COMRAM] unsigned char 
 10333 ;;  ff2             4    4[COMRAM] unsigned char 
 10334 ;; Auto vars:     Size  Location     Type
 10335 ;;		None
 10336 ;; Return value:  Size  Location     Type
 10337 ;;		None               void
 10338 ;; Registers used:
 10339 ;;		wreg, status,2, status,0
 10340 ;; Tracked objects:
 10341 ;;		On entry : 0/0
 10342 ;;		On exit  : 0/0
 10343 ;;		Unchanged: 0/0
 10344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10345 ;;      Params:         8       0       0       0       0       0       0
 10346 ;;      Locals:         0       0       0       0       0       0       0
 10347 ;;      Temps:          4       0       0       0       0       0       0
 10348 ;;      Totals:        12       0       0       0       0       0       0
 10349 ;;Total ram usage:       12 bytes
 10350 ;; Hardware stack levels used:    1
 10351 ;; This function calls:
 10352 ;;		Nothing
 10353 ;; This function is called by:
 10354 ;;		_efgtoa
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           	psect	text27
 10359  005436                     __ptext27:
 10360                           	callstack 0
 10361  005436                     ___fleq:
 10362                           	callstack 25
 10363  005436  0E00               	movlw	0
 10364  005438  1401               	andwf	___fleq@ff1^0,w,c
 10365  00543A  6E09               	movwf	??___fleq^0,c
 10366  00543C  0E00               	movlw	0
 10367  00543E  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10368  005440  6E0A               	movwf	(??___fleq+1)^0,c
 10369  005442  0E80               	movlw	128
 10370  005444  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10371  005446  6E0B               	movwf	(??___fleq+2)^0,c
 10372  005448  0E7F               	movlw	127
 10373  00544A  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10374  00544C  6E0C               	movwf	(??___fleq+3)^0,c
 10375  00544E  5009               	movf	??___fleq^0,w,c
 10376  005450  100A               	iorwf	(??___fleq+1)^0,w,c
 10377  005452  100B               	iorwf	(??___fleq+2)^0,w,c
 10378  005454  100C               	iorwf	(??___fleq+3)^0,w,c
 10379  005456  A4D8               	btfss	status,2,c
 10380  005458  EF30  F02A         	goto	u5021
 10381  00545C  EF32  F02A         	goto	u5020
 10382  005460                     u5021:
 10383  005460  EF3A  F02A         	goto	l4277
 10384  005464                     u5020:
 10385  005464  0E00               	movlw	0
 10386  005466  6E01               	movwf	___fleq@ff1^0,c
 10387  005468  0E00               	movlw	0
 10388  00546A  6E02               	movwf	(___fleq@ff1+1)^0,c
 10389  00546C  0E00               	movlw	0
 10390  00546E  6E03               	movwf	(___fleq@ff1+2)^0,c
 10391  005470  0E00               	movlw	0
 10392  005472  6E04               	movwf	(___fleq@ff1+3)^0,c
 10393  005474                     l4277:
 10394  005474  0E00               	movlw	0
 10395  005476  1405               	andwf	___fleq@ff2^0,w,c
 10396  005478  6E09               	movwf	??___fleq^0,c
 10397  00547A  0E00               	movlw	0
 10398  00547C  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10399  00547E  6E0A               	movwf	(??___fleq+1)^0,c
 10400  005480  0E80               	movlw	128
 10401  005482  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10402  005484  6E0B               	movwf	(??___fleq+2)^0,c
 10403  005486  0E7F               	movlw	127
 10404  005488  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10405  00548A  6E0C               	movwf	(??___fleq+3)^0,c
 10406  00548C  5009               	movf	??___fleq^0,w,c
 10407  00548E  100A               	iorwf	(??___fleq+1)^0,w,c
 10408  005490  100B               	iorwf	(??___fleq+2)^0,w,c
 10409  005492  100C               	iorwf	(??___fleq+3)^0,w,c
 10410  005494  A4D8               	btfss	status,2,c
 10411  005496  EF4F  F02A         	goto	u5031
 10412  00549A  EF51  F02A         	goto	u5030
 10413  00549E                     u5031:
 10414  00549E  EF59  F02A         	goto	l4281
 10415  0054A2                     u5030:
 10416  0054A2  0E00               	movlw	0
 10417  0054A4  6E05               	movwf	___fleq@ff2^0,c
 10418  0054A6  0E00               	movlw	0
 10419  0054A8  6E06               	movwf	(___fleq@ff2+1)^0,c
 10420  0054AA  0E00               	movlw	0
 10421  0054AC  6E07               	movwf	(___fleq@ff2+2)^0,c
 10422  0054AE  0E00               	movlw	0
 10423  0054B0  6E08               	movwf	(___fleq@ff2+3)^0,c
 10424  0054B2                     l4281:
 10425  0054B2  5005               	movf	___fleq@ff2^0,w,c
 10426  0054B4  1801               	xorwf	___fleq@ff1^0,w,c
 10427  0054B6  E10F               	bnz	u5040
 10428  0054B8  5006               	movf	(___fleq@ff2+1)^0,w,c
 10429  0054BA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10430  0054BC  E10C               	bnz	u5040
 10431  0054BE  5007               	movf	(___fleq@ff2+2)^0,w,c
 10432  0054C0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10433  0054C2  E109               	bnz	u5040
 10434  0054C4  5008               	movf	(___fleq@ff2+3)^0,w,c
 10435  0054C6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10436  0054C8  B4D8               	btfsc	status,2,c
 10437  0054CA  EF69  F02A         	goto	u5041
 10438  0054CE  EF6B  F02A         	goto	u5040
 10439  0054D2                     u5041:
 10440  0054D2  EF6E  F02A         	goto	l4285
 10441  0054D6                     u5040:
 10442  0054D6  90D8               	bcf	status,0,c
 10443  0054D8  EF6F  F02A         	goto	l352
 10444  0054DC                     l4285:
 10445  0054DC  80D8               	bsf	status,0,c
 10446  0054DE                     l352:
 10447  0054DE  0012               	return		;funcret
 10448  0054E0                     __end_of___fleq:
 10449                           	callstack 0
 10450                           
 10451 ;; *************** function ___fldiv *****************
 10452 ;; Defined at:
 10453 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  b               4    0[COMRAM] unsigned char 
 10456 ;;  a               4    4[COMRAM] unsigned char 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  grs             4   19[COMRAM] unsigned long 
 10459 ;;  rem             4   12[COMRAM] unsigned long 
 10460 ;;  new_exp         2   17[COMRAM] short 
 10461 ;;  aexp            1   24[COMRAM] unsigned char 
 10462 ;;  bexp            1   23[COMRAM] unsigned char 
 10463 ;;  sign            1   16[COMRAM] unsigned char 
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  4    0[COMRAM] unsigned char 
 10466 ;; Registers used:
 10467 ;;		wreg, status,2, status,0
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10473 ;;      Params:         8       0       0       0       0       0       0
 10474 ;;      Locals:        13       0       0       0       0       0       0
 10475 ;;      Temps:          4       0       0       0       0       0       0
 10476 ;;      Totals:        25       0       0       0       0       0       0
 10477 ;;Total ram usage:       25 bytes
 10478 ;; Hardware stack levels used:    1
 10479 ;; This function calls:
 10480 ;;		Nothing
 10481 ;; This function is called by:
 10482 ;;		_efgtoa
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           	psect	text28
 10487  003050                     __ptext28:
 10488                           	callstack 0
 10489  003050                     ___fldiv:
 10490                           	callstack 25
 10491  003050  5004               	movf	(___fldiv@b+3)^0,w,c
 10492  003052  0B80               	andlw	128
 10493  003054  6E11               	movwf	___fldiv@sign^0,c
 10494  003056  5004               	movf	(___fldiv@b+3)^0,w,c
 10495  003058  2404               	addwf	(___fldiv@b+3)^0,w,c
 10496  00305A  6E18               	movwf	___fldiv@bexp^0,c
 10497  00305C  AE03               	btfss	(___fldiv@b+2)^0,7,c
 10498  00305E  EF33  F018         	goto	u4481
 10499  003062  EF35  F018         	goto	u4480
 10500  003066                     u4481:
 10501  003066  EF36  F018         	goto	l3925
 10502  00306A                     u4480:
 10503  00306A  8018               	bsf	___fldiv@bexp^0,0,c
 10504  00306C                     l3925:
 10505  00306C  5018               	movf	___fldiv@bexp^0,w,c
 10506  00306E  B4D8               	btfsc	status,2,c
 10507  003070  EF3C  F018         	goto	u4491
 10508  003074  EF3E  F018         	goto	u4490
 10509  003078                     u4491:
 10510  003078  EF53  F018         	goto	l3935
 10511  00307C                     u4490:
 10512  00307C  2818               	incf	___fldiv@bexp^0,w,c
 10513  00307E  A4D8               	btfss	status,2,c
 10514  003080  EF44  F018         	goto	u4501
 10515  003084  EF46  F018         	goto	u4500
 10516  003088                     u4501:
 10517  003088  EF4E  F018         	goto	l3931
 10518  00308C                     u4500:
 10519  00308C  0E00               	movlw	0
 10520  00308E  6E01               	movwf	___fldiv@b^0,c
 10521  003090  0E00               	movlw	0
 10522  003092  6E02               	movwf	(___fldiv@b+1)^0,c
 10523  003094  0E00               	movlw	0
 10524  003096  6E03               	movwf	(___fldiv@b+2)^0,c
 10525  003098  0E00               	movlw	0
 10526  00309A  6E04               	movwf	(___fldiv@b+3)^0,c
 10527  00309C                     l3931:
 10528  00309C  8E03               	bsf	(___fldiv@b+2)^0,7,c
 10529  00309E  0E00               	movlw	0
 10530  0030A0  6E04               	movwf	(___fldiv@b+3)^0,c
 10531  0030A2  EF5B  F018         	goto	l3937
 10532  0030A6                     l3935:
 10533  0030A6  0E00               	movlw	0
 10534  0030A8  6E01               	movwf	___fldiv@b^0,c
 10535  0030AA  0E00               	movlw	0
 10536  0030AC  6E02               	movwf	(___fldiv@b+1)^0,c
 10537  0030AE  0E00               	movlw	0
 10538  0030B0  6E03               	movwf	(___fldiv@b+2)^0,c
 10539  0030B2  0E00               	movlw	0
 10540  0030B4  6E04               	movwf	(___fldiv@b+3)^0,c
 10541  0030B6                     l3937:
 10542  0030B6  5008               	movf	(___fldiv@a+3)^0,w,c
 10543  0030B8  0B80               	andlw	128
 10544  0030BA  1A11               	xorwf	___fldiv@sign^0,f,c
 10545  0030BC  5008               	movf	(___fldiv@a+3)^0,w,c
 10546  0030BE  2408               	addwf	(___fldiv@a+3)^0,w,c
 10547  0030C0  6E19               	movwf	___fldiv@aexp^0,c
 10548  0030C2  AE07               	btfss	(___fldiv@a+2)^0,7,c
 10549  0030C4  EF66  F018         	goto	u4511
 10550  0030C8  EF68  F018         	goto	u4510
 10551  0030CC                     u4511:
 10552  0030CC  EF69  F018         	goto	l3945
 10553  0030D0                     u4510:
 10554  0030D0  8019               	bsf	___fldiv@aexp^0,0,c
 10555  0030D2                     l3945:
 10556  0030D2  5019               	movf	___fldiv@aexp^0,w,c
 10557  0030D4  B4D8               	btfsc	status,2,c
 10558  0030D6  EF6F  F018         	goto	u4521
 10559  0030DA  EF71  F018         	goto	u4520
 10560  0030DE                     u4521:
 10561  0030DE  EF86  F018         	goto	l3955
 10562  0030E2                     u4520:
 10563  0030E2  2819               	incf	___fldiv@aexp^0,w,c
 10564  0030E4  A4D8               	btfss	status,2,c
 10565  0030E6  EF77  F018         	goto	u4531
 10566  0030EA  EF79  F018         	goto	u4530
 10567  0030EE                     u4531:
 10568  0030EE  EF81  F018         	goto	l3951
 10569  0030F2                     u4530:
 10570  0030F2  0E00               	movlw	0
 10571  0030F4  6E05               	movwf	___fldiv@a^0,c
 10572  0030F6  0E00               	movlw	0
 10573  0030F8  6E06               	movwf	(___fldiv@a+1)^0,c
 10574  0030FA  0E00               	movlw	0
 10575  0030FC  6E07               	movwf	(___fldiv@a+2)^0,c
 10576  0030FE  0E00               	movlw	0
 10577  003100  6E08               	movwf	(___fldiv@a+3)^0,c
 10578  003102                     l3951:
 10579  003102  8E07               	bsf	(___fldiv@a+2)^0,7,c
 10580  003104  0E00               	movlw	0
 10581  003106  6E08               	movwf	(___fldiv@a+3)^0,c
 10582  003108  EF8E  F018         	goto	l3957
 10583  00310C                     l3955:
 10584  00310C  0E00               	movlw	0
 10585  00310E  6E05               	movwf	___fldiv@a^0,c
 10586  003110  0E00               	movlw	0
 10587  003112  6E06               	movwf	(___fldiv@a+1)^0,c
 10588  003114  0E00               	movlw	0
 10589  003116  6E07               	movwf	(___fldiv@a+2)^0,c
 10590  003118  0E00               	movlw	0
 10591  00311A  6E08               	movwf	(___fldiv@a+3)^0,c
 10592  00311C                     l3957:
 10593  00311C  5005               	movf	___fldiv@a^0,w,c
 10594  00311E  1006               	iorwf	(___fldiv@a+1)^0,w,c
 10595  003120  1007               	iorwf	(___fldiv@a+2)^0,w,c
 10596  003122  1008               	iorwf	(___fldiv@a+3)^0,w,c
 10597  003124  A4D8               	btfss	status,2,c
 10598  003126  EF97  F018         	goto	u4541
 10599  00312A  EF99  F018         	goto	u4540
 10600  00312E                     u4541:
 10601  00312E  EFB1  F018         	goto	l3969
 10602  003132                     u4540:
 10603  003132  0E00               	movlw	0
 10604  003134  6E01               	movwf	___fldiv@b^0,c
 10605  003136  0E00               	movlw	0
 10606  003138  6E02               	movwf	(___fldiv@b+1)^0,c
 10607  00313A  0E00               	movlw	0
 10608  00313C  6E03               	movwf	(___fldiv@b+2)^0,c
 10609  00313E  0E00               	movlw	0
 10610  003140  6E04               	movwf	(___fldiv@b+3)^0,c
 10611  003142  0E80               	movlw	128
 10612  003144  1203               	iorwf	(___fldiv@b+2)^0,f,c
 10613  003146  0E7F               	movlw	127
 10614  003148  1204               	iorwf	(___fldiv@b+3)^0,f,c
 10615  00314A                     l3963:
 10616  00314A  5011               	movf	___fldiv@sign^0,w,c
 10617  00314C  1204               	iorwf	(___fldiv@b+3)^0,f,c
 10618  00314E  C001  F001         	movff	___fldiv@b,?___fldiv
 10619  003152  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
 10620  003156  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
 10621  00315A  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
 10622  00315E  EFF4  F019         	goto	l675
 10623  003162                     l3969:
 10624  003162  5018               	movf	___fldiv@bexp^0,w,c
 10625  003164  A4D8               	btfss	status,2,c
 10626  003166  EFB7  F018         	goto	u4551
 10627  00316A  EFB9  F018         	goto	u4550
 10628  00316E                     u4551:
 10629  00316E  EFC3  F018         	goto	l3977
 10630  003172                     u4550:
 10631  003172  0E00               	movlw	0
 10632  003174  6E01               	movwf	?___fldiv^0,c
 10633  003176  0E00               	movlw	0
 10634  003178  6E02               	movwf	(?___fldiv+1)^0,c
 10635  00317A  0E00               	movlw	0
 10636  00317C  6E03               	movwf	(?___fldiv+2)^0,c
 10637  00317E  0E00               	movlw	0
 10638  003180  6E04               	movwf	(?___fldiv+3)^0,c
 10639  003182  EFF4  F019         	goto	l675
 10640  003186                     l3977:
 10641  003186  5019               	movf	___fldiv@aexp^0,w,c
 10642  003188  C018  F009         	movff	___fldiv@bexp,??___fldiv
 10643  00318C  6A0A               	clrf	(??___fldiv+1)^0,c
 10644  00318E  5E09               	subwf	??___fldiv^0,f,c
 10645  003190  0E00               	movlw	0
 10646  003192  5A0A               	subwfb	(??___fldiv+1)^0,f,c
 10647  003194  0E7F               	movlw	127
 10648  003196  2409               	addwf	??___fldiv^0,w,c
 10649  003198  6E12               	movwf	___fldiv@new_exp^0,c
 10650  00319A  0E00               	movlw	0
 10651  00319C  200A               	addwfc	(??___fldiv+1)^0,w,c
 10652  00319E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 10653  0031A0  C001  F00D         	movff	___fldiv@b,___fldiv@rem
 10654  0031A4  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
 10655  0031A8  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
 10656  0031AC  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
 10657  0031B0  0E00               	movlw	0
 10658  0031B2  6E01               	movwf	___fldiv@b^0,c
 10659  0031B4  0E00               	movlw	0
 10660  0031B6  6E02               	movwf	(___fldiv@b+1)^0,c
 10661  0031B8  0E00               	movlw	0
 10662  0031BA  6E03               	movwf	(___fldiv@b+2)^0,c
 10663  0031BC  0E00               	movlw	0
 10664  0031BE  6E04               	movwf	(___fldiv@b+3)^0,c
 10665  0031C0  0E00               	movlw	0
 10666  0031C2  6E14               	movwf	___fldiv@grs^0,c
 10667  0031C4  0E00               	movlw	0
 10668  0031C6  6E15               	movwf	(___fldiv@grs+1)^0,c
 10669  0031C8  0E00               	movlw	0
 10670  0031CA  6E16               	movwf	(___fldiv@grs+2)^0,c
 10671  0031CC  0E00               	movlw	0
 10672  0031CE  6E17               	movwf	(___fldiv@grs+3)^0,c
 10673  0031D0  0E00               	movlw	0
 10674  0031D2  6E19               	movwf	___fldiv@aexp^0,c
 10675  0031D4  EF24  F019         	goto	l677
 10676  0031D8                     l3987:
 10677  0031D8  5019               	movf	___fldiv@aexp^0,w,c
 10678  0031DA  B4D8               	btfsc	status,2,c
 10679  0031DC  EFF2  F018         	goto	u4561
 10680  0031E0  EFF4  F018         	goto	u4560
 10681  0031E4                     u4561:
 10682  0031E4  EF0B  F019         	goto	l3995
 10683  0031E8                     u4560:
 10684  0031E8  90D8               	bcf	status,0,c
 10685  0031EA  360D               	rlcf	___fldiv@rem^0,f,c
 10686  0031EC  360E               	rlcf	(___fldiv@rem+1)^0,f,c
 10687  0031EE  360F               	rlcf	(___fldiv@rem+2)^0,f,c
 10688  0031F0  3610               	rlcf	(___fldiv@rem+3)^0,f,c
 10689  0031F2  90D8               	bcf	status,0,c
 10690  0031F4  3601               	rlcf	___fldiv@b^0,f,c
 10691  0031F6  3602               	rlcf	(___fldiv@b+1)^0,f,c
 10692  0031F8  3603               	rlcf	(___fldiv@b+2)^0,f,c
 10693  0031FA  3604               	rlcf	(___fldiv@b+3)^0,f,c
 10694  0031FC  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 10695  0031FE  EF03  F019         	goto	u4571
 10696  003202  EF05  F019         	goto	u4570
 10697  003206                     u4571:
 10698  003206  EF06  F019         	goto	l680
 10699  00320A                     u4570:
 10700  00320A  8001               	bsf	___fldiv@b^0,0,c
 10701  00320C                     l680:
 10702  00320C  90D8               	bcf	status,0,c
 10703  00320E  3614               	rlcf	___fldiv@grs^0,f,c
 10704  003210  3615               	rlcf	(___fldiv@grs+1)^0,f,c
 10705  003212  3616               	rlcf	(___fldiv@grs+2)^0,f,c
 10706  003214  3617               	rlcf	(___fldiv@grs+3)^0,f,c
 10707  003216                     l3995:
 10708  003216  5005               	movf	___fldiv@a^0,w,c
 10709  003218  5C0D               	subwf	___fldiv@rem^0,w,c
 10710  00321A  5006               	movf	(___fldiv@a+1)^0,w,c
 10711  00321C  580E               	subwfb	(___fldiv@rem+1)^0,w,c
 10712  00321E  5007               	movf	(___fldiv@a+2)^0,w,c
 10713  003220  580F               	subwfb	(___fldiv@rem+2)^0,w,c
 10714  003222  5008               	movf	(___fldiv@a+3)^0,w,c
 10715  003224  5810               	subwfb	(___fldiv@rem+3)^0,w,c
 10716  003226  A0D8               	btfss	status,0,c
 10717  003228  EF18  F019         	goto	u4581
 10718  00322C  EF1A  F019         	goto	u4580
 10719  003230                     u4581:
 10720  003230  EF23  F019         	goto	l4001
 10721  003234                     u4580:
 10722  003234  8C17               	bsf	(___fldiv@grs+3)^0,6,c
 10723  003236  5005               	movf	___fldiv@a^0,w,c
 10724  003238  5E0D               	subwf	___fldiv@rem^0,f,c
 10725  00323A  5006               	movf	(___fldiv@a+1)^0,w,c
 10726  00323C  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
 10727  00323E  5007               	movf	(___fldiv@a+2)^0,w,c
 10728  003240  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
 10729  003242  5008               	movf	(___fldiv@a+3)^0,w,c
 10730  003244  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
 10731  003246                     l4001:
 10732  003246  2A19               	incf	___fldiv@aexp^0,f,c
 10733  003248                     l677:
 10734  003248  0E19               	movlw	25
 10735  00324A  6419               	cpfsgt	___fldiv@aexp^0,c
 10736  00324C  EF2A  F019         	goto	u4591
 10737  003250  EF2C  F019         	goto	u4590
 10738  003254                     u4591:
 10739  003254  EFEC  F018         	goto	l3987
 10740  003258                     u4590:
 10741  003258  500D               	movf	___fldiv@rem^0,w,c
 10742  00325A  100E               	iorwf	(___fldiv@rem+1)^0,w,c
 10743  00325C  100F               	iorwf	(___fldiv@rem+2)^0,w,c
 10744  00325E  1010               	iorwf	(___fldiv@rem+3)^0,w,c
 10745  003260  B4D8               	btfsc	status,2,c
 10746  003262  EF35  F019         	goto	u4601
 10747  003266  EF37  F019         	goto	u4600
 10748  00326A                     u4601:
 10749  00326A  EF4F  F019         	goto	l4013
 10750  00326E                     u4600:
 10751  00326E  8014               	bsf	___fldiv@grs^0,0,c
 10752  003270  EF4F  F019         	goto	l4013
 10753  003274                     l4007:
 10754  003274  90D8               	bcf	status,0,c
 10755  003276  3601               	rlcf	___fldiv@b^0,f,c
 10756  003278  3602               	rlcf	(___fldiv@b+1)^0,f,c
 10757  00327A  3603               	rlcf	(___fldiv@b+2)^0,f,c
 10758  00327C  3604               	rlcf	(___fldiv@b+3)^0,f,c
 10759  00327E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 10760  003280  EF44  F019         	goto	u4611
 10761  003284  EF46  F019         	goto	u4610
 10762  003288                     u4611:
 10763  003288  EF47  F019         	goto	l686
 10764  00328C                     u4610:
 10765  00328C  8001               	bsf	___fldiv@b^0,0,c
 10766  00328E                     l686:
 10767  00328E  90D8               	bcf	status,0,c
 10768  003290  3614               	rlcf	___fldiv@grs^0,f,c
 10769  003292  3615               	rlcf	(___fldiv@grs+1)^0,f,c
 10770  003294  3616               	rlcf	(___fldiv@grs+2)^0,f,c
 10771  003296  3617               	rlcf	(___fldiv@grs+3)^0,f,c
 10772  003298  0612               	decf	___fldiv@new_exp^0,f,c
 10773  00329A  A0D8               	btfss	status,0,c
 10774  00329C  0613               	decf	(___fldiv@new_exp+1)^0,f,c
 10775  00329E                     l4013:
 10776  00329E  AE03               	btfss	(___fldiv@b+2)^0,7,c
 10777  0032A0  EF54  F019         	goto	u4621
 10778  0032A4  EF56  F019         	goto	u4620
 10779  0032A8                     u4621:
 10780  0032A8  EF3A  F019         	goto	l4007
 10781  0032AC                     u4620:
 10782  0032AC  0E00               	movlw	0
 10783  0032AE  6E19               	movwf	___fldiv@aexp^0,c
 10784  0032B0  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 10785  0032B2  EF5D  F019         	goto	u4631
 10786  0032B6  EF5F  F019         	goto	u4630
 10787  0032BA                     u4631:
 10788  0032BA  EF83  F019         	goto	l688
 10789  0032BE                     u4630:
 10790  0032BE  0EFF               	movlw	255
 10791  0032C0  1414               	andwf	___fldiv@grs^0,w,c
 10792  0032C2  6E09               	movwf	??___fldiv^0,c
 10793  0032C4  0EFF               	movlw	255
 10794  0032C6  1415               	andwf	(___fldiv@grs+1)^0,w,c
 10795  0032C8  6E0A               	movwf	(??___fldiv+1)^0,c
 10796  0032CA  0EFF               	movlw	255
 10797  0032CC  1416               	andwf	(___fldiv@grs+2)^0,w,c
 10798  0032CE  6E0B               	movwf	(??___fldiv+2)^0,c
 10799  0032D0  0E7F               	movlw	127
 10800  0032D2  1417               	andwf	(___fldiv@grs+3)^0,w,c
 10801  0032D4  6E0C               	movwf	(??___fldiv+3)^0,c
 10802  0032D6  5009               	movf	??___fldiv^0,w,c
 10803  0032D8  100A               	iorwf	(??___fldiv+1)^0,w,c
 10804  0032DA  100B               	iorwf	(??___fldiv+2)^0,w,c
 10805  0032DC  100C               	iorwf	(??___fldiv+3)^0,w,c
 10806  0032DE  B4D8               	btfsc	status,2,c
 10807  0032E0  EF74  F019         	goto	u4641
 10808  0032E4  EF76  F019         	goto	u4640
 10809  0032E8                     u4641:
 10810  0032E8  EF7A  F019         	goto	l689
 10811  0032EC                     u4640:
 10812  0032EC                     l4021:
 10813  0032EC  0E01               	movlw	1
 10814  0032EE  6E19               	movwf	___fldiv@aexp^0,c
 10815  0032F0  EF83  F019         	goto	l688
 10816  0032F4                     l689:
 10817  0032F4  A001               	btfss	___fldiv@b^0,0,c
 10818  0032F6  EF7F  F019         	goto	u4651
 10819  0032FA  EF81  F019         	goto	u4650
 10820  0032FE                     u4651:
 10821  0032FE  EF83  F019         	goto	l688
 10822  003302                     u4650:
 10823  003302  EF76  F019         	goto	l4021
 10824  003306                     l688:
 10825  003306  5019               	movf	___fldiv@aexp^0,w,c
 10826  003308  B4D8               	btfsc	status,2,c
 10827  00330A  EF89  F019         	goto	u4661
 10828  00330E  EF8B  F019         	goto	u4660
 10829  003312                     u4661:
 10830  003312  EFAF  F019         	goto	l4033
 10831  003316                     u4660:
 10832  003316  0E01               	movlw	1
 10833  003318  2601               	addwf	___fldiv@b^0,f,c
 10834  00331A  0E00               	movlw	0
 10835  00331C  2202               	addwfc	(___fldiv@b+1)^0,f,c
 10836  00331E  2203               	addwfc	(___fldiv@b+2)^0,f,c
 10837  003320  2204               	addwfc	(___fldiv@b+3)^0,f,c
 10838  003322  A004               	btfss	(___fldiv@b+3)^0,0,c
 10839  003324  EF96  F019         	goto	u4671
 10840  003328  EF98  F019         	goto	u4670
 10841  00332C                     u4671:
 10842  00332C  EFAF  F019         	goto	l4033
 10843  003330                     u4670:
 10844  003330  C001  F009         	movff	___fldiv@b,??___fldiv
 10845  003334  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
 10846  003338  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
 10847  00333C  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
 10848  003340  340C               	rlcf	(??___fldiv+3)^0,w,c
 10849  003342  320C               	rrcf	(??___fldiv+3)^0,f,c
 10850  003344  320B               	rrcf	(??___fldiv+2)^0,f,c
 10851  003346  320A               	rrcf	(??___fldiv+1)^0,f,c
 10852  003348  3209               	rrcf	??___fldiv^0,f,c
 10853  00334A  C009  F001         	movff	??___fldiv,___fldiv@b
 10854  00334E  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
 10855  003352  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
 10856  003356  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
 10857  00335A  4A12               	infsnz	___fldiv@new_exp^0,f,c
 10858  00335C  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
 10859  00335E                     l4033:
 10860  00335E  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10861  003360  EFBA  F019         	goto	u4681
 10862  003364  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 10863  003366  E108               	bnz	u4680
 10864  003368  2812               	incf	___fldiv@new_exp^0,w,c
 10865  00336A  A0D8               	btfss	status,0,c
 10866  00336C  EFBA  F019         	goto	u4681
 10867  003370  EFBC  F019         	goto	u4680
 10868  003374                     u4681:
 10869  003374  EFC7  F019         	goto	l4037
 10870  003378                     u4680:
 10871  003378  0E00               	movlw	0
 10872  00337A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 10873  00337C  6812               	setf	___fldiv@new_exp^0,c
 10874  00337E  0E00               	movlw	0
 10875  003380  6E01               	movwf	___fldiv@b^0,c
 10876  003382  0E00               	movlw	0
 10877  003384  6E02               	movwf	(___fldiv@b+1)^0,c
 10878  003386  0E00               	movlw	0
 10879  003388  6E03               	movwf	(___fldiv@b+2)^0,c
 10880  00338A  0E00               	movlw	0
 10881  00338C  6E04               	movwf	(___fldiv@b+3)^0,c
 10882  00338E                     l4037:
 10883  00338E  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10884  003390  EFD4  F019         	goto	u4690
 10885  003394  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 10886  003396  E106               	bnz	u4691
 10887  003398  0412               	decf	___fldiv@new_exp^0,w,c
 10888  00339A  B0D8               	btfsc	status,0,c
 10889  00339C  EFD2  F019         	goto	u4691
 10890  0033A0  EFD4  F019         	goto	u4690
 10891  0033A4                     u4691:
 10892  0033A4  EFE2  F019         	goto	l4041
 10893  0033A8                     u4690:
 10894  0033A8  0E00               	movlw	0
 10895  0033AA  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 10896  0033AC  0E00               	movlw	0
 10897  0033AE  6E12               	movwf	___fldiv@new_exp^0,c
 10898  0033B0  0E00               	movlw	0
 10899  0033B2  6E01               	movwf	___fldiv@b^0,c
 10900  0033B4  0E00               	movlw	0
 10901  0033B6  6E02               	movwf	(___fldiv@b+1)^0,c
 10902  0033B8  0E00               	movlw	0
 10903  0033BA  6E03               	movwf	(___fldiv@b+2)^0,c
 10904  0033BC  0E00               	movlw	0
 10905  0033BE  6E04               	movwf	(___fldiv@b+3)^0,c
 10906  0033C0  0E00               	movlw	0
 10907  0033C2  6E11               	movwf	___fldiv@sign^0,c
 10908  0033C4                     l4041:
 10909  0033C4  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
 10910  0033C8  A018               	btfss	___fldiv@bexp^0,0,c
 10911  0033CA  EFE9  F019         	goto	u4701
 10912  0033CE  EFEB  F019         	goto	u4700
 10913  0033D2                     u4701:
 10914  0033D2  EFEE  F019         	goto	l4047
 10915  0033D6                     u4700:
 10916  0033D6  8E03               	bsf	(___fldiv@b+2)^0,7,c
 10917  0033D8  EFEF  F019         	goto	l4049
 10918  0033DC                     l4047:
 10919  0033DC  9E03               	bcf	(___fldiv@b+2)^0,7,c
 10920  0033DE                     l4049:
 10921  0033DE  90D8               	bcf	status,0,c
 10922  0033E0  3018               	rrcf	___fldiv@bexp^0,w,c
 10923  0033E2  6E04               	movwf	(___fldiv@b+3)^0,c
 10924  0033E4  EFA5  F018         	goto	l3963
 10925  0033E8                     l675:
 10926  0033E8  0012               	return		;funcret
 10927  0033EA                     __end_of___fldiv:
 10928                           	callstack 0
 10929                           
 10930 ;; *************** function ___awmod *****************
 10931 ;; Defined at:
 10932 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;  dividend        2    0[COMRAM] int 
 10935 ;;  divisor         2    2[COMRAM] int 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  sign            1    5[COMRAM] unsigned char 
 10938 ;;  counter         1    4[COMRAM] unsigned char 
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  2    0[COMRAM] int 
 10941 ;; Registers used:
 10942 ;;		wreg, status,2, status,0
 10943 ;; Tracked objects:
 10944 ;;		On entry : 0/0
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10948 ;;      Params:         4       0       0       0       0       0       0
 10949 ;;      Locals:         2       0       0       0       0       0       0
 10950 ;;      Temps:          0       0       0       0       0       0       0
 10951 ;;      Totals:         6       0       0       0       0       0       0
 10952 ;;Total ram usage:        6 bytes
 10953 ;; Hardware stack levels used:    1
 10954 ;; This function calls:
 10955 ;;		Nothing
 10956 ;; This function is called by:
 10957 ;;		_efgtoa
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           	psect	text29
 10962  005386                     __ptext29:
 10963                           	callstack 0
 10964  005386                     ___awmod:
 10965                           	callstack 25
 10966  005386  0E00               	movlw	0
 10967  005388  6E06               	movwf	___awmod@sign^0,c
 10968  00538A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 10969  00538C  EFCC  F029         	goto	u4960
 10970  005390  EFCA  F029         	goto	u4961
 10971  005394                     u4961:
 10972  005394  EFD2  F029         	goto	l4245
 10973  005398                     u4960:
 10974  005398  6C01               	negf	___awmod@dividend^0,c
 10975  00539A  1E02               	comf	(___awmod@dividend+1)^0,f,c
 10976  00539C  B0D8               	btfsc	status,0,c
 10977  00539E  2A02               	incf	(___awmod@dividend+1)^0,f,c
 10978  0053A0  0E01               	movlw	1
 10979  0053A2  6E06               	movwf	___awmod@sign^0,c
 10980  0053A4                     l4245:
 10981  0053A4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 10982  0053A6  EFD9  F029         	goto	u4970
 10983  0053AA  EFD7  F029         	goto	u4971
 10984  0053AE                     u4971:
 10985  0053AE  EFDD  F029         	goto	l4249
 10986  0053B2                     u4970:
 10987  0053B2  6C03               	negf	___awmod@divisor^0,c
 10988  0053B4  1E04               	comf	(___awmod@divisor+1)^0,f,c
 10989  0053B6  B0D8               	btfsc	status,0,c
 10990  0053B8  2A04               	incf	(___awmod@divisor+1)^0,f,c
 10991  0053BA                     l4249:
 10992  0053BA  5003               	movf	___awmod@divisor^0,w,c
 10993  0053BC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 10994  0053BE  B4D8               	btfsc	status,2,c
 10995  0053C0  EFE4  F029         	goto	u4981
 10996  0053C4  EFE6  F029         	goto	u4980
 10997  0053C8                     u4981:
 10998  0053C8  EF0A  F02A         	goto	l4265
 10999  0053CC                     u4980:
 11000  0053CC  0E01               	movlw	1
 11001  0053CE  6E05               	movwf	___awmod@counter^0,c
 11002  0053D0  EFEE  F029         	goto	l4255
 11003  0053D4                     l4253:
 11004  0053D4  90D8               	bcf	status,0,c
 11005  0053D6  3603               	rlcf	___awmod@divisor^0,f,c
 11006  0053D8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11007  0053DA  2A05               	incf	___awmod@counter^0,f,c
 11008  0053DC                     l4255:
 11009  0053DC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11010  0053DE  EFF3  F029         	goto	u4991
 11011  0053E2  EFF5  F029         	goto	u4990
 11012  0053E6                     u4991:
 11013  0053E6  EFEA  F029         	goto	l4253
 11014  0053EA                     u4990:
 11015  0053EA                     l4257:
 11016  0053EA  5003               	movf	___awmod@divisor^0,w,c
 11017  0053EC  5C01               	subwf	___awmod@dividend^0,w,c
 11018  0053EE  5004               	movf	(___awmod@divisor+1)^0,w,c
 11019  0053F0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11020  0053F2  A0D8               	btfss	status,0,c
 11021  0053F4  EFFE  F029         	goto	u5001
 11022  0053F8  EF00  F02A         	goto	u5000
 11023  0053FC                     u5001:
 11024  0053FC  EF04  F02A         	goto	l4261
 11025  005400                     u5000:
 11026  005400  5003               	movf	___awmod@divisor^0,w,c
 11027  005402  5E01               	subwf	___awmod@dividend^0,f,c
 11028  005404  5004               	movf	(___awmod@divisor+1)^0,w,c
 11029  005406  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11030  005408                     l4261:
 11031  005408  90D8               	bcf	status,0,c
 11032  00540A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11033  00540C  3203               	rrcf	___awmod@divisor^0,f,c
 11034  00540E  2E05               	decfsz	___awmod@counter^0,f,c
 11035  005410  EFF5  F029         	goto	l4257
 11036  005414                     l4265:
 11037  005414  5006               	movf	___awmod@sign^0,w,c
 11038  005416  B4D8               	btfsc	status,2,c
 11039  005418  EF10  F02A         	goto	u5011
 11040  00541C  EF12  F02A         	goto	u5010
 11041  005420                     u5011:
 11042  005420  EF16  F02A         	goto	l4269
 11043  005424                     u5010:
 11044  005424  6C01               	negf	___awmod@dividend^0,c
 11045  005426  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11046  005428  B0D8               	btfsc	status,0,c
 11047  00542A  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11048  00542C                     l4269:
 11049  00542C  C001  F001         	movff	___awmod@dividend,?___awmod
 11050  005430  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11051  005434  0012               	return		;funcret
 11052  005436                     __end_of___awmod:
 11053                           	callstack 0
 11054                           
 11055 ;; *************** function ___awdiv *****************
 11056 ;; Defined at:
 11057 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
 11058 ;; Parameters:    Size  Location     Type
 11059 ;;  dividend        2    0[COMRAM] int 
 11060 ;;  divisor         2    2[COMRAM] int 
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;  quotient        2    6[COMRAM] int 
 11063 ;;  sign            1    5[COMRAM] unsigned char 
 11064 ;;  counter         1    4[COMRAM] unsigned char 
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  2    0[COMRAM] int 
 11067 ;; Registers used:
 11068 ;;		wreg, status,2, status,0
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11074 ;;      Params:         4       0       0       0       0       0       0
 11075 ;;      Locals:         4       0       0       0       0       0       0
 11076 ;;      Temps:          0       0       0       0       0       0       0
 11077 ;;      Totals:         8       0       0       0       0       0       0
 11078 ;;Total ram usage:        8 bytes
 11079 ;; Hardware stack levels used:    1
 11080 ;; This function calls:
 11081 ;;		Nothing
 11082 ;; This function is called by:
 11083 ;;		_efgtoa
 11084 ;; This function uses a non-reentrant model
 11085 ;;
 11086                           
 11087                           	psect	text30
 11088  0052C2                     __ptext30:
 11089                           	callstack 0
 11090  0052C2                     ___awdiv:
 11091                           	callstack 25
 11092  0052C2  0E00               	movlw	0
 11093  0052C4  6E06               	movwf	___awdiv@sign^0,c
 11094  0052C6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11095  0052C8  EF6A  F029         	goto	u4900
 11096  0052CC  EF68  F029         	goto	u4901
 11097  0052D0                     u4901:
 11098  0052D0  EF70  F029         	goto	l4201
 11099  0052D4                     u4900:
 11100  0052D4  6C03               	negf	___awdiv@divisor^0,c
 11101  0052D6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11102  0052D8  B0D8               	btfsc	status,0,c
 11103  0052DA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11104  0052DC  0E01               	movlw	1
 11105  0052DE  6E06               	movwf	___awdiv@sign^0,c
 11106  0052E0                     l4201:
 11107  0052E0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11108  0052E2  EF77  F029         	goto	u4910
 11109  0052E6  EF75  F029         	goto	u4911
 11110  0052EA                     u4911:
 11111  0052EA  EF7D  F029         	goto	l4207
 11112  0052EE                     u4910:
 11113  0052EE  6C01               	negf	___awdiv@dividend^0,c
 11114  0052F0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11115  0052F2  B0D8               	btfsc	status,0,c
 11116  0052F4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11117  0052F6  0E01               	movlw	1
 11118  0052F8  1A06               	xorwf	___awdiv@sign^0,f,c
 11119  0052FA                     l4207:
 11120  0052FA  0E00               	movlw	0
 11121  0052FC  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11122  0052FE  0E00               	movlw	0
 11123  005300  6E07               	movwf	___awdiv@quotient^0,c
 11124  005302  5003               	movf	___awdiv@divisor^0,w,c
 11125  005304  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11126  005306  B4D8               	btfsc	status,2,c
 11127  005308  EF88  F029         	goto	u4921
 11128  00530C  EF8A  F029         	goto	u4920
 11129  005310                     u4921:
 11130  005310  EFB2  F029         	goto	l4229
 11131  005314                     u4920:
 11132  005314  0E01               	movlw	1
 11133  005316  6E05               	movwf	___awdiv@counter^0,c
 11134  005318  EF92  F029         	goto	l4215
 11135  00531C                     l4213:
 11136  00531C  90D8               	bcf	status,0,c
 11137  00531E  3603               	rlcf	___awdiv@divisor^0,f,c
 11138  005320  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11139  005322  2A05               	incf	___awdiv@counter^0,f,c
 11140  005324                     l4215:
 11141  005324  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11142  005326  EF97  F029         	goto	u4931
 11143  00532A  EF99  F029         	goto	u4930
 11144  00532E                     u4931:
 11145  00532E  EF8E  F029         	goto	l4213
 11146  005332                     u4930:
 11147  005332                     l4217:
 11148  005332  90D8               	bcf	status,0,c
 11149  005334  3607               	rlcf	___awdiv@quotient^0,f,c
 11150  005336  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11151  005338  5003               	movf	___awdiv@divisor^0,w,c
 11152  00533A  5C01               	subwf	___awdiv@dividend^0,w,c
 11153  00533C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11154  00533E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11155  005340  A0D8               	btfss	status,0,c
 11156  005342  EFA5  F029         	goto	u4941
 11157  005346  EFA7  F029         	goto	u4940
 11158  00534A                     u4941:
 11159  00534A  EFAC  F029         	goto	l4225
 11160  00534E                     u4940:
 11161  00534E  5003               	movf	___awdiv@divisor^0,w,c
 11162  005350  5E01               	subwf	___awdiv@dividend^0,f,c
 11163  005352  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11164  005354  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11165  005356  8007               	bsf	___awdiv@quotient^0,0,c
 11166  005358                     l4225:
 11167  005358  90D8               	bcf	status,0,c
 11168  00535A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11169  00535C  3203               	rrcf	___awdiv@divisor^0,f,c
 11170  00535E  2E05               	decfsz	___awdiv@counter^0,f,c
 11171  005360  EF99  F029         	goto	l4217
 11172  005364                     l4229:
 11173  005364  5006               	movf	___awdiv@sign^0,w,c
 11174  005366  B4D8               	btfsc	status,2,c
 11175  005368  EFB8  F029         	goto	u4951
 11176  00536C  EFBA  F029         	goto	u4950
 11177  005370                     u4951:
 11178  005370  EFBE  F029         	goto	l4233
 11179  005374                     u4950:
 11180  005374  6C07               	negf	___awdiv@quotient^0,c
 11181  005376  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11182  005378  B0D8               	btfsc	status,0,c
 11183  00537A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11184  00537C                     l4233:
 11185  00537C  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11186  005380  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11187  005384  0012               	return		;funcret
 11188  005386                     __end_of___awdiv:
 11189                           	callstack 0
 11190                           
 11191 ;; *************** function _dtoa *****************
 11192 ;; Defined at:
 11193 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 11196 ;;		 -> vsnprintf@f(6), 
 11197 ;;  d               8   29[COMRAM] long long 
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;  n               8   53[COMRAM] long long 
 11200 ;;  i               2   61[COMRAM] int 
 11201 ;;  s               2   51[COMRAM] int 
 11202 ;;  w               2   49[COMRAM] int 
 11203 ;;  p               2   47[COMRAM] int 
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  2   27[COMRAM] int 
 11206 ;; Registers used:
 11207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11213 ;;      Params:        10       0       0       0       0       0       0
 11214 ;;      Locals:        18       0       0       0       0       0       0
 11215 ;;      Temps:          8       0       0       0       0       0       0
 11216 ;;      Totals:        36       0       0       0       0       0       0
 11217 ;;Total ram usage:       36 bytes
 11218 ;; Hardware stack levels used:    1
 11219 ;; Hardware stack levels required when called:    4
 11220 ;; This function calls:
 11221 ;;		___aodiv
 11222 ;;		___aomod
 11223 ;;		_abs
 11224 ;;		_pad
 11225 ;; This function is called by:
 11226 ;;		_vfpfcnvrt
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           	psect	text31
 11231  0033EA                     __ptext31:
 11232                           	callstack 0
 11233  0033EA                     _dtoa:
 11234                           	callstack 22
 11235  0033EA                     
 11236                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 11237  0033EA  C01E  F036         	movff	dtoa@d,dtoa@n
 11238  0033EE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 11239  0033F2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 11240  0033F6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 11241  0033FA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 11242  0033FE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 11243  003402  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 11244  003406  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 11245  00340A                     
 11246                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 11247  00340A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 11248  00340C  EF0A  F01A         	goto	u5661
 11249  003410  EF0D  F01A         	goto	u5660
 11250  003414                     u5661:
 11251  003414  0E01               	movlw	1
 11252  003416  EF0E  F01A         	goto	u5670
 11253  00341A                     u5660:
 11254  00341A  0E00               	movlw	0
 11255  00341C                     u5670:
 11256  00341C  6E34               	movwf	dtoa@s^0,c
 11257  00341E  6A35               	clrf	(dtoa@s+1)^0,c
 11258                           
 11259                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 11260  003420  5034               	movf	dtoa@s^0,w,c
 11261  003422  1035               	iorwf	(dtoa@s+1)^0,w,c
 11262  003424  B4D8               	btfsc	status,2,c
 11263  003426  EF17  F01A         	goto	u5681
 11264  00342A  EF19  F01A         	goto	u5680
 11265  00342E                     u5681:
 11266  00342E  EF29  F01A         	goto	l4555
 11267  003432                     u5680:
 11268  003432                     
 11269                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 11270  003432  1E3D               	comf	(dtoa@n+7)^0,f,c
 11271  003434  1E3C               	comf	(dtoa@n+6)^0,f,c
 11272  003436  1E3B               	comf	(dtoa@n+5)^0,f,c
 11273  003438  1E3A               	comf	(dtoa@n+4)^0,f,c
 11274  00343A  1E39               	comf	(dtoa@n+3)^0,f,c
 11275  00343C  1E38               	comf	(dtoa@n+2)^0,f,c
 11276  00343E  1E37               	comf	(dtoa@n+1)^0,f,c
 11277  003440  6C36               	negf	dtoa@n^0,c
 11278  003442  0E00               	movlw	0
 11279  003444  2237               	addwfc	(dtoa@n+1)^0,f,c
 11280  003446  2238               	addwfc	(dtoa@n+2)^0,f,c
 11281  003448  2239               	addwfc	(dtoa@n+3)^0,f,c
 11282  00344A  223A               	addwfc	(dtoa@n+4)^0,f,c
 11283  00344C  223B               	addwfc	(dtoa@n+5)^0,f,c
 11284  00344E  223C               	addwfc	(dtoa@n+6)^0,f,c
 11285  003450  223D               	addwfc	(dtoa@n+7)^0,f,c
 11286  003452                     l4555:
 11287                           
 11288                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 11289  003452  0100               	movlb	0	; () banked
 11290  003454  BFEE               	btfsc	(_prec+1)& (0+255),7,b
 11291  003456  EF2F  F01A         	goto	u5691
 11292  00345A  EF31  F01A         	goto	u5690
 11293  00345E                     u5691:
 11294  00345E  EF32  F01A         	goto	l4559
 11295  003462                     u5690:
 11296  003462                     
 11297                           ; BSR set to: 0
 11298                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 11299  003462  93EF               	bcf	_flags& (0+255),1,b
 11300  003464                     l4559:
 11301                           
 11302                           ; BSR set to: 0
 11303                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 11304  003464  BFEE               	btfsc	(_prec+1)& (0+255),7,b
 11305  003466  EF3F  F01A         	goto	u5700
 11306  00346A  51EE               	movf	(_prec+1)& (0+255),w,b
 11307  00346C  E106               	bnz	u5701
 11308  00346E  05ED               	decf	_prec& (0+255),w,b
 11309  003470  B0D8               	btfsc	status,0,c
 11310  003472  EF3D  F01A         	goto	u5701
 11311  003476  EF3F  F01A         	goto	u5700
 11312  00347A                     u5701:
 11313  00347A  EF45  F01A         	goto	l860
 11314  00347E                     u5700:
 11315  00347E                     
 11316                           ; BSR set to: 0
 11317  00347E  0E00               	movlw	0
 11318  003480  6E31               	movwf	(dtoa@p+1)^0,c
 11319  003482  0E01               	movlw	1
 11320  003484  6E30               	movwf	dtoa@p^0,c
 11321  003486  EF49  F01A         	goto	l862
 11322  00348A                     l860:
 11323                           
 11324                           ; BSR set to: 0
 11325  00348A  C0ED  F030         	movff	_prec,dtoa@p
 11326  00348E  C0EE  F031         	movff	_prec+1,dtoa@p+1
 11327  003492                     l862:
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 11331  003492  C0EB  F032         	movff	_width,dtoa@w
 11332  003496  C0EC  F033         	movff	_width+1,dtoa@w+1
 11333  00349A                     
 11334                           ; BSR set to: 0
 11335                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 11336  00349A  5034               	movf	dtoa@s^0,w,c
 11337  00349C  1035               	iorwf	(dtoa@s+1)^0,w,c
 11338  00349E  A4D8               	btfss	status,2,c
 11339  0034A0  EF54  F01A         	goto	u5711
 11340  0034A4  EF56  F01A         	goto	u5710
 11341  0034A8                     u5711:
 11342  0034A8  EF5D  F01A         	goto	l4567
 11343  0034AC                     u5710:
 11344  0034AC                     
 11345                           ; BSR set to: 0
 11346  0034AC  A5EF               	btfss	_flags& (0+255),2,b
 11347  0034AE  EF5B  F01A         	goto	u5721
 11348  0034B2  EF5D  F01A         	goto	u5720
 11349  0034B6                     u5721:
 11350  0034B6  EF60  F01A         	goto	l4569
 11351  0034BA                     u5720:
 11352  0034BA                     l4567:
 11353                           
 11354                           ; BSR set to: 0
 11355                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
 11356  0034BA  0632               	decf	dtoa@w^0,f,c
 11357  0034BC  A0D8               	btfss	status,0,c
 11358  0034BE  0633               	decf	(dtoa@w+1)^0,f,c
 11359  0034C0                     l4569:
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 11363  0034C0  0E00               	movlw	0
 11364  0034C2  6E3F               	movwf	(dtoa@i+1)^0,c
 11365  0034C4  0E4F               	movlw	79
 11366  0034C6  6E3E               	movwf	dtoa@i^0,c
 11367  0034C8                     
 11368                           ; BSR set to: 0
 11369                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 11370  0034C8  0E00               	movlw	0
 11371  0034CA  0101               	movlb	1	; () banked
 11372  0034CC  6F4F               	movwf	(_dbuf+79)& (0+255),b
 11373                           
 11374                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11375  0034CE  EFE5  F01A         	goto	l4583
 11376  0034D2                     l4573:
 11377                           
 11378                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
 11379  0034D2  063E               	decf	dtoa@i^0,f,c
 11380  0034D4  A0D8               	btfss	status,0,c
 11381  0034D6  063F               	decf	(dtoa@i+1)^0,f,c
 11382  0034D8                     
 11383                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 11384  0034D8  0E00               	movlw	low _dbuf
 11385  0034DA  243E               	addwf	dtoa@i^0,w,c
 11386  0034DC  6ED9               	movwf	fsr2l,c
 11387  0034DE  0E01               	movlw	high _dbuf
 11388  0034E0  203F               	addwfc	(dtoa@i+1)^0,w,c
 11389  0034E2  6EDA               	movwf	fsr2h,c
 11390  0034E4  C036  F001         	movff	dtoa@n,___aomod@dividend
 11391  0034E8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 11392  0034EC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 11393  0034F0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 11394  0034F4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 11395  0034F8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 11396  0034FC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 11397  003500  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 11398  003504  0E0A               	movlw	10
 11399  003506  6E09               	movwf	___aomod@divisor^0,c
 11400  003508  0E00               	movlw	0
 11401  00350A  6E0A               	movwf	(___aomod@divisor+1)^0,c
 11402  00350C  0E00               	movlw	0
 11403  00350E  6E0B               	movwf	(___aomod@divisor+2)^0,c
 11404  003510  0E00               	movlw	0
 11405  003512  6E0C               	movwf	(___aomod@divisor+3)^0,c
 11406  003514  0E00               	movlw	0
 11407  003516  6E0D               	movwf	(___aomod@divisor+4)^0,c
 11408  003518  0E00               	movlw	0
 11409  00351A  6E0E               	movwf	(___aomod@divisor+5)^0,c
 11410  00351C  0E00               	movlw	0
 11411  00351E  6E0F               	movwf	(___aomod@divisor+6)^0,c
 11412  003520  0E00               	movlw	0
 11413  003522  6E10               	movwf	(___aomod@divisor+7)^0,c
 11414  003524  ECFC  F023         	call	___aomod	;wreg free
 11415  003528  C001  F026         	movff	?___aomod,??_dtoa
 11416  00352C  C002  F027         	movff	?___aomod+1,??_dtoa+1
 11417  003530  C003  F028         	movff	?___aomod+2,??_dtoa+2
 11418  003534  C004  F029         	movff	?___aomod+3,??_dtoa+3
 11419  003538  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 11420  00353C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 11421  003540  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 11422  003544  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 11423  003548  C026  F013         	movff	??_dtoa,abs@a
 11424  00354C  C028  F014         	movff	??_dtoa+2,abs@a+1
 11425  003550  EC97  F02C         	call	_abs	;wreg free
 11426  003554  5013               	movf	?_abs^0,w,c
 11427  003556  0F30               	addlw	48
 11428  003558  6EDF               	movwf	indf2,c
 11429  00355A                     
 11430                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
 11431  00355A  0630               	decf	dtoa@p^0,f,c
 11432  00355C  A0D8               	btfss	status,0,c
 11433  00355E  0631               	decf	(dtoa@p+1)^0,f,c
 11434  003560                     
 11435                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
 11436  003560  0632               	decf	dtoa@w^0,f,c
 11437  003562  A0D8               	btfss	status,0,c
 11438  003564  0633               	decf	(dtoa@w+1)^0,f,c
 11439  003566                     
 11440                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 11441  003566  C036  F001         	movff	dtoa@n,___aodiv@dividend
 11442  00356A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 11443  00356E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 11444  003572  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 11445  003576  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 11446  00357A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 11447  00357E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 11448  003582  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 11449  003586  0E0A               	movlw	10
 11450  003588  6E09               	movwf	___aodiv@divisor^0,c
 11451  00358A  0E00               	movlw	0
 11452  00358C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 11453  00358E  0E00               	movlw	0
 11454  003590  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 11455  003592  0E00               	movlw	0
 11456  003594  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 11457  003596  0E00               	movlw	0
 11458  003598  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 11459  00359A  0E00               	movlw	0
 11460  00359C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 11461  00359E  0E00               	movlw	0
 11462  0035A0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 11463  0035A2  0E00               	movlw	0
 11464  0035A4  6E10               	movwf	(___aodiv@divisor+7)^0,c
 11465  0035A6  EC75  F022         	call	___aodiv	;wreg free
 11466  0035AA  C001  F036         	movff	?___aodiv,dtoa@n
 11467  0035AE  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 11468  0035B2  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 11469  0035B6  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 11470  0035BA  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 11471  0035BE  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 11472  0035C2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 11473  0035C6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 11474  0035CA                     l4583:
 11475                           
 11476                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11477  0035CA  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 11478  0035CC  EFF0  F01A         	goto	u5731
 11479  0035D0  503F               	movf	(dtoa@i+1)^0,w,c
 11480  0035D2  E108               	bnz	u5730
 11481  0035D4  043E               	decf	dtoa@i^0,w,c
 11482  0035D6  A0D8               	btfss	status,0,c
 11483  0035D8  EFF0  F01A         	goto	u5731
 11484  0035DC  EFF2  F01A         	goto	u5730
 11485  0035E0                     u5731:
 11486  0035E0  EF23  F01B         	goto	l4593
 11487  0035E4                     u5730:
 11488  0035E4  5036               	movf	dtoa@n^0,w,c
 11489  0035E6  1037               	iorwf	(dtoa@n+1)^0,w,c
 11490  0035E8  1038               	iorwf	(dtoa@n+2)^0,w,c
 11491  0035EA  1039               	iorwf	(dtoa@n+3)^0,w,c
 11492  0035EC  103A               	iorwf	(dtoa@n+4)^0,w,c
 11493  0035EE  103B               	iorwf	(dtoa@n+5)^0,w,c
 11494  0035F0  103C               	iorwf	(dtoa@n+6)^0,w,c
 11495  0035F2  103D               	iorwf	(dtoa@n+7)^0,w,c
 11496  0035F4  A4D8               	btfss	status,2,c
 11497  0035F6  EFFF  F01A         	goto	u5741
 11498  0035FA  EF01  F01B         	goto	u5740
 11499  0035FE                     u5741:
 11500  0035FE  EF69  F01A         	goto	l4573
 11501  003602                     u5740:
 11502  003602  BE31               	btfsc	(dtoa@p+1)^0,7,c
 11503  003604  EF0E  F01B         	goto	u5750
 11504  003608  5031               	movf	(dtoa@p+1)^0,w,c
 11505  00360A  E106               	bnz	u5751
 11506  00360C  0430               	decf	dtoa@p^0,w,c
 11507  00360E  B0D8               	btfsc	status,0,c
 11508  003610  EF0C  F01B         	goto	u5751
 11509  003614  EF0E  F01B         	goto	u5750
 11510  003618                     u5751:
 11511  003618  EF69  F01A         	goto	l4573
 11512  00361C                     u5750:
 11513  00361C  BE33               	btfsc	(dtoa@w+1)^0,7,c
 11514  00361E  EF19  F01B         	goto	u5761
 11515  003622  5033               	movf	(dtoa@w+1)^0,w,c
 11516  003624  E108               	bnz	u5760
 11517  003626  0432               	decf	dtoa@w^0,w,c
 11518  003628  A0D8               	btfss	status,0,c
 11519  00362A  EF19  F01B         	goto	u5761
 11520  00362E  EF1B  F01B         	goto	u5760
 11521  003632                     u5761:
 11522  003632  EF23  F01B         	goto	l4593
 11523  003636                     u5760:
 11524  003636  0100               	movlb	0	; () banked
 11525  003638  B3EF               	btfsc	_flags& (0+255),1,b
 11526  00363A  EF21  F01B         	goto	u5771
 11527  00363E  EF23  F01B         	goto	u5770
 11528  003642                     u5771:
 11529  003642  EF69  F01A         	goto	l4573
 11530  003646                     u5770:
 11531  003646                     l4593:
 11532                           
 11533                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 11534  003646  5034               	movf	dtoa@s^0,w,c
 11535  003648  1035               	iorwf	(dtoa@s+1)^0,w,c
 11536  00364A  A4D8               	btfss	status,2,c
 11537  00364C  EF2A  F01B         	goto	u5781
 11538  003650  EF2C  F01B         	goto	u5780
 11539  003654                     u5781:
 11540  003654  EF34  F01B         	goto	l4597
 11541  003658                     u5780:
 11542  003658  0100               	movlb	0	; () banked
 11543  00365A  A5EF               	btfss	_flags& (0+255),2,b
 11544  00365C  EF32  F01B         	goto	u5791
 11545  003660  EF34  F01B         	goto	u5790
 11546  003664                     u5791:
 11547  003664  EF52  F01B         	goto	l4607
 11548  003668                     u5790:
 11549  003668                     l4597:
 11550                           
 11551                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
 11552  003668  063E               	decf	dtoa@i^0,f,c
 11553  00366A  A0D8               	btfss	status,0,c
 11554  00366C  063F               	decf	(dtoa@i+1)^0,f,c
 11555  00366E                     
 11556                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 11557  00366E  5034               	movf	dtoa@s^0,w,c
 11558  003670  1035               	iorwf	(dtoa@s+1)^0,w,c
 11559  003672  A4D8               	btfss	status,2,c
 11560  003674  EF3E  F01B         	goto	u5801
 11561  003678  EF40  F01B         	goto	u5800
 11562  00367C                     u5801:
 11563  00367C  EF46  F01B         	goto	l4603
 11564  003680                     u5800:
 11565  003680  0E00               	movlw	0
 11566  003682  6E2F               	movwf	(_dtoa$1042+1)^0,c
 11567  003684  0E2B               	movlw	43
 11568  003686  6E2E               	movwf	_dtoa$1042^0,c
 11569  003688  EF4A  F01B         	goto	l4605
 11570  00368C                     l4603:
 11571  00368C  0E00               	movlw	0
 11572  00368E  6E2F               	movwf	(_dtoa$1042+1)^0,c
 11573  003690  0E2D               	movlw	45
 11574  003692  6E2E               	movwf	_dtoa$1042^0,c
 11575  003694                     l4605:
 11576  003694  0E00               	movlw	low _dbuf
 11577  003696  243E               	addwf	dtoa@i^0,w,c
 11578  003698  6ED9               	movwf	fsr2l,c
 11579  00369A  0E01               	movlw	high _dbuf
 11580  00369C  203F               	addwfc	(dtoa@i+1)^0,w,c
 11581  00369E  6EDA               	movwf	fsr2h,c
 11582  0036A0  C02E  FFDF         	movff	_dtoa$1042,indf2
 11583  0036A4                     l4607:
 11584                           
 11585                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 11586  0036A4  C01C  F011         	movff	dtoa@fp,pad@fp
 11587  0036A8  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 11588  0036AC  0E00               	movlw	low _dbuf
 11589  0036AE  243E               	addwf	dtoa@i^0,w,c
 11590  0036B0  6E13               	movwf	pad@buf^0,c
 11591  0036B2  0E01               	movlw	high _dbuf
 11592  0036B4  203F               	addwfc	(dtoa@i+1)^0,w,c
 11593  0036B6  6E14               	movwf	(pad@buf+1)^0,c
 11594  0036B8  C032  F015         	movff	dtoa@w,pad@p
 11595  0036BC  C033  F016         	movff	dtoa@w+1,pad@p+1
 11596  0036C0  ECFE  F028         	call	_pad	;wreg free
 11597  0036C4  C011  F01C         	movff	?_pad,?_dtoa
 11598  0036C8  C012  F01D         	movff	?_pad+1,?_dtoa+1
 11599  0036CC  0012               	return		;funcret
 11600  0036CE                     __end_of_dtoa:
 11601                           	callstack 0
 11602                           
 11603 ;; *************** function _pad *****************
 11604 ;; Defined at:
 11605 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 11606 ;; Parameters:    Size  Location     Type
 11607 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 11608 ;;		 -> vsnprintf@f(6), 
 11609 ;;  buf             2   18[COMRAM] PTR unsigned char 
 11610 ;;		 -> dbuf(80), 
 11611 ;;  p               2   20[COMRAM] int 
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;  w               2   25[COMRAM] int 
 11614 ;;  i               2   23[COMRAM] int 
 11615 ;; Return value:  Size  Location     Type
 11616 ;;                  2   16[COMRAM] int 
 11617 ;; Registers used:
 11618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11619 ;; Tracked objects:
 11620 ;;		On entry : 0/0
 11621 ;;		On exit  : 0/0
 11622 ;;		Unchanged: 0/0
 11623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11624 ;;      Params:         6       0       0       0       0       0       0
 11625 ;;      Locals:         4       0       0       0       0       0       0
 11626 ;;      Temps:          1       0       0       0       0       0       0
 11627 ;;      Totals:        11       0       0       0       0       0       0
 11628 ;;Total ram usage:       11 bytes
 11629 ;; Hardware stack levels used:    1
 11630 ;; Hardware stack levels required when called:    3
 11631 ;; This function calls:
 11632 ;;		_fputc
 11633 ;;		_fputs
 11634 ;;		_strlen
 11635 ;; This function is called by:
 11636 ;;		_dtoa
 11637 ;;		_efgtoa
 11638 ;;		_otoa
 11639 ;;		_utoa
 11640 ;;		_xtoa
 11641 ;; This function uses a non-reentrant model
 11642 ;;
 11643                           
 11644                           	psect	text32
 11645  0051FC                     __ptext32:
 11646                           	callstack 0
 11647  0051FC                     _pad:
 11648                           	callstack 22
 11649  0051FC                     
 11650                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 11651  0051FC  0100               	movlb	0	; () banked
 11652  0051FE  A1EF               	btfss	_flags& (0+255),0,b
 11653  005200  EF04  F029         	goto	u5251
 11654  005204  EF06  F029         	goto	u5250
 11655  005208                     u5251:
 11656  005208  EF10  F029         	goto	l4405
 11657  00520C                     u5250:
 11658  00520C                     
 11659                           ; BSR set to: 0
 11660                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 11661  00520C  C013  F00A         	movff	pad@buf,fputs@s
 11662  005210  C014  F00B         	movff	pad@buf+1,fputs@s+1
 11663  005214  C011  F00C         	movff	pad@fp,fputs@fp
 11664  005218  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 11665  00521C  EC54  F02C         	call	_fputs	;wreg free
 11666  005220                     l4405:
 11667                           
 11668                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 11669  005220  BE16               	btfsc	(pad@p+1)^0,7,c
 11670  005222  EF15  F029         	goto	u5261
 11671  005226  EF17  F029         	goto	u5260
 11672  00522A                     u5261:
 11673  00522A  EF1D  F029         	goto	l4409
 11674  00522E                     u5260:
 11675  00522E  C015  F01A         	movff	pad@p,pad@w
 11676  005232  C016  F01B         	movff	pad@p+1,pad@w+1
 11677  005236  EF21  F029         	goto	l833
 11678  00523A                     l4409:
 11679  00523A  0E00               	movlw	0
 11680  00523C  6E1B               	movwf	(pad@w+1)^0,c
 11681  00523E  0E00               	movlw	0
 11682  005240  6E1A               	movwf	pad@w^0,c
 11683  005242                     l833:
 11684                           
 11685                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 11686  005242  0E00               	movlw	0
 11687  005244  6E19               	movwf	(pad@i+1)^0,c
 11688  005246  0E00               	movlw	0
 11689  005248  6E18               	movwf	pad@i^0,c
 11690                           
 11691                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 11692  00524A  EF33  F029         	goto	l4415
 11693  00524E                     l4411:
 11694                           
 11695                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 11696  00524E  0E00               	movlw	0
 11697  005250  6E02               	movwf	(fputc@c+1)^0,c
 11698  005252  0E20               	movlw	32
 11699  005254  6E01               	movwf	fputc@c^0,c
 11700  005256  C011  F003         	movff	pad@fp,fputc@fp
 11701  00525A  C012  F004         	movff	pad@fp+1,fputc@fp+1
 11702  00525E  EC99  F028         	call	_fputc	;wreg free
 11703  005262                     
 11704                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
 11705  005262  4A18               	infsnz	pad@i^0,f,c
 11706  005264  2A19               	incf	(pad@i+1)^0,f,c
 11707  005266                     l4415:
 11708                           
 11709                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 11710  005266  501A               	movf	pad@w^0,w,c
 11711  005268  5C18               	subwf	pad@i^0,w,c
 11712  00526A  5019               	movf	(pad@i+1)^0,w,c
 11713  00526C  0A80               	xorlw	128
 11714  00526E  6E17               	movwf	??_pad^0,c
 11715  005270  501B               	movf	(pad@w+1)^0,w,c
 11716  005272  0A80               	xorlw	128
 11717  005274  5817               	subwfb	??_pad^0,w,c
 11718  005276  A0D8               	btfss	status,0,c
 11719  005278  EF40  F029         	goto	u5271
 11720  00527C  EF42  F029         	goto	u5270
 11721  005280                     u5271:
 11722  005280  EF27  F029         	goto	l4411
 11723  005284                     u5270:
 11724  005284                     
 11725                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 11726  005284  0100               	movlb	0	; () banked
 11727  005286  B1EF               	btfsc	_flags& (0+255),0,b
 11728  005288  EF48  F029         	goto	u5281
 11729  00528C  EF4A  F029         	goto	u5280
 11730  005290                     u5281:
 11731  005290  EF54  F029         	goto	l4419
 11732  005294                     u5280:
 11733  005294                     
 11734                           ; BSR set to: 0
 11735                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 11736  005294  C013  F00A         	movff	pad@buf,fputs@s
 11737  005298  C014  F00B         	movff	pad@buf+1,fputs@s+1
 11738  00529C  C011  F00C         	movff	pad@fp,fputs@fp
 11739  0052A0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 11740  0052A4  EC54  F02C         	call	_fputs	;wreg free
 11741  0052A8                     l4419:
 11742                           
 11743                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 11744  0052A8  C013  F001         	movff	pad@buf,strlen@s
 11745  0052AC  C014  F002         	movff	pad@buf+1,strlen@s+1
 11746  0052B0  EC61  F02D         	call	_strlen	;wreg free
 11747  0052B4  501A               	movf	pad@w^0,w,c
 11748  0052B6  2401               	addwf	?_strlen^0,w,c
 11749  0052B8  6E11               	movwf	?_pad^0,c
 11750  0052BA  501B               	movf	(pad@w+1)^0,w,c
 11751  0052BC  2002               	addwfc	(?_strlen+1)^0,w,c
 11752  0052BE  6E12               	movwf	(?_pad+1)^0,c
 11753  0052C0  0012               	return		;funcret
 11754  0052C2                     __end_of_pad:
 11755                           	callstack 0
 11756                           
 11757 ;; *************** function _strlen *****************
 11758 ;; Defined at:
 11759 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;  s               2    0[COMRAM] PTR const unsigned char 
 11762 ;;		 -> stoa@nuls(7), dbuf(80), ?_snprintf(2), result(2), 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;  a               2    2[COMRAM] PTR const unsigned char 
 11765 ;;		 -> stoa@nuls(7), dbuf(80), ?_snprintf(2), result(2), 
 11766 ;; Return value:  Size  Location     Type
 11767 ;;                  2    0[COMRAM] unsigned int 
 11768 ;; Registers used:
 11769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11770 ;; Tracked objects:
 11771 ;;		On entry : 0/0
 11772 ;;		On exit  : 0/0
 11773 ;;		Unchanged: 0/0
 11774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11775 ;;      Params:         2       0       0       0       0       0       0
 11776 ;;      Locals:         2       0       0       0       0       0       0
 11777 ;;      Temps:          0       0       0       0       0       0       0
 11778 ;;      Totals:         4       0       0       0       0       0       0
 11779 ;;Total ram usage:        4 bytes
 11780 ;; Hardware stack levels used:    1
 11781 ;; This function calls:
 11782 ;;		Nothing
 11783 ;; This function is called by:
 11784 ;;		_pad
 11785 ;;		_stoa
 11786 ;; This function uses a non-reentrant model
 11787 ;;
 11788                           
 11789                           	psect	text33
 11790  005AC2                     __ptext33:
 11791                           	callstack 0
 11792  005AC2                     _strlen:
 11793                           	callstack 24
 11794  005AC2  C001  F003         	movff	strlen@s,strlen@a
 11795  005AC6  C002  F004         	movff	strlen@s+1,strlen@a+1
 11796  005ACA  EF69  F02D         	goto	l3819
 11797  005ACE                     l3817:
 11798  005ACE  4A01               	infsnz	strlen@s^0,f,c
 11799  005AD0  2A02               	incf	(strlen@s+1)^0,f,c
 11800  005AD2                     l3819:
 11801  005AD2  C001  FFD9         	movff	strlen@s,fsr2l
 11802  005AD6  C002  FFDA         	movff	strlen@s+1,fsr2h
 11803  005ADA  50DF               	movf	indf2,w,c
 11804  005ADC  A4D8               	btfss	status,2,c
 11805  005ADE  EF73  F02D         	goto	u4301
 11806  005AE2  EF75  F02D         	goto	u4300
 11807  005AE6                     u4301:
 11808  005AE6  EF67  F02D         	goto	l3817
 11809  005AEA                     u4300:
 11810  005AEA  5003               	movf	strlen@a^0,w,c
 11811  005AEC  5C01               	subwf	strlen@s^0,w,c
 11812  005AEE  6E01               	movwf	?_strlen^0,c
 11813  005AF0  5004               	movf	(strlen@a+1)^0,w,c
 11814  005AF2  5802               	subwfb	(strlen@s+1)^0,w,c
 11815  005AF4  6E02               	movwf	(?_strlen+1)^0,c
 11816  005AF6  0012               	return		;funcret
 11817  005AF8                     __end_of_strlen:
 11818                           	callstack 0
 11819                           
 11820 ;; *************** function _fputs *****************
 11821 ;; Defined at:
 11822 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
 11823 ;; Parameters:    Size  Location     Type
 11824 ;;  s               2    9[COMRAM] PTR const unsigned char 
 11825 ;;		 -> dbuf(80), 
 11826 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 11827 ;;		 -> vsnprintf@f(6), 
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;  i               2   14[COMRAM] int 
 11830 ;;  c               1   13[COMRAM] unsigned char 
 11831 ;; Return value:  Size  Location     Type
 11832 ;;                  2    9[COMRAM] int 
 11833 ;; Registers used:
 11834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11835 ;; Tracked objects:
 11836 ;;		On entry : 0/0
 11837 ;;		On exit  : 0/0
 11838 ;;		Unchanged: 0/0
 11839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11840 ;;      Params:         4       0       0       0       0       0       0
 11841 ;;      Locals:         3       0       0       0       0       0       0
 11842 ;;      Temps:          0       0       0       0       0       0       0
 11843 ;;      Totals:         7       0       0       0       0       0       0
 11844 ;;Total ram usage:        7 bytes
 11845 ;; Hardware stack levels used:    1
 11846 ;; Hardware stack levels required when called:    2
 11847 ;; This function calls:
 11848 ;;		_fputc
 11849 ;; This function is called by:
 11850 ;;		_pad
 11851 ;; This function uses a non-reentrant model
 11852 ;;
 11853                           
 11854                           	psect	text34
 11855  0058A8                     __ptext34:
 11856                           	callstack 0
 11857  0058A8                     _fputs:
 11858                           	callstack 22
 11859  0058A8  0E00               	movlw	0
 11860  0058AA  6E10               	movwf	(fputs@i+1)^0,c
 11861  0058AC  0E00               	movlw	0
 11862  0058AE  6E0F               	movwf	fputs@i^0,c
 11863  0058B0  EF65  F02C         	goto	l3813
 11864  0058B4                     l3809:
 11865  0058B4  C00E  F001         	movff	fputs@c,fputc@c
 11866  0058B8  6A02               	clrf	(fputc@c+1)^0,c
 11867  0058BA  C00C  F003         	movff	fputs@fp,fputc@fp
 11868  0058BE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 11869  0058C2  EC99  F028         	call	_fputc	;wreg free
 11870  0058C6  4A0F               	infsnz	fputs@i^0,f,c
 11871  0058C8  2A10               	incf	(fputs@i+1)^0,f,c
 11872  0058CA                     l3813:
 11873  0058CA  500F               	movf	fputs@i^0,w,c
 11874  0058CC  240A               	addwf	fputs@s^0,w,c
 11875  0058CE  6ED9               	movwf	fsr2l,c
 11876  0058D0  5010               	movf	(fputs@i+1)^0,w,c
 11877  0058D2  200B               	addwfc	(fputs@s+1)^0,w,c
 11878  0058D4  6EDA               	movwf	fsr2h,c
 11879  0058D6  50DF               	movf	indf2,w,c
 11880  0058D8  6E0E               	movwf	fputs@c^0,c
 11881  0058DA  500E               	movf	fputs@c^0,w,c
 11882  0058DC  A4D8               	btfss	status,2,c
 11883  0058DE  EF73  F02C         	goto	u4291
 11884  0058E2  EF75  F02C         	goto	u4290
 11885  0058E6                     u4291:
 11886  0058E6  EF5A  F02C         	goto	l3809
 11887  0058EA                     u4290:
 11888  0058EA  0012               	return		;funcret
 11889  0058EC                     __end_of_fputs:
 11890                           	callstack 0
 11891                           
 11892 ;; *************** function _abs *****************
 11893 ;; Defined at:
 11894 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;  a               2   18[COMRAM] int 
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;		None
 11899 ;; Return value:  Size  Location     Type
 11900 ;;                  2   18[COMRAM] int 
 11901 ;; Registers used:
 11902 ;;		wreg, status,2, status,0
 11903 ;; Tracked objects:
 11904 ;;		On entry : 0/0
 11905 ;;		On exit  : 0/0
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11908 ;;      Params:         2       0       0       0       0       0       0
 11909 ;;      Locals:         0       0       0       0       0       0       0
 11910 ;;      Temps:          2       0       0       0       0       0       0
 11911 ;;      Totals:         4       0       0       0       0       0       0
 11912 ;;Total ram usage:        4 bytes
 11913 ;; Hardware stack levels used:    1
 11914 ;; This function calls:
 11915 ;;		Nothing
 11916 ;; This function is called by:
 11917 ;;		_dtoa
 11918 ;; This function uses a non-reentrant model
 11919 ;;
 11920                           
 11921                           	psect	text35
 11922  00592E                     __ptext35:
 11923                           	callstack 0
 11924  00592E                     _abs:
 11925                           	callstack 25
 11926  00592E  BE14               	btfsc	(abs@a+1)^0,7,c
 11927  005930  EFA4  F02C         	goto	u5290
 11928  005934  5014               	movf	(abs@a+1)^0,w,c
 11929  005936  E106               	bnz	u5291
 11930  005938  0413               	decf	abs@a^0,w,c
 11931  00593A  B0D8               	btfsc	status,0,c
 11932  00593C  EFA2  F02C         	goto	u5291
 11933  005940  EFA4  F02C         	goto	u5290
 11934  005944                     u5291:
 11935  005944  EFB2  F02C         	goto	l1164
 11936  005948                     u5290:
 11937  005948  C013  F015         	movff	abs@a,??_abs
 11938  00594C  C014  F016         	movff	abs@a+1,??_abs+1
 11939  005950  1E15               	comf	??_abs^0,f,c
 11940  005952  1E16               	comf	(??_abs+1)^0,f,c
 11941  005954  4A15               	infsnz	??_abs^0,f,c
 11942  005956  2A16               	incf	(??_abs+1)^0,f,c
 11943  005958  C015  F013         	movff	??_abs,?_abs
 11944  00595C  C016  F014         	movff	??_abs+1,?_abs+1
 11945  005960  EFB6  F02C         	goto	l1167
 11946  005964                     l1164:
 11947  005964  C013  F013         	movff	abs@a,?_abs
 11948  005968  C014  F014         	movff	abs@a+1,?_abs+1
 11949  00596C                     l1167:
 11950  00596C  0012               	return		;funcret
 11951  00596E                     __end_of_abs:
 11952                           	callstack 0
 11953                           
 11954 ;; *************** function ___aomod *****************
 11955 ;; Defined at:
 11956 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;  dividend        8    0[COMRAM] long long 
 11959 ;;  divisor         8    8[COMRAM] long long 
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;  sign            1   17[COMRAM] unsigned char 
 11962 ;;  counter         1   16[COMRAM] unsigned char 
 11963 ;; Return value:  Size  Location     Type
 11964 ;;                  8    0[COMRAM] long long 
 11965 ;; Registers used:
 11966 ;;		wreg, status,2, status,0
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 0/0
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11972 ;;      Params:        16       0       0       0       0       0       0
 11973 ;;      Locals:         2       0       0       0       0       0       0
 11974 ;;      Temps:          0       0       0       0       0       0       0
 11975 ;;      Totals:        18       0       0       0       0       0       0
 11976 ;;Total ram usage:       18 bytes
 11977 ;; Hardware stack levels used:    1
 11978 ;; This function calls:
 11979 ;;		Nothing
 11980 ;; This function is called by:
 11981 ;;		_dtoa
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           	psect	text36
 11986  0047F8                     __ptext36:
 11987                           	callstack 0
 11988  0047F8                     ___aomod:
 11989                           	callstack 25
 11990  0047F8  0E00               	movlw	0
 11991  0047FA  6E12               	movwf	___aomod@sign^0,c
 11992  0047FC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 11993  0047FE  EF05  F024         	goto	u4420
 11994  004802  EF03  F024         	goto	u4421
 11995  004806                     u4421:
 11996  004806  EF17  F024         	goto	l3891
 11997  00480A                     u4420:
 11998  00480A  1E08               	comf	(___aomod@dividend+7)^0,f,c
 11999  00480C  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12000  00480E  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12001  004810  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12002  004812  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12003  004814  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12004  004816  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12005  004818  6C01               	negf	___aomod@dividend^0,c
 12006  00481A  0E00               	movlw	0
 12007  00481C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12008  00481E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12009  004820  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12010  004822  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12011  004824  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12012  004826  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12013  004828  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12014  00482A  0E01               	movlw	1
 12015  00482C  6E12               	movwf	___aomod@sign^0,c
 12016  00482E                     l3891:
 12017  00482E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 12018  004830  EF1E  F024         	goto	u4430
 12019  004834  EF1C  F024         	goto	u4431
 12020  004838                     u4431:
 12021  004838  EF2E  F024         	goto	l3895
 12022  00483C                     u4430:
 12023  00483C  1E10               	comf	(___aomod@divisor+7)^0,f,c
 12024  00483E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 12025  004840  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 12026  004842  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 12027  004844  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 12028  004846  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 12029  004848  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 12030  00484A  6C09               	negf	___aomod@divisor^0,c
 12031  00484C  0E00               	movlw	0
 12032  00484E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 12033  004850  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 12034  004852  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 12035  004854  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 12036  004856  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 12037  004858  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 12038  00485A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 12039  00485C                     l3895:
 12040  00485C  5009               	movf	___aomod@divisor^0,w,c
 12041  00485E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 12042  004860  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 12043  004862  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 12044  004864  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 12045  004866  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 12046  004868  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 12047  00486A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 12048  00486C  B4D8               	btfsc	status,2,c
 12049  00486E  EF3B  F024         	goto	u4441
 12050  004872  EF3D  F024         	goto	u4440
 12051  004876                     u4441:
 12052  004876  EF85  F024         	goto	l3911
 12053  00487A                     u4440:
 12054  00487A  0E01               	movlw	1
 12055  00487C  6E11               	movwf	___aomod@counter^0,c
 12056  00487E  EF4B  F024         	goto	l3901
 12057  004882                     l3899:
 12058  004882  90D8               	bcf	status,0,c
 12059  004884  3609               	rlcf	___aomod@divisor^0,f,c
 12060  004886  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 12061  004888  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 12062  00488A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 12063  00488C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 12064  00488E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 12065  004890  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 12066  004892  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 12067  004894  2A11               	incf	___aomod@counter^0,f,c
 12068  004896                     l3901:
 12069  004896  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 12070  004898  EF50  F024         	goto	u4451
 12071  00489C  EF52  F024         	goto	u4450
 12072  0048A0                     u4451:
 12073  0048A0  EF41  F024         	goto	l3899
 12074  0048A4                     u4450:
 12075  0048A4                     l3903:
 12076  0048A4  5009               	movf	___aomod@divisor^0,w,c
 12077  0048A6  5C01               	subwf	___aomod@dividend^0,w,c
 12078  0048A8  500A               	movf	(___aomod@divisor+1)^0,w,c
 12079  0048AA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 12080  0048AC  500B               	movf	(___aomod@divisor+2)^0,w,c
 12081  0048AE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 12082  0048B0  500C               	movf	(___aomod@divisor+3)^0,w,c
 12083  0048B2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 12084  0048B4  500D               	movf	(___aomod@divisor+4)^0,w,c
 12085  0048B6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 12086  0048B8  500E               	movf	(___aomod@divisor+5)^0,w,c
 12087  0048BA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 12088  0048BC  500F               	movf	(___aomod@divisor+6)^0,w,c
 12089  0048BE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 12090  0048C0  5010               	movf	(___aomod@divisor+7)^0,w,c
 12091  0048C2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 12092  0048C4  A0D8               	btfss	status,0,c
 12093  0048C6  EF67  F024         	goto	u4461
 12094  0048CA  EF69  F024         	goto	u4460
 12095  0048CE                     u4461:
 12096  0048CE  EF79  F024         	goto	l3907
 12097  0048D2                     u4460:
 12098  0048D2  5009               	movf	___aomod@divisor^0,w,c
 12099  0048D4  5E01               	subwf	___aomod@dividend^0,f,c
 12100  0048D6  500A               	movf	(___aomod@divisor+1)^0,w,c
 12101  0048D8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 12102  0048DA  500B               	movf	(___aomod@divisor+2)^0,w,c
 12103  0048DC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 12104  0048DE  500C               	movf	(___aomod@divisor+3)^0,w,c
 12105  0048E0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 12106  0048E2  500D               	movf	(___aomod@divisor+4)^0,w,c
 12107  0048E4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 12108  0048E6  500E               	movf	(___aomod@divisor+5)^0,w,c
 12109  0048E8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 12110  0048EA  500F               	movf	(___aomod@divisor+6)^0,w,c
 12111  0048EC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 12112  0048EE  5010               	movf	(___aomod@divisor+7)^0,w,c
 12113  0048F0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 12114  0048F2                     l3907:
 12115  0048F2  90D8               	bcf	status,0,c
 12116  0048F4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 12117  0048F6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 12118  0048F8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 12119  0048FA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 12120  0048FC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 12121  0048FE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 12122  004900  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 12123  004902  3209               	rrcf	___aomod@divisor^0,f,c
 12124  004904  2E11               	decfsz	___aomod@counter^0,f,c
 12125  004906  EF52  F024         	goto	l3903
 12126  00490A                     l3911:
 12127  00490A  5012               	movf	___aomod@sign^0,w,c
 12128  00490C  B4D8               	btfsc	status,2,c
 12129  00490E  EF8B  F024         	goto	u4471
 12130  004912  EF8D  F024         	goto	u4470
 12131  004916                     u4471:
 12132  004916  EF9D  F024         	goto	l3915
 12133  00491A                     u4470:
 12134  00491A  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12135  00491C  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12136  00491E  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12137  004920  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12138  004922  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12139  004924  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12140  004926  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12141  004928  6C01               	negf	___aomod@dividend^0,c
 12142  00492A  0E00               	movlw	0
 12143  00492C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12144  00492E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12145  004930  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12146  004932  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12147  004934  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12148  004936  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12149  004938  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12150  00493A                     l3915:
 12151  00493A  C001  F001         	movff	___aomod@dividend,?___aomod
 12152  00493E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 12153  004942  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 12154  004946  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 12155  00494A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 12156  00494E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 12157  004952  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 12158  004956  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 12159  00495A  0012               	return		;funcret
 12160  00495C                     __end_of___aomod:
 12161                           	callstack 0
 12162                           
 12163 ;; *************** function ___aodiv *****************
 12164 ;; Defined at:
 12165 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
 12166 ;; Parameters:    Size  Location     Type
 12167 ;;  dividend        8    0[COMRAM] long long 
 12168 ;;  divisor         8    8[COMRAM] long long 
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;  quotient        8   18[COMRAM] long long 
 12171 ;;  sign            1   17[COMRAM] unsigned char 
 12172 ;;  counter         1   16[COMRAM] unsigned char 
 12173 ;; Return value:  Size  Location     Type
 12174 ;;                  8    0[COMRAM] long long 
 12175 ;; Registers used:
 12176 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12177 ;; Tracked objects:
 12178 ;;		On entry : 0/0
 12179 ;;		On exit  : 0/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12182 ;;      Params:        16       0       0       0       0       0       0
 12183 ;;      Locals:        10       0       0       0       0       0       0
 12184 ;;      Temps:          0       0       0       0       0       0       0
 12185 ;;      Totals:        26       0       0       0       0       0       0
 12186 ;;Total ram usage:       26 bytes
 12187 ;; Hardware stack levels used:    1
 12188 ;; This function calls:
 12189 ;;		Nothing
 12190 ;; This function is called by:
 12191 ;;		_dtoa
 12192 ;; This function uses a non-reentrant model
 12193 ;;
 12194                           
 12195                           	psect	text37
 12196  0044EA                     __ptext37:
 12197                           	callstack 0
 12198  0044EA                     ___aodiv:
 12199                           	callstack 25
 12200  0044EA  0E00               	movlw	0
 12201  0044EC  6E12               	movwf	___aodiv@sign^0,c
 12202  0044EE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 12203  0044F0  EF7E  F022         	goto	u4350
 12204  0044F4  EF7C  F022         	goto	u4351
 12205  0044F8                     u4351:
 12206  0044F8  EF90  F022         	goto	l3847
 12207  0044FC                     u4350:
 12208  0044FC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 12209  0044FE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 12210  004500  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 12211  004502  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 12212  004504  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 12213  004506  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 12214  004508  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 12215  00450A  6C09               	negf	___aodiv@divisor^0,c
 12216  00450C  0E00               	movlw	0
 12217  00450E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 12218  004510  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 12219  004512  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 12220  004514  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 12221  004516  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 12222  004518  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 12223  00451A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 12224  00451C  0E01               	movlw	1
 12225  00451E  6E12               	movwf	___aodiv@sign^0,c
 12226  004520                     l3847:
 12227  004520  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 12228  004522  EF97  F022         	goto	u4360
 12229  004526  EF95  F022         	goto	u4361
 12230  00452A                     u4361:
 12231  00452A  EFA9  F022         	goto	l3853
 12232  00452E                     u4360:
 12233  00452E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 12234  004530  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 12235  004532  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 12236  004534  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 12237  004536  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 12238  004538  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 12239  00453A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 12240  00453C  6C01               	negf	___aodiv@dividend^0,c
 12241  00453E  0E00               	movlw	0
 12242  004540  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 12243  004542  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 12244  004544  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 12245  004546  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 12246  004548  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 12247  00454A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 12248  00454C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 12249  00454E  0E01               	movlw	1
 12250  004550  1A12               	xorwf	___aodiv@sign^0,f,c
 12251  004552                     l3853:
 12252  004552  EE20  F013         	lfsr	2,___aodiv@quotient
 12253  004556  0E07               	movlw	7
 12254  004558                     u4371:
 12255  004558  6ADE               	clrf	postinc2,c
 12256  00455A  06E8               	decf	wreg,f,c
 12257  00455C  E2FD               	bc	u4371
 12258  00455E  5009               	movf	___aodiv@divisor^0,w,c
 12259  004560  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 12260  004562  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 12261  004564  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 12262  004566  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 12263  004568  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 12264  00456A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 12265  00456C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 12266  00456E  B4D8               	btfsc	status,2,c
 12267  004570  EFBC  F022         	goto	u4381
 12268  004574  EFBE  F022         	goto	u4380
 12269  004578                     u4381:
 12270  004578  EF10  F023         	goto	l3875
 12271  00457C                     u4380:
 12272  00457C  0E01               	movlw	1
 12273  00457E  6E11               	movwf	___aodiv@counter^0,c
 12274  004580  EFCC  F022         	goto	l3861
 12275  004584                     l3859:
 12276  004584  90D8               	bcf	status,0,c
 12277  004586  3609               	rlcf	___aodiv@divisor^0,f,c
 12278  004588  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 12279  00458A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 12280  00458C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 12281  00458E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 12282  004590  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 12283  004592  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 12284  004594  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 12285  004596  2A11               	incf	___aodiv@counter^0,f,c
 12286  004598                     l3861:
 12287  004598  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 12288  00459A  EFD1  F022         	goto	u4391
 12289  00459E  EFD3  F022         	goto	u4390
 12290  0045A2                     u4391:
 12291  0045A2  EFC2  F022         	goto	l3859
 12292  0045A6                     u4390:
 12293  0045A6                     l3863:
 12294  0045A6  90D8               	bcf	status,0,c
 12295  0045A8  3613               	rlcf	___aodiv@quotient^0,f,c
 12296  0045AA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 12297  0045AC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 12298  0045AE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 12299  0045B0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 12300  0045B2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 12301  0045B4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 12302  0045B6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 12303  0045B8  5009               	movf	___aodiv@divisor^0,w,c
 12304  0045BA  5C01               	subwf	___aodiv@dividend^0,w,c
 12305  0045BC  500A               	movf	(___aodiv@divisor+1)^0,w,c
 12306  0045BE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 12307  0045C0  500B               	movf	(___aodiv@divisor+2)^0,w,c
 12308  0045C2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 12309  0045C4  500C               	movf	(___aodiv@divisor+3)^0,w,c
 12310  0045C6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 12311  0045C8  500D               	movf	(___aodiv@divisor+4)^0,w,c
 12312  0045CA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 12313  0045CC  500E               	movf	(___aodiv@divisor+5)^0,w,c
 12314  0045CE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 12315  0045D0  500F               	movf	(___aodiv@divisor+6)^0,w,c
 12316  0045D2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 12317  0045D4  5010               	movf	(___aodiv@divisor+7)^0,w,c
 12318  0045D6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 12319  0045D8  A0D8               	btfss	status,0,c
 12320  0045DA  EFF1  F022         	goto	u4401
 12321  0045DE  EFF3  F022         	goto	u4400
 12322  0045E2                     u4401:
 12323  0045E2  EF04  F023         	goto	l3871
 12324  0045E6                     u4400:
 12325  0045E6  5009               	movf	___aodiv@divisor^0,w,c
 12326  0045E8  5E01               	subwf	___aodiv@dividend^0,f,c
 12327  0045EA  500A               	movf	(___aodiv@divisor+1)^0,w,c
 12328  0045EC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 12329  0045EE  500B               	movf	(___aodiv@divisor+2)^0,w,c
 12330  0045F0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 12331  0045F2  500C               	movf	(___aodiv@divisor+3)^0,w,c
 12332  0045F4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 12333  0045F6  500D               	movf	(___aodiv@divisor+4)^0,w,c
 12334  0045F8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 12335  0045FA  500E               	movf	(___aodiv@divisor+5)^0,w,c
 12336  0045FC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 12337  0045FE  500F               	movf	(___aodiv@divisor+6)^0,w,c
 12338  004600  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 12339  004602  5010               	movf	(___aodiv@divisor+7)^0,w,c
 12340  004604  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 12341  004606  8013               	bsf	___aodiv@quotient^0,0,c
 12342  004608                     l3871:
 12343  004608  90D8               	bcf	status,0,c
 12344  00460A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 12345  00460C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 12346  00460E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 12347  004610  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 12348  004612  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 12349  004614  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 12350  004616  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 12351  004618  3209               	rrcf	___aodiv@divisor^0,f,c
 12352  00461A  2E11               	decfsz	___aodiv@counter^0,f,c
 12353  00461C  EFD3  F022         	goto	l3863
 12354  004620                     l3875:
 12355  004620  5012               	movf	___aodiv@sign^0,w,c
 12356  004622  B4D8               	btfsc	status,2,c
 12357  004624  EF16  F023         	goto	u4411
 12358  004628  EF18  F023         	goto	u4410
 12359  00462C                     u4411:
 12360  00462C  EF28  F023         	goto	l3879
 12361  004630                     u4410:
 12362  004630  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 12363  004632  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 12364  004634  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 12365  004636  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 12366  004638  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 12367  00463A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 12368  00463C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 12369  00463E  6C13               	negf	___aodiv@quotient^0,c
 12370  004640  0E00               	movlw	0
 12371  004642  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 12372  004644  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 12373  004646  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 12374  004648  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 12375  00464A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 12376  00464C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 12377  00464E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 12378  004650                     l3879:
 12379  004650  C013  F001         	movff	___aodiv@quotient,?___aodiv
 12380  004654  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 12381  004658  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 12382  00465C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 12383  004660  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 12384  004664  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 12385  004668  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 12386  00466C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 12387  004670  0012               	return		;funcret
 12388  004672                     __end_of___aodiv:
 12389                           	callstack 0
 12390                           
 12391 ;; *************** function _ctoa *****************
 12392 ;; Defined at:
 12393 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
 12396 ;;		 -> vsnprintf@f(6), 
 12397 ;;  c               1   11[COMRAM] unsigned char 
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;  w               2   15[COMRAM] int 
 12400 ;;  l               2   13[COMRAM] int 
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  2    9[COMRAM] int 
 12403 ;; Registers used:
 12404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12410 ;;      Params:         3       0       0       0       0       0       0
 12411 ;;      Locals:         4       0       0       0       0       0       0
 12412 ;;      Temps:          1       0       0       0       0       0       0
 12413 ;;      Totals:         8       0       0       0       0       0       0
 12414 ;;Total ram usage:        8 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; Hardware stack levels required when called:    2
 12417 ;; This function calls:
 12418 ;;		_fputc
 12419 ;; This function is called by:
 12420 ;;		_vfpfcnvrt
 12421 ;; This function uses a non-reentrant model
 12422 ;;
 12423                           
 12424                           	psect	text38
 12425  004F8A                     __ptext38:
 12426                           	callstack 0
 12427  004F8A                     _ctoa:
 12428                           	callstack 24
 12429  004F8A                     
 12430                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 12431  004F8A  0100               	movlb	0	; () banked
 12432  004F8C  51EB               	movf	_width& (0+255),w,b
 12433  004F8E  11EC               	iorwf	(_width+1)& (0+255),w,b
 12434  004F90  A4D8               	btfss	status,2,c
 12435  004F92  EFCD  F027         	goto	u5611
 12436  004F96  EFCF  F027         	goto	u5610
 12437  004F9A                     u5611:
 12438  004F9A  EFD5  F027         	goto	l4525
 12439  004F9E                     u5610:
 12440  004F9E                     
 12441                           ; BSR set to: 0
 12442  004F9E  C0EB  F010         	movff	_width,ctoa@w
 12443  004FA2  C0EC  F011         	movff	_width+1,ctoa@w+1
 12444  004FA6  EFDB  F027         	goto	l4527
 12445  004FAA                     l4525:
 12446                           
 12447                           ; BSR set to: 0
 12448  004FAA  0EFF               	movlw	255
 12449  004FAC  25EB               	addwf	_width& (0+255),w,b
 12450  004FAE  6E10               	movwf	ctoa@w^0,c
 12451  004FB0  0EFF               	movlw	255
 12452  004FB2  21EC               	addwfc	(_width+1)& (0+255),w,b
 12453  004FB4  6E11               	movwf	(ctoa@w+1)^0,c
 12454  004FB6                     l4527:
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 12458  004FB6  A1EF               	btfss	_flags& (0+255),0,b
 12459  004FB8  EFE0  F027         	goto	u5621
 12460  004FBC  EFE2  F027         	goto	u5620
 12461  004FC0                     u5621:
 12462  004FC0  EFEB  F027         	goto	l4531
 12463  004FC4                     u5620:
 12464  004FC4                     
 12465                           ; BSR set to: 0
 12466                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 12467  004FC4  C00C  F001         	movff	ctoa@c,fputc@c
 12468  004FC8  6A02               	clrf	(fputc@c+1)^0,c
 12469  004FCA  C00A  F003         	movff	ctoa@fp,fputc@fp
 12470  004FCE  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
 12471  004FD2  EC99  F028         	call	_fputc	;wreg free
 12472  004FD6                     l4531:
 12473                           
 12474                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 12475  004FD6  BE11               	btfsc	(ctoa@w+1)^0,7,c
 12476  004FD8  EFF0  F027         	goto	u5631
 12477  004FDC  EFF2  F027         	goto	u5630
 12478  004FE0                     u5631:
 12479  004FE0  EFF4  F027         	goto	l4535
 12480  004FE4                     u5630:
 12481  004FE4  EFF8  F027         	goto	l849
 12482  004FE8                     l4535:
 12483  004FE8  0E00               	movlw	0
 12484  004FEA  6E11               	movwf	(ctoa@w+1)^0,c
 12485  004FEC  0E00               	movlw	0
 12486  004FEE  6E10               	movwf	ctoa@w^0,c
 12487  004FF0                     l849:
 12488                           
 12489                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 12490  004FF0  0E00               	movlw	0
 12491  004FF2  6E0F               	movwf	(ctoa@l+1)^0,c
 12492  004FF4  0E00               	movlw	0
 12493  004FF6  6E0E               	movwf	ctoa@l^0,c
 12494                           
 12495                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 12496  004FF8  EF0A  F028         	goto	l4541
 12497  004FFC                     l4537:
 12498                           
 12499                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 12500  004FFC  0E00               	movlw	0
 12501  004FFE  6E02               	movwf	(fputc@c+1)^0,c
 12502  005000  0E20               	movlw	32
 12503  005002  6E01               	movwf	fputc@c^0,c
 12504  005004  C00A  F003         	movff	ctoa@fp,fputc@fp
 12505  005008  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
 12506  00500C  EC99  F028         	call	_fputc	;wreg free
 12507  005010                     
 12508                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
 12509  005010  4A0E               	infsnz	ctoa@l^0,f,c
 12510  005012  2A0F               	incf	(ctoa@l+1)^0,f,c
 12511  005014                     l4541:
 12512                           
 12513                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 12514  005014  5010               	movf	ctoa@w^0,w,c
 12515  005016  5C0E               	subwf	ctoa@l^0,w,c
 12516  005018  500F               	movf	(ctoa@l+1)^0,w,c
 12517  00501A  0A80               	xorlw	128
 12518  00501C  6E0D               	movwf	??_ctoa^0,c
 12519  00501E  5011               	movf	(ctoa@w+1)^0,w,c
 12520  005020  0A80               	xorlw	128
 12521  005022  580D               	subwfb	??_ctoa^0,w,c
 12522  005024  A0D8               	btfss	status,0,c
 12523  005026  EF17  F028         	goto	u5641
 12524  00502A  EF19  F028         	goto	u5640
 12525  00502E                     u5641:
 12526  00502E  EFFE  F027         	goto	l4537
 12527  005032                     u5640:
 12528  005032                     
 12529                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 12530  005032  0100               	movlb	0	; () banked
 12531  005034  B1EF               	btfsc	_flags& (0+255),0,b
 12532  005036  EF1F  F028         	goto	u5651
 12533  00503A  EF21  F028         	goto	u5650
 12534  00503E                     u5651:
 12535  00503E  EF2A  F028         	goto	l4545
 12536  005042                     u5650:
 12537  005042                     
 12538                           ; BSR set to: 0
 12539                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 12540  005042  C00C  F001         	movff	ctoa@c,fputc@c
 12541  005046  6A02               	clrf	(fputc@c+1)^0,c
 12542  005048  C00A  F003         	movff	ctoa@fp,fputc@fp
 12543  00504C  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
 12544  005050  EC99  F028         	call	_fputc	;wreg free
 12545  005054                     l4545:
 12546                           
 12547                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 12548  005054  0E01               	movlw	1
 12549  005056  240E               	addwf	ctoa@l^0,w,c
 12550  005058  6E0A               	movwf	?_ctoa^0,c
 12551  00505A  0E00               	movlw	0
 12552  00505C  200F               	addwfc	(ctoa@l+1)^0,w,c
 12553  00505E  6E0B               	movwf	(?_ctoa+1)^0,c
 12554  005060  0012               	return		;funcret
 12555  005062                     __end_of_ctoa:
 12556                           	callstack 0
 12557                           
 12558 ;; *************** function _fputc *****************
 12559 ;; Defined at:
 12560 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
 12561 ;; Parameters:    Size  Location     Type
 12562 ;;  c               2    0[COMRAM] int 
 12563 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12564 ;;		 -> vsnprintf@f(6), 
 12565 ;; Auto vars:     Size  Location     Type
 12566 ;;		None
 12567 ;; Return value:  Size  Location     Type
 12568 ;;                  2    0[COMRAM] int 
 12569 ;; Registers used:
 12570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12571 ;; Tracked objects:
 12572 ;;		On entry : 0/0
 12573 ;;		On exit  : 0/0
 12574 ;;		Unchanged: 0/0
 12575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12576 ;;      Params:         4       0       0       0       0       0       0
 12577 ;;      Locals:         0       0       0       0       0       0       0
 12578 ;;      Temps:          5       0       0       0       0       0       0
 12579 ;;      Totals:         9       0       0       0       0       0       0
 12580 ;;Total ram usage:        9 bytes
 12581 ;; Hardware stack levels used:    1
 12582 ;; Hardware stack levels required when called:    1
 12583 ;; This function calls:
 12584 ;;		_putch
 12585 ;; This function is called by:
 12586 ;;		_pad
 12587 ;;		_ctoa
 12588 ;;		_stoa
 12589 ;;		_vfpfcnvrt
 12590 ;;		_fputs
 12591 ;; This function uses a non-reentrant model
 12592 ;;
 12593                           
 12594                           	psect	text39
 12595  005132                     __ptext39:
 12596                           	callstack 0
 12597  005132                     _fputc:
 12598                           	callstack 22
 12599  005132  5003               	movf	fputc@fp^0,w,c
 12600  005134  1004               	iorwf	(fputc@fp+1)^0,w,c
 12601  005136  B4D8               	btfsc	status,2,c
 12602  005138  EFA0  F028         	goto	u3861
 12603  00513C  EFA2  F028         	goto	u3860
 12604  005140                     u3861:
 12605  005140  EFAB  F028         	goto	l3595
 12606  005144                     u3860:
 12607  005144  5003               	movf	fputc@fp^0,w,c
 12608  005146  1004               	iorwf	(fputc@fp+1)^0,w,c
 12609  005148  A4D8               	btfss	status,2,c
 12610  00514A  EFA9  F028         	goto	u3871
 12611  00514E  EFAB  F028         	goto	u3870
 12612  005152                     u3871:
 12613  005152  EFB0  F028         	goto	l3597
 12614  005156                     u3870:
 12615  005156                     l3595:
 12616  005156  5001               	movf	fputc@c^0,w,c
 12617  005158  ECBB  F02D         	call	_putch
 12618  00515C  EFFD  F028         	goto	l1251
 12619  005160                     l3597:
 12620  005160  EE20 F004          	lfsr	2,4
 12621  005164  5003               	movf	fputc@fp^0,w,c
 12622  005166  26D9               	addwf	fsr2l,f,c
 12623  005168  5004               	movf	(fputc@fp+1)^0,w,c
 12624  00516A  22DA               	addwfc	fsr2h,f,c
 12625  00516C  50DE               	movf	postinc2,w,c
 12626  00516E  10DE               	iorwf	postinc2,w,c
 12627  005170  B4D8               	btfsc	status,2,c
 12628  005172  EFBD  F028         	goto	u3881
 12629  005176  EFBF  F028         	goto	u3880
 12630  00517A                     u3881:
 12631  00517A  EFDA  F028         	goto	l3601
 12632  00517E                     u3880:
 12633  00517E  EE20 F004          	lfsr	2,4
 12634  005182  5003               	movf	fputc@fp^0,w,c
 12635  005184  26D9               	addwf	fsr2l,f,c
 12636  005186  5004               	movf	(fputc@fp+1)^0,w,c
 12637  005188  22DA               	addwfc	fsr2h,f,c
 12638  00518A  EE10 F002          	lfsr	1,2
 12639  00518E  5003               	movf	fputc@fp^0,w,c
 12640  005190  26E1               	addwf	fsr1l,f,c
 12641  005192  5004               	movf	(fputc@fp+1)^0,w,c
 12642  005194  22E2               	addwfc	fsr1h,f,c
 12643  005196  50DE               	movf	postinc2,w,c
 12644  005198  5CE6               	subwf	postinc1,w,c
 12645  00519A  50E6               	movf	postinc1,w,c
 12646  00519C  0A80               	xorlw	128
 12647  00519E  6E09               	movwf	(??_fputc+4)^0,c
 12648  0051A0  50DE               	movf	postinc2,w,c
 12649  0051A2  0A80               	xorlw	128
 12650  0051A4  5809               	subwfb	(??_fputc+4)^0,w,c
 12651  0051A6  B0D8               	btfsc	status,0,c
 12652  0051A8  EFD8  F028         	goto	u3891
 12653  0051AC  EFDA  F028         	goto	u3890
 12654  0051B0                     u3891:
 12655  0051B0  EFFD  F028         	goto	l1251
 12656  0051B4                     u3890:
 12657  0051B4                     l3601:
 12658  0051B4  EE20 F002          	lfsr	2,2
 12659  0051B8  5003               	movf	fputc@fp^0,w,c
 12660  0051BA  26D9               	addwf	fsr2l,f,c
 12661  0051BC  5004               	movf	(fputc@fp+1)^0,w,c
 12662  0051BE  22DA               	addwfc	fsr2h,f,c
 12663  0051C0  CFDE F005          	movff	postinc2,??_fputc
 12664  0051C4  CFDD F006          	movff	postdec2,??_fputc+1
 12665  0051C8  C003  FFD9         	movff	fputc@fp,fsr2l
 12666  0051CC  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12667  0051D0  CFDE F007          	movff	postinc2,??_fputc+2
 12668  0051D4  CFDD F008          	movff	postdec2,??_fputc+3
 12669  0051D8  5005               	movf	??_fputc^0,w,c
 12670  0051DA  2407               	addwf	(??_fputc+2)^0,w,c
 12671  0051DC  6ED9               	movwf	fsr2l,c
 12672  0051DE  5006               	movf	(??_fputc+1)^0,w,c
 12673  0051E0  2008               	addwfc	(??_fputc+3)^0,w,c
 12674  0051E2  6EDA               	movwf	fsr2h,c
 12675  0051E4  C001  FFDF         	movff	fputc@c,indf2
 12676  0051E8  EE20 F002          	lfsr	2,2
 12677  0051EC  5003               	movf	fputc@fp^0,w,c
 12678  0051EE  26D9               	addwf	fsr2l,f,c
 12679  0051F0  5004               	movf	(fputc@fp+1)^0,w,c
 12680  0051F2  22DA               	addwfc	fsr2h,f,c
 12681  0051F4  2ADE               	incf	postinc2,f,c
 12682  0051F6  0E00               	movlw	0
 12683  0051F8  22DD               	addwfc	postdec2,f,c
 12684  0051FA                     l1251:
 12685  0051FA  0012               	return		;funcret
 12686  0051FC                     __end_of_fputc:
 12687                           	callstack 0
 12688                           
 12689 ;; *************** function _putch *****************
 12690 ;; Defined at:
 12691 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;  c               1    wreg     unsigned char 
 12694 ;; Auto vars:     Size  Location     Type
 12695 ;;  c               1    0[COMRAM] unsigned char 
 12696 ;; Return value:  Size  Location     Type
 12697 ;;                  1    wreg      void 
 12698 ;; Registers used:
 12699 ;;		wreg
 12700 ;; Tracked objects:
 12701 ;;		On entry : 0/0
 12702 ;;		On exit  : 0/0
 12703 ;;		Unchanged: 0/0
 12704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12705 ;;      Params:         0       0       0       0       0       0       0
 12706 ;;      Locals:         0       0       0       0       0       0       0
 12707 ;;      Temps:          0       0       0       0       0       0       0
 12708 ;;      Totals:         0       0       0       0       0       0       0
 12709 ;;Total ram usage:        0 bytes
 12710 ;; Hardware stack levels used:    1
 12711 ;; This function calls:
 12712 ;;		Nothing
 12713 ;; This function is called by:
 12714 ;;		_fputc
 12715 ;; This function uses a non-reentrant model
 12716 ;;
 12717                           
 12718                           	psect	text40
 12719  005B76                     __ptext40:
 12720                           	callstack 0
 12721  005B76                     _putch:
 12722                           	callstack 22
 12723  005B76  0012               	return		;funcret
 12724  005B78                     __end_of_putch:
 12725                           	callstack 0
 12726                           
 12727 ;; *************** function _atoi *****************
 12728 ;; Defined at:
 12729 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;  s               2    7[COMRAM] PTR const unsigned char 
 12732 ;;		 -> STR_6(3), STR_5(3), 
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;  n               2   20[COMRAM] int 
 12735 ;;  neg             2   13[COMRAM] int 
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  2    7[COMRAM] int 
 12738 ;; Registers used:
 12739 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12745 ;;      Params:         2       0       0       0       0       0       0
 12746 ;;      Locals:         9       0       0       0       0       0       0
 12747 ;;      Temps:          4       0       0       0       0       0       0
 12748 ;;      Totals:        15       0       0       0       0       0       0
 12749 ;;Total ram usage:       15 bytes
 12750 ;; Hardware stack levels used:    1
 12751 ;; Hardware stack levels required when called:    1
 12752 ;; This function calls:
 12753 ;;		___wmul
 12754 ;;		_isdigit
 12755 ;;		_isspace
 12756 ;; This function is called by:
 12757 ;;		_vfpfcnvrt
 12758 ;; This function uses a non-reentrant model
 12759 ;;
 12760                           
 12761                           	psect	text41
 12762  00435A                     __ptext41:
 12763                           	callstack 0
 12764  00435A                     _atoi:
 12765                           	callstack 25
 12766  00435A  0E00               	movlw	0
 12767  00435C  6E16               	movwf	(atoi@n+1)^0,c
 12768  00435E  0E00               	movlw	0
 12769  004360  6E15               	movwf	atoi@n^0,c
 12770  004362  0E00               	movlw	0
 12771  004364  6E0F               	movwf	(atoi@neg+1)^0,c
 12772  004366  0E00               	movlw	0
 12773  004368  6E0E               	movwf	atoi@neg^0,c
 12774  00436A  EFB9  F021         	goto	l5115
 12775  00436E                     l5113:
 12776  00436E  4A08               	infsnz	atoi@s^0,f,c
 12777  004370  2A09               	incf	(atoi@s+1)^0,f,c
 12778  004372                     l5115:
 12779  004372  0E01               	movlw	1
 12780  004374  6E14               	movwf	_atoi$1275^0,c
 12781  004376  C008  FFF6         	movff	atoi@s,tblptrl
 12782  00437A  C009  FFF7         	movff	atoi@s+1,tblptrh
 12783  00437E                     	if	0	;tblptru may be non-zero
 12784  00437E                     	endif
 12785  00437E                     	if	0	;tblptru may be non-zero
 12786  00437E                     	endif
 12787  00437E  0008               	tblrd		*
 12788  004380  50F5               	movf	tablat,w,c
 12789  004382  0A20               	xorlw	32
 12790  004384  B4D8               	btfsc	status,2,c
 12791  004386  EFC7  F021         	goto	u6781
 12792  00438A  EFC9  F021         	goto	u6780
 12793  00438E                     u6781:
 12794  00438E  EFE6  F021         	goto	l5123
 12795  004392                     u6780:
 12796  004392  0EF7               	movlw	247
 12797  004394  6E0A               	movwf	??_atoi^0,c
 12798  004396  0EFF               	movlw	255
 12799  004398  6E0B               	movwf	(??_atoi+1)^0,c
 12800  00439A  C008  FFF6         	movff	atoi@s,tblptrl
 12801  00439E  C009  FFF7         	movff	atoi@s+1,tblptrh
 12802  0043A2                     	if	0	;tblptru may be non-zero
 12803  0043A2                     	endif
 12804  0043A2                     	if	0	;tblptru may be non-zero
 12805  0043A2                     	endif
 12806  0043A2  0008               	tblrd		*
 12807  0043A4  50F5               	movf	tablat,w,c
 12808  0043A6  6E0C               	movwf	(??_atoi+2)^0,c
 12809  0043A8  6A0D               	clrf	(??_atoi+3)^0,c
 12810  0043AA  500A               	movf	??_atoi^0,w,c
 12811  0043AC  260C               	addwf	(??_atoi+2)^0,f,c
 12812  0043AE  500B               	movf	(??_atoi+1)^0,w,c
 12813  0043B0  220D               	addwfc	(??_atoi+3)^0,f,c
 12814  0043B2  500D               	movf	(??_atoi+3)^0,w,c
 12815  0043B4  E109               	bnz	u6790
 12816  0043B6  0E05               	movlw	5
 12817  0043B8  5C0C               	subwf	(??_atoi+2)^0,w,c
 12818  0043BA  A0D8               	btfss	status,0,c
 12819  0043BC  EFE2  F021         	goto	u6791
 12820  0043C0  EFE4  F021         	goto	u6790
 12821  0043C4                     u6791:
 12822  0043C4  EFE6  F021         	goto	l5123
 12823  0043C8                     u6790:
 12824  0043C8  0E00               	movlw	0
 12825  0043CA  6E14               	movwf	_atoi$1275^0,c
 12826  0043CC                     l5123:
 12827  0043CC  C014  F010         	movff	_atoi$1275,_atoi$1274
 12828  0043D0  6A11               	clrf	(_atoi$1274+1)^0,c
 12829  0043D2  5010               	movf	_atoi$1274^0,w,c
 12830  0043D4  1011               	iorwf	(_atoi$1274+1)^0,w,c
 12831  0043D6  A4D8               	btfss	status,2,c
 12832  0043D8  EFF0  F021         	goto	u6801
 12833  0043DC  EFF2  F021         	goto	u6800
 12834  0043E0                     u6801:
 12835  0043E0  EFB7  F021         	goto	l5113
 12836  0043E4                     u6800:
 12837  0043E4  EFFC  F021         	goto	l5133
 12838  0043E8                     l5129:
 12839  0043E8  0E00               	movlw	0
 12840  0043EA  6E0F               	movwf	(atoi@neg+1)^0,c
 12841  0043EC  0E01               	movlw	1
 12842  0043EE  6E0E               	movwf	atoi@neg^0,c
 12843  0043F0                     l5131:
 12844  0043F0  4A08               	infsnz	atoi@s^0,f,c
 12845  0043F2  2A09               	incf	(atoi@s+1)^0,f,c
 12846  0043F4  EF31  F022         	goto	l5139
 12847  0043F8                     l5133:
 12848  0043F8  C008  FFF6         	movff	atoi@s,tblptrl
 12849  0043FC  C009  FFF7         	movff	atoi@s+1,tblptrh
 12850  004400                     	if	0	;tblptru may be non-zero
 12851  004400                     	endif
 12852  004400                     	if	0	;tblptru may be non-zero
 12853  004400                     	endif
 12854  004400  0008               	tblrd		*
 12855  004402  50F5               	movf	tablat,w,c
 12856  004404  6E0A               	movwf	??_atoi^0,c
 12857  004406  6A0B               	clrf	(??_atoi+1)^0,c
 12858                           
 12859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12860                           ; Switch size 1, requested type "simple"
 12861                           ; Number of cases is 1, Range of values is 0 to 0
 12862                           ; switch strategies available:
 12863                           ; Name         Instructions Cycles
 12864                           ; simple_byte            4     3 (average)
 12865                           ;	Chosen strategy is simple_byte
 12866  004408  500B               	movf	(??_atoi+1)^0,w,c
 12867  00440A  0A00               	xorlw	0	; case 0
 12868  00440C  B4D8               	btfsc	status,2,c
 12869  00440E  EF0B  F022         	goto	l5847
 12870  004412  EF31  F022         	goto	l5139
 12871  004416                     l5847:
 12872                           
 12873                           ; Switch size 1, requested type "simple"
 12874                           ; Number of cases is 2, Range of values is 43 to 45
 12875                           ; switch strategies available:
 12876                           ; Name         Instructions Cycles
 12877                           ; simple_byte            7     4 (average)
 12878                           ;	Chosen strategy is simple_byte
 12879  004416  500A               	movf	??_atoi^0,w,c
 12880  004418  0A2B               	xorlw	43	; case 43
 12881  00441A  B4D8               	btfsc	status,2,c
 12882  00441C  EFF8  F021         	goto	l5131
 12883  004420  0A06               	xorlw	6	; case 45
 12884  004422  B4D8               	btfsc	status,2,c
 12885  004424  EFF4  F021         	goto	l5129
 12886  004428  EF31  F022         	goto	l5139
 12887  00442C                     l5135:
 12888  00442C  C015  F001         	movff	atoi@n,___wmul@multiplier
 12889  004430  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 12890  004434  0E00               	movlw	0
 12891  004436  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12892  004438  0E0A               	movlw	10
 12893  00443A  6E03               	movwf	___wmul@multiplicand^0,c
 12894  00443C  EC94  F02D         	call	___wmul	;wreg free
 12895  004440  C008  FFF6         	movff	atoi@s,tblptrl
 12896  004444  C009  FFF7         	movff	atoi@s+1,tblptrh
 12897  004448                     	if	0	;tblptru may be non-zero
 12898  004448                     	endif
 12899  004448                     	if	0	;tblptru may be non-zero
 12900  004448                     	endif
 12901  004448  0008               	tblrd		*
 12902  00444A  50F5               	movf	tablat,w,c
 12903  00444C  5E01               	subwf	?___wmul^0,f,c
 12904  00444E  0E00               	movlw	0
 12905  004450  5A02               	subwfb	(?___wmul+1)^0,f,c
 12906  004452  0E30               	movlw	48
 12907  004454  2401               	addwf	?___wmul^0,w,c
 12908  004456  6E15               	movwf	atoi@n^0,c
 12909  004458  0E00               	movlw	0
 12910  00445A  2002               	addwfc	(?___wmul+1)^0,w,c
 12911  00445C  6E16               	movwf	(atoi@n+1)^0,c
 12912  00445E  EFF8  F021         	goto	l5131
 12913  004462                     l5139:
 12914  004462  0ED0               	movlw	208
 12915  004464  6E0A               	movwf	??_atoi^0,c
 12916  004466  0EFF               	movlw	255
 12917  004468  6E0B               	movwf	(??_atoi+1)^0,c
 12918  00446A  C008  FFF6         	movff	atoi@s,tblptrl
 12919  00446E  C009  FFF7         	movff	atoi@s+1,tblptrh
 12920  004472                     	if	0	;tblptru may be non-zero
 12921  004472                     	endif
 12922  004472                     	if	0	;tblptru may be non-zero
 12923  004472                     	endif
 12924  004472  0008               	tblrd		*
 12925  004474  50F5               	movf	tablat,w,c
 12926  004476  6E0C               	movwf	(??_atoi+2)^0,c
 12927  004478  6A0D               	clrf	(??_atoi+3)^0,c
 12928  00447A  500A               	movf	??_atoi^0,w,c
 12929  00447C  260C               	addwf	(??_atoi+2)^0,f,c
 12930  00447E  500B               	movf	(??_atoi+1)^0,w,c
 12931  004480  220D               	addwfc	(??_atoi+3)^0,f,c
 12932  004482  500D               	movf	(??_atoi+3)^0,w,c
 12933  004484  E10A               	bnz	u6810
 12934  004486  0E0A               	movlw	10
 12935  004488  5C0C               	subwf	(??_atoi+2)^0,w,c
 12936  00448A  A0D8               	btfss	status,0,c
 12937  00448C  EF4A  F022         	goto	u6811
 12938  004490  EF4D  F022         	goto	u6810
 12939  004494                     u6811:
 12940  004494  0E01               	movlw	1
 12941  004496  EF4E  F022         	goto	u6820
 12942  00449A                     u6810:
 12943  00449A  0E00               	movlw	0
 12944  00449C                     u6820:
 12945  00449C  6E12               	movwf	_atoi$1276^0,c
 12946  00449E  6A13               	clrf	(_atoi$1276+1)^0,c
 12947  0044A0  5012               	movf	_atoi$1276^0,w,c
 12948  0044A2  1013               	iorwf	(_atoi$1276+1)^0,w,c
 12949  0044A4  A4D8               	btfss	status,2,c
 12950  0044A6  EF57  F022         	goto	u6831
 12951  0044AA  EF59  F022         	goto	u6830
 12952  0044AE                     u6831:
 12953  0044AE  EF16  F022         	goto	l5135
 12954  0044B2                     u6830:
 12955  0044B2  500E               	movf	atoi@neg^0,w,c
 12956  0044B4  100F               	iorwf	(atoi@neg+1)^0,w,c
 12957  0044B6  A4D8               	btfss	status,2,c
 12958  0044B8  EF60  F022         	goto	u6841
 12959  0044BC  EF62  F022         	goto	u6840
 12960  0044C0                     u6841:
 12961  0044C0  EF70  F022         	goto	l1195
 12962  0044C4                     u6840:
 12963  0044C4  C015  F00A         	movff	atoi@n,??_atoi
 12964  0044C8  C016  F00B         	movff	atoi@n+1,??_atoi+1
 12965  0044CC  1E0A               	comf	??_atoi^0,f,c
 12966  0044CE  1E0B               	comf	(??_atoi+1)^0,f,c
 12967  0044D0  4A0A               	infsnz	??_atoi^0,f,c
 12968  0044D2  2A0B               	incf	(??_atoi+1)^0,f,c
 12969  0044D4  C00A  F008         	movff	??_atoi,?_atoi
 12970  0044D8  C00B  F009         	movff	??_atoi+1,?_atoi+1
 12971  0044DC  EF74  F022         	goto	l1198
 12972  0044E0                     l1195:
 12973  0044E0  C015  F008         	movff	atoi@n,?_atoi
 12974  0044E4  C016  F009         	movff	atoi@n+1,?_atoi+1
 12975  0044E8                     l1198:
 12976  0044E8  0012               	return		;funcret
 12977  0044EA                     __end_of_atoi:
 12978                           	callstack 0
 12979                           
 12980 ;; *************** function _isspace *****************
 12981 ;; Defined at:
 12982 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
 12983 ;; Parameters:    Size  Location     Type
 12984 ;;  c               2    0[COMRAM] int 
 12985 ;; Auto vars:     Size  Location     Type
 12986 ;;		None
 12987 ;; Return value:  Size  Location     Type
 12988 ;;                  2    0[COMRAM] int 
 12989 ;; Registers used:
 12990 ;;		wreg, status,2, status,0
 12991 ;; Tracked objects:
 12992 ;;		On entry : 0/0
 12993 ;;		On exit  : 0/0
 12994 ;;		Unchanged: 0/0
 12995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12996 ;;      Params:         2       0       0       0       0       0       0
 12997 ;;      Locals:         1       0       0       0       0       0       0
 12998 ;;      Temps:          4       0       0       0       0       0       0
 12999 ;;      Totals:         7       0       0       0       0       0       0
 13000 ;;Total ram usage:        7 bytes
 13001 ;; Hardware stack levels used:    1
 13002 ;; This function calls:
 13003 ;;		Nothing
 13004 ;; This function is called by:
 13005 ;;		_atoi
 13006 ;; This function uses a non-reentrant model
 13007 ;;
 13008                           
 13009                           	psect	text42
 13010  005810                     __ptext42:
 13011                           	callstack 0
 13012  005810                     _isspace:
 13013                           	callstack 25
 13014  005810  0E01               	movlw	1
 13015  005812  6E07               	movwf	_isspace$1315^0,c
 13016  005814  0E20               	movlw	32
 13017  005816  1801               	xorwf	isspace@c^0,w,c
 13018  005818  1002               	iorwf	(isspace@c+1)^0,w,c
 13019  00581A  B4D8               	btfsc	status,2,c
 13020  00581C  EF12  F02C         	goto	u5591
 13021  005820  EF14  F02C         	goto	u5590
 13022  005824                     u5591:
 13023  005824  EF2D  F02C         	goto	l4517
 13024  005828                     u5590:
 13025  005828  0EF7               	movlw	247
 13026  00582A  6E03               	movwf	??_isspace^0,c
 13027  00582C  0EFF               	movlw	255
 13028  00582E  6E04               	movwf	(??_isspace+1)^0,c
 13029  005830  C001  F005         	movff	isspace@c,??_isspace+2
 13030  005834  C002  F006         	movff	isspace@c+1,??_isspace+3
 13031  005838  5003               	movf	??_isspace^0,w,c
 13032  00583A  2605               	addwf	(??_isspace+2)^0,f,c
 13033  00583C  5004               	movf	(??_isspace+1)^0,w,c
 13034  00583E  2206               	addwfc	(??_isspace+3)^0,f,c
 13035  005840  5006               	movf	(??_isspace+3)^0,w,c
 13036  005842  E109               	bnz	u5600
 13037  005844  0E05               	movlw	5
 13038  005846  5C05               	subwf	(??_isspace+2)^0,w,c
 13039  005848  A0D8               	btfss	status,0,c
 13040  00584A  EF29  F02C         	goto	u5601
 13041  00584E  EF2B  F02C         	goto	u5600
 13042  005852                     u5601:
 13043  005852  EF2D  F02C         	goto	l4517
 13044  005856                     u5600:
 13045  005856  0E00               	movlw	0
 13046  005858  6E07               	movwf	_isspace$1315^0,c
 13047  00585A                     l4517:
 13048  00585A  C007  F001         	movff	_isspace$1315,?_isspace
 13049  00585E  6A02               	clrf	(?_isspace+1)^0,c
 13050  005860  0012               	return		;funcret
 13051  005862                     __end_of_isspace:
 13052                           	callstack 0
 13053                           
 13054 ;; *************** function _isdigit *****************
 13055 ;; Defined at:
 13056 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;  c               2    0[COMRAM] int 
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;		None
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  2    0[COMRAM] int 
 13063 ;; Registers used:
 13064 ;;		wreg, status,2, status,0
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 0/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13070 ;;      Params:         2       0       0       0       0       0       0
 13071 ;;      Locals:         0       0       0       0       0       0       0
 13072 ;;      Temps:          4       0       0       0       0       0       0
 13073 ;;      Totals:         6       0       0       0       0       0       0
 13074 ;;Total ram usage:        6 bytes
 13075 ;; Hardware stack levels used:    1
 13076 ;; This function calls:
 13077 ;;		Nothing
 13078 ;; This function is called by:
 13079 ;;		_vfpfcnvrt
 13080 ;;		_atoi
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           	psect	text43
 13085  005A52                     __ptext43:
 13086                           	callstack 0
 13087  005A52                     _isdigit:
 13088                           	callstack 26
 13089  005A52  0ED0               	movlw	208
 13090  005A54  6E03               	movwf	??_isdigit^0,c
 13091  005A56  0EFF               	movlw	255
 13092  005A58  6E04               	movwf	(??_isdigit+1)^0,c
 13093  005A5A  C001  F005         	movff	isdigit@c,??_isdigit+2
 13094  005A5E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 13095  005A62  5003               	movf	??_isdigit^0,w,c
 13096  005A64  2605               	addwf	(??_isdigit+2)^0,f,c
 13097  005A66  5004               	movf	(??_isdigit+1)^0,w,c
 13098  005A68  2206               	addwfc	(??_isdigit+3)^0,f,c
 13099  005A6A  5006               	movf	(??_isdigit+3)^0,w,c
 13100  005A6C  E10A               	bnz	u5570
 13101  005A6E  0E0A               	movlw	10
 13102  005A70  5C05               	subwf	(??_isdigit+2)^0,w,c
 13103  005A72  A0D8               	btfss	status,0,c
 13104  005A74  EF3E  F02D         	goto	u5571
 13105  005A78  EF41  F02D         	goto	u5570
 13106  005A7C                     u5571:
 13107  005A7C  0E01               	movlw	1
 13108  005A7E  EF42  F02D         	goto	u5580
 13109  005A82                     u5570:
 13110  005A82  0E00               	movlw	0
 13111  005A84                     u5580:
 13112  005A84  6E01               	movwf	?_isdigit^0,c
 13113  005A86  6A02               	clrf	(?_isdigit+1)^0,c
 13114  005A88  0012               	return		;funcret
 13115  005A8A                     __end_of_isdigit:
 13116                           	callstack 0
 13117                           
 13118 ;; *************** function ___wmul *****************
 13119 ;; Defined at:
 13120 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
 13121 ;; Parameters:    Size  Location     Type
 13122 ;;  multiplier      2    0[COMRAM] unsigned int 
 13123 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13124 ;; Auto vars:     Size  Location     Type
 13125 ;;  product         2    4[COMRAM] unsigned int 
 13126 ;; Return value:  Size  Location     Type
 13127 ;;                  2    0[COMRAM] unsigned int 
 13128 ;; Registers used:
 13129 ;;		wreg, status,2, status,0, prodl, prodh
 13130 ;; Tracked objects:
 13131 ;;		On entry : 0/0
 13132 ;;		On exit  : 0/0
 13133 ;;		Unchanged: 0/0
 13134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13135 ;;      Params:         4       0       0       0       0       0       0
 13136 ;;      Locals:         2       0       0       0       0       0       0
 13137 ;;      Temps:          0       0       0       0       0       0       0
 13138 ;;      Totals:         6       0       0       0       0       0       0
 13139 ;;Total ram usage:        6 bytes
 13140 ;; Hardware stack levels used:    1
 13141 ;; This function calls:
 13142 ;;		Nothing
 13143 ;; This function is called by:
 13144 ;;		_atoi
 13145 ;; This function uses a non-reentrant model
 13146 ;;
 13147                           
 13148                           	psect	text44
 13149  005B28                     __ptext44:
 13150                           	callstack 0
 13151  005B28                     ___wmul:
 13152                           	callstack 25
 13153  005B28  5001               	movf	___wmul@multiplier^0,w,c
 13154  005B2A  0203               	mulwf	___wmul@multiplicand^0,c
 13155  005B2C  CFF3 F005          	movff	prodl,___wmul@product
 13156  005B30  CFF4 F006          	movff	prodh,___wmul@product+1
 13157  005B34  5001               	movf	___wmul@multiplier^0,w,c
 13158  005B36  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13159  005B38  50F3               	movf	243,w,c
 13160  005B3A  2606               	addwf	(___wmul@product+1)^0,f,c
 13161  005B3C  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13162  005B3E  0203               	mulwf	___wmul@multiplicand^0,c
 13163  005B40  50F3               	movf	243,w,c
 13164  005B42  2606               	addwf	(___wmul@product+1)^0,f,c
 13165  005B44  C005  F001         	movff	___wmul@product,?___wmul
 13166  005B48  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13167  005B4C  0012               	return		;funcret
 13168  005B4E                     __end_of___wmul:
 13169                           	callstack 0
 13170                           
 13171 ;; *************** function ___xxtofl *****************
 13172 ;; Defined at:
 13173 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;  sign            1    wreg     unsigned char 
 13176 ;;  val             4    0[COMRAM] long 
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;  sign            1    8[COMRAM] unsigned char 
 13179 ;;  arg             4   10[COMRAM] unsigned long 
 13180 ;;  exp             1    9[COMRAM] unsigned char 
 13181 ;; Return value:  Size  Location     Type
 13182 ;;                  4    0[COMRAM] unsigned char 
 13183 ;; Registers used:
 13184 ;;		wreg, status,2, status,0
 13185 ;; Tracked objects:
 13186 ;;		On entry : 0/0
 13187 ;;		On exit  : 0/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13190 ;;      Params:         4       0       0       0       0       0       0
 13191 ;;      Locals:         6       0       0       0       0       0       0
 13192 ;;      Temps:          4       0       0       0       0       0       0
 13193 ;;      Totals:        14       0       0       0       0       0       0
 13194 ;;Total ram usage:       14 bytes
 13195 ;; Hardware stack levels used:    1
 13196 ;; This function calls:
 13197 ;;		Nothing
 13198 ;; This function is called by:
 13199 ;;		_main
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           	psect	text45
 13204  0041A6                     __ptext45:
 13205                           	callstack 0
 13206  0041A6                     ___xxtofl:
 13207                           	callstack 30
 13208                           
 13209                           ;incstack = 0
 13210                           ;___xxtofl@sign stored from wreg
 13211  0041A6  6E09               	movwf	___xxtofl@sign^0,c
 13212  0041A8  5009               	movf	___xxtofl@sign^0,w,c
 13213  0041AA  B4D8               	btfsc	status,2,c
 13214  0041AC  EFDA  F020         	goto	u7591
 13215  0041B0  EFDC  F020         	goto	u7590
 13216  0041B4                     u7591:
 13217  0041B4  EFFE  F020         	goto	l748
 13218  0041B8                     u7590:
 13219  0041B8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13220  0041BA  EFE3  F020         	goto	u7600
 13221  0041BE  EFE1  F020         	goto	u7601
 13222  0041C2                     u7601:
 13223  0041C2  EFFE  F020         	goto	l748
 13224  0041C6                     u7600:
 13225  0041C6  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13226  0041CA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13227  0041CE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13228  0041D2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13229  0041D6  1E05               	comf	??___xxtofl^0,f,c
 13230  0041D8  1E06               	comf	(??___xxtofl+1)^0,f,c
 13231  0041DA  1E07               	comf	(??___xxtofl+2)^0,f,c
 13232  0041DC  1E08               	comf	(??___xxtofl+3)^0,f,c
 13233  0041DE  2A05               	incf	??___xxtofl^0,f,c
 13234  0041E0  0E00               	movlw	0
 13235  0041E2  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13236  0041E4  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13237  0041E6  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13238  0041E8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13239  0041EC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13240  0041F0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13241  0041F4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13242  0041F8  EF06  F021         	goto	l5693
 13243  0041FC                     l748:
 13244  0041FC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13245  004200  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13246  004204  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13247  004208  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13248  00420C                     l5693:
 13249  00420C  5001               	movf	___xxtofl@val^0,w,c
 13250  00420E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13251  004210  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13252  004212  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13253  004214  A4D8               	btfss	status,2,c
 13254  004216  EF0F  F021         	goto	u7611
 13255  00421A  EF11  F021         	goto	u7610
 13256  00421E                     u7611:
 13257  00421E  EF1B  F021         	goto	l5699
 13258  004222                     u7610:
 13259  004222  0E00               	movlw	0
 13260  004224  6E01               	movwf	?___xxtofl^0,c
 13261  004226  0E00               	movlw	0
 13262  004228  6E02               	movwf	(?___xxtofl+1)^0,c
 13263  00422A  0E00               	movlw	0
 13264  00422C  6E03               	movwf	(?___xxtofl+2)^0,c
 13265  00422E  0E00               	movlw	0
 13266  004230  6E04               	movwf	(?___xxtofl+3)^0,c
 13267  004232  EFAC  F021         	goto	l751
 13268  004236                     l5699:
 13269  004236  0E96               	movlw	150
 13270  004238  6E0A               	movwf	___xxtofl@exp^0,c
 13271  00423A  EF25  F021         	goto	l5703
 13272  00423E                     l5701:
 13273  00423E  2A0A               	incf	___xxtofl@exp^0,f,c
 13274  004240  90D8               	bcf	status,0,c
 13275  004242  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13276  004244  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13277  004246  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13278  004248  320B               	rrcf	___xxtofl@arg^0,f,c
 13279  00424A                     l5703:
 13280  00424A  0E00               	movlw	0
 13281  00424C  140B               	andwf	___xxtofl@arg^0,w,c
 13282  00424E  6E05               	movwf	??___xxtofl^0,c
 13283  004250  0E00               	movlw	0
 13284  004252  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13285  004254  6E06               	movwf	(??___xxtofl+1)^0,c
 13286  004256  0E00               	movlw	0
 13287  004258  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13288  00425A  6E07               	movwf	(??___xxtofl+2)^0,c
 13289  00425C  0EFE               	movlw	254
 13290  00425E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13291  004260  6E08               	movwf	(??___xxtofl+3)^0,c
 13292  004262  5005               	movf	??___xxtofl^0,w,c
 13293  004264  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13294  004266  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13295  004268  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13296  00426A  A4D8               	btfss	status,2,c
 13297  00426C  EF3A  F021         	goto	u7621
 13298  004270  EF3C  F021         	goto	u7620
 13299  004274                     u7621:
 13300  004274  EF1F  F021         	goto	l5701
 13301  004278                     u7620:
 13302  004278  EF4A  F021         	goto	l755
 13303  00427C                     l5705:
 13304  00427C  2A0A               	incf	___xxtofl@exp^0,f,c
 13305  00427E  0E01               	movlw	1
 13306  004280  260B               	addwf	___xxtofl@arg^0,f,c
 13307  004282  0E00               	movlw	0
 13308  004284  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13309  004286  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13310  004288  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13311  00428A  90D8               	bcf	status,0,c
 13312  00428C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13313  00428E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13314  004290  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13315  004292  320B               	rrcf	___xxtofl@arg^0,f,c
 13316  004294                     l755:
 13317  004294  0E00               	movlw	0
 13318  004296  140B               	andwf	___xxtofl@arg^0,w,c
 13319  004298  6E05               	movwf	??___xxtofl^0,c
 13320  00429A  0E00               	movlw	0
 13321  00429C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13322  00429E  6E06               	movwf	(??___xxtofl+1)^0,c
 13323  0042A0  0E00               	movlw	0
 13324  0042A2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13325  0042A4  6E07               	movwf	(??___xxtofl+2)^0,c
 13326  0042A6  0EFF               	movlw	255
 13327  0042A8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13328  0042AA  6E08               	movwf	(??___xxtofl+3)^0,c
 13329  0042AC  5005               	movf	??___xxtofl^0,w,c
 13330  0042AE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13331  0042B0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13332  0042B2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13333  0042B4  A4D8               	btfss	status,2,c
 13334  0042B6  EF5F  F021         	goto	u7631
 13335  0042BA  EF61  F021         	goto	u7630
 13336  0042BE                     u7631:
 13337  0042BE  EF3E  F021         	goto	l5705
 13338  0042C2                     u7630:
 13339  0042C2  EF69  F021         	goto	l5713
 13340  0042C6                     l5711:
 13341  0042C6  060A               	decf	___xxtofl@exp^0,f,c
 13342  0042C8  90D8               	bcf	status,0,c
 13343  0042CA  360B               	rlcf	___xxtofl@arg^0,f,c
 13344  0042CC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13345  0042CE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13346  0042D0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13347  0042D2                     l5713:
 13348  0042D2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13349  0042D4  EF6E  F021         	goto	u7641
 13350  0042D8  EF70  F021         	goto	u7640
 13351  0042DC                     u7641:
 13352  0042DC  EF78  F021         	goto	l762
 13353  0042E0                     u7640:
 13354  0042E0  0E02               	movlw	2
 13355  0042E2  600A               	cpfslt	___xxtofl@exp^0,c
 13356  0042E4  EF76  F021         	goto	u7651
 13357  0042E8  EF78  F021         	goto	u7650
 13358  0042EC                     u7651:
 13359  0042EC  EF63  F021         	goto	l5711
 13360  0042F0                     u7650:
 13361  0042F0                     l762:
 13362  0042F0  B00A               	btfsc	___xxtofl@exp^0,0,c
 13363  0042F2  EF7D  F021         	goto	u7661
 13364  0042F6  EF7F  F021         	goto	u7660
 13365  0042FA                     u7661:
 13366  0042FA  EF80  F021         	goto	l5719
 13367  0042FE                     u7660:
 13368  0042FE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13369  004300                     l5719:
 13370  004300  90D8               	bcf	status,0,c
 13371  004302  320A               	rrcf	___xxtofl@exp^0,f,c
 13372  004304  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13373  004308  6A06               	clrf	(??___xxtofl+1)^0,c
 13374  00430A  6A07               	clrf	(??___xxtofl+2)^0,c
 13375  00430C  6A08               	clrf	(??___xxtofl+3)^0,c
 13376  00430E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13377  004312  6A07               	clrf	(??___xxtofl+2)^0,c
 13378  004314  6A06               	clrf	(??___xxtofl+1)^0,c
 13379  004316  6A05               	clrf	??___xxtofl^0,c
 13380  004318  5005               	movf	??___xxtofl^0,w,c
 13381  00431A  120B               	iorwf	___xxtofl@arg^0,f,c
 13382  00431C  5006               	movf	(??___xxtofl+1)^0,w,c
 13383  00431E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13384  004320  5007               	movf	(??___xxtofl+2)^0,w,c
 13385  004322  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13386  004324  5008               	movf	(??___xxtofl+3)^0,w,c
 13387  004326  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13388  004328  5009               	movf	___xxtofl@sign^0,w,c
 13389  00432A  B4D8               	btfsc	status,2,c
 13390  00432C  EF9A  F021         	goto	u7671
 13391  004330  EF9C  F021         	goto	u7670
 13392  004334                     u7671:
 13393  004334  EFA4  F021         	goto	l5729
 13394  004338                     u7670:
 13395  004338  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13396  00433A  EFA3  F021         	goto	u7680
 13397  00433E  EFA1  F021         	goto	u7681
 13398  004342                     u7681:
 13399  004342  EFA4  F021         	goto	l5729
 13400  004346                     u7680:
 13401  004346  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13402  004348                     l5729:
 13403  004348  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13404  00434C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13405  004350  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13406  004354  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13407  004358                     l751:
 13408  004358  0012               	return		;funcret
 13409  00435A                     __end_of___xxtofl:
 13410                           	callstack 0
 13411                           
 13412 ;; *************** function _Lcd_Write_String *****************
 13413 ;; Defined at:
 13414 ;;		line 103 in file "./lcd.h"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;  a               2    4[COMRAM] PTR unsigned char 
 13417 ;;		 -> i(6), v(6), STR_4(2), STR_3(2), 
 13418 ;;		 -> STR_2(11), STR_1(11), 
 13419 ;; Auto vars:     Size  Location     Type
 13420 ;;  i               2    8[COMRAM] int 
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  1    wreg      void 
 13423 ;; Registers used:
 13424 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13430 ;;      Params:         2       0       0       0       0       0       0
 13431 ;;      Locals:         2       0       0       0       0       0       0
 13432 ;;      Temps:          2       0       0       0       0       0       0
 13433 ;;      Totals:         6       0       0       0       0       0       0
 13434 ;;Total ram usage:        6 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:    2
 13437 ;; This function calls:
 13438 ;;		_Lcd_Write_Char
 13439 ;; This function is called by:
 13440 ;;		_main
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           	psect	text46
 13445  0054E0                     __ptext46:
 13446                           	callstack 0
 13447  0054E0                     _Lcd_Write_String:
 13448                           	callstack 28
 13449  0054E0                     
 13450                           ;./lcd.h: 103: void Lcd_Write_String(char *a);./lcd.h: 104: {;./lcd.h: 105:  int i;;./lc
      +                          d.h: 106:  for(i=0;a[i]!='\0';i++)
 13451  0054E0  0E00               	movlw	0
 13452  0054E2  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 13453  0054E4  0E00               	movlw	0
 13454  0054E6  6E09               	movwf	Lcd_Write_String@i^0,c
 13455  0054E8  EF90  F02A         	goto	l5679
 13456  0054EC                     l5675:
 13457                           
 13458                           ;./lcd.h: 107:     Lcd_Write_Char(a[i]);
 13459  0054EC  5009               	movf	Lcd_Write_String@i^0,w,c
 13460  0054EE  2405               	addwf	Lcd_Write_String@a^0,w,c
 13461  0054F0  6E07               	movwf	??_Lcd_Write_String^0,c
 13462  0054F2  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 13463  0054F4  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 13464  0054F6  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 13465  0054F8  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 13466  0054FC  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 13467  005500  6AF8               	clrf	tblptru,c
 13468  005502  0E05               	movlw	(high __ramtop+-1)
 13469  005504  64F7               	cpfsgt	tblptrh,c
 13470  005506  D003               	bra	u7567
 13471  005508  0008               	tblrd		*
 13472  00550A  50F5               	movf	tablat,w,c
 13473  00550C  D005               	bra	u7560
 13474  00550E                     u7567:
 13475  00550E  CFF6 FFE1          	movff	tblptrl,fsr1l
 13476  005512  CFF7 FFE2          	movff	tblptrh,fsr1h
 13477  005516  50E7               	movf	indf1,w,c
 13478  005518                     u7560:
 13479  005518  EC45  F02D         	call	_Lcd_Write_Char
 13480  00551C  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 13481  00551E  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 13482  005520                     l5679:
 13483  005520  5009               	movf	Lcd_Write_String@i^0,w,c
 13484  005522  2405               	addwf	Lcd_Write_String@a^0,w,c
 13485  005524  6E07               	movwf	??_Lcd_Write_String^0,c
 13486  005526  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 13487  005528  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 13488  00552A  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 13489  00552C  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 13490  005530  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 13491  005534  6AF8               	clrf	tblptru,c
 13492  005536  0E05               	movlw	(high __ramtop+-1)
 13493  005538  64F7               	cpfsgt	tblptrh,c
 13494  00553A  D003               	bra	u7577
 13495  00553C  0008               	tblrd		*
 13496  00553E  50F5               	movf	tablat,w,c
 13497  005540  D005               	bra	u7570
 13498  005542                     u7577:
 13499  005542  CFF6 FFE1          	movff	tblptrl,fsr1l
 13500  005546  CFF7 FFE2          	movff	tblptrh,fsr1h
 13501  00554A  50E7               	movf	indf1,w,c
 13502  00554C                     u7570:
 13503  00554C  0900               	iorlw	0
 13504  00554E  A4D8               	btfss	status,2,c
 13505  005550  EFAC  F02A         	goto	u7581
 13506  005554  EFAE  F02A         	goto	u7580
 13507  005558                     u7581:
 13508  005558  EF76  F02A         	goto	l5675
 13509  00555C                     u7580:
 13510  00555C  0012               	return		;funcret
 13511  00555E                     __end_of_Lcd_Write_String:
 13512                           	callstack 0
 13513                           
 13514 ;; *************** function _Lcd_Write_Char *****************
 13515 ;; Defined at:
 13516 ;;		line 87 in file "./lcd.h"
 13517 ;; Parameters:    Size  Location     Type
 13518 ;;  a               1    wreg     unsigned char 
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;  a               1    3[COMRAM] unsigned char 
 13521 ;;  y               1    2[COMRAM] unsigned char 
 13522 ;;  temp            1    1[COMRAM] unsigned char 
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  1    wreg      void 
 13525 ;; Registers used:
 13526 ;;		wreg, status,2, status,0, cstack
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13532 ;;      Params:         0       0       0       0       0       0       0
 13533 ;;      Locals:         3       0       0       0       0       0       0
 13534 ;;      Temps:          0       0       0       0       0       0       0
 13535 ;;      Totals:         3       0       0       0       0       0       0
 13536 ;;Total ram usage:        3 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; Hardware stack levels required when called:    1
 13539 ;; This function calls:
 13540 ;;		_Lcd_Port
 13541 ;; This function is called by:
 13542 ;;		_Lcd_Write_String
 13543 ;; This function uses a non-reentrant model
 13544 ;;
 13545                           
 13546                           	psect	text47
 13547  005A8A                     __ptext47:
 13548                           	callstack 0
 13549  005A8A                     _Lcd_Write_Char:
 13550                           	callstack 28
 13551                           
 13552                           ;incstack = 0
 13553                           ;Lcd_Write_Char@a stored from wreg
 13554  005A8A  6E04               	movwf	Lcd_Write_Char@a^0,c
 13555  005A8C                     
 13556                           ;./lcd.h: 87: void Lcd_Write_Char(char a);./lcd.h: 88: {;./lcd.h: 89:    char temp,y;;./
      +                          lcd.h: 90:    temp = a&0x0F;
 13557  005A8C  5004               	movf	Lcd_Write_Char@a^0,w,c
 13558  005A8E  0B0F               	andlw	15
 13559  005A90  6E02               	movwf	Lcd_Write_Char@temp^0,c
 13560                           
 13561                           ;./lcd.h: 91:    y = a&0xF0;
 13562  005A92  5004               	movf	Lcd_Write_Char@a^0,w,c
 13563  005A94  0BF0               	andlw	240
 13564  005A96  6E03               	movwf	Lcd_Write_Char@y^0,c
 13565  005A98                     
 13566                           ;./lcd.h: 92:    PORTDbits.RD4 = 1;
 13567  005A98  8883               	bsf	131,4,c	;volatile
 13568  005A9A                     
 13569                           ;./lcd.h: 93:    Lcd_Port(y>>4);
 13570  005A9A  3803               	swapf	Lcd_Write_Char@y^0,w,c
 13571  005A9C  0B0F               	andlw	15
 13572  005A9E  ECDA  F02B         	call	_Lcd_Port
 13573  005AA2                     
 13574                           ;./lcd.h: 94:    PORTDbits.RD5 = 1;
 13575  005AA2  8A83               	bsf	131,5,c	;volatile
 13576  005AA4                     
 13577                           ;./lcd.h: 95:    _delay((unsigned long)((40)*(16000000/4000000.0)));
 13578  005AA4  0E35               	movlw	53
 13579  005AA6                     u7717:
 13580  005AA6  2EE8               	decfsz	wreg,f,c
 13581  005AA8  D7FE               	bra	u7717
 13582  005AAA  F000               	nop	
 13583  005AAC                     
 13584                           ;./lcd.h: 96:    PORTDbits.RD5 = 0;
 13585  005AAC  9A83               	bcf	131,5,c	;volatile
 13586  005AAE                     
 13587                           ;./lcd.h: 97:    Lcd_Port(temp);
 13588  005AAE  5002               	movf	Lcd_Write_Char@temp^0,w,c
 13589  005AB0  ECDA  F02B         	call	_Lcd_Port
 13590  005AB4                     
 13591                           ;./lcd.h: 98:    PORTDbits.RD5 = 1;
 13592  005AB4  8A83               	bsf	131,5,c	;volatile
 13593  005AB6                     
 13594                           ;./lcd.h: 99:    _delay((unsigned long)((40)*(16000000/4000000.0)));
 13595  005AB6  0E35               	movlw	53
 13596  005AB8                     u7727:
 13597  005AB8  2EE8               	decfsz	wreg,f,c
 13598  005ABA  D7FE               	bra	u7727
 13599  005ABC  F000               	nop	
 13600  005ABE                     
 13601                           ;./lcd.h: 100:    PORTDbits.RD5 = 0;
 13602  005ABE  9A83               	bcf	131,5,c	;volatile
 13603  005AC0  0012               	return		;funcret
 13604  005AC2                     __end_of_Lcd_Write_Char:
 13605                           	callstack 0
 13606                           
 13607 ;; *************** function _Lcd_Set_Cursor *****************
 13608 ;; Defined at:
 13609 ;;		line 47 in file "./lcd.h"
 13610 ;; Parameters:    Size  Location     Type
 13611 ;;  a               1    wreg     unsigned char 
 13612 ;;  b               1    3[COMRAM] unsigned char 
 13613 ;; Auto vars:     Size  Location     Type
 13614 ;;  a               1    4[COMRAM] unsigned char 
 13615 ;;  temp            1    7[COMRAM] unsigned char 
 13616 ;;  y               1    6[COMRAM] unsigned char 
 13617 ;;  z               1    5[COMRAM] unsigned char 
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  1    wreg      void 
 13620 ;; Registers used:
 13621 ;;		wreg, status,2, status,0, cstack
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/0
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13627 ;;      Params:         1       0       0       0       0       0       0
 13628 ;;      Locals:         4       0       0       0       0       0       0
 13629 ;;      Temps:          0       0       0       0       0       0       0
 13630 ;;      Totals:         5       0       0       0       0       0       0
 13631 ;;Total ram usage:        5 bytes
 13632 ;; Hardware stack levels used:    1
 13633 ;; Hardware stack levels required when called:    2
 13634 ;; This function calls:
 13635 ;;		_Lcd_Cmd
 13636 ;; This function is called by:
 13637 ;;		_main
 13638 ;; This function uses a non-reentrant model
 13639 ;;
 13640                           
 13641                           	psect	text48
 13642  0055D2                     __ptext48:
 13643                           	callstack 0
 13644  0055D2                     _Lcd_Set_Cursor:
 13645                           	callstack 28
 13646                           
 13647                           ;incstack = 0
 13648                           ;Lcd_Set_Cursor@a stored from wreg
 13649  0055D2  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 13650  0055D4                     
 13651                           ;./lcd.h: 47: void Lcd_Set_Cursor(char a, char b);./lcd.h: 48: {;./lcd.h: 49:  char temp
      +                          ,z,y;;./lcd.h: 50:  if(a == 1)
 13652  0055D4  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 13653  0055D6  A4D8               	btfss	status,2,c
 13654  0055D8  EFF0  F02A         	goto	u7541
 13655  0055DC  EFF2  F02A         	goto	u7540
 13656  0055E0                     u7541:
 13657  0055E0  EF03  F02B         	goto	l5637
 13658  0055E4                     u7540:
 13659  0055E4                     
 13660                           ;./lcd.h: 51:  {;./lcd.h: 52:    temp = 0x80 + b - 1;
 13661  0055E4  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 13662  0055E6  0F7F               	addlw	127
 13663  0055E8  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 13664                           
 13665                           ;./lcd.h: 53:   z = temp>>4;
 13666  0055EA  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 13667  0055EC  0B0F               	andlw	15
 13668  0055EE  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 13669                           
 13670                           ;./lcd.h: 54:   y = temp & 0x0F;
 13671  0055F0  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 13672  0055F2  0B0F               	andlw	15
 13673  0055F4  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 13674  0055F6                     
 13675                           ;./lcd.h: 55:   Lcd_Cmd(z);
 13676  0055F6  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 13677  0055F8  ECA7  F02D         	call	_Lcd_Cmd
 13678  0055FC                     
 13679                           ;./lcd.h: 56:   Lcd_Cmd(y);
 13680  0055FC  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 13681  0055FE  ECA7  F02D         	call	_Lcd_Cmd
 13682                           
 13683                           ;./lcd.h: 57:  }
 13684  005602  EF1B  F02B         	goto	l51
 13685  005606                     l5637:
 13686  005606  0E02               	movlw	2
 13687  005608  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 13688  00560A  A4D8               	btfss	status,2,c
 13689  00560C  EF0A  F02B         	goto	u7551
 13690  005610  EF0C  F02B         	goto	u7550
 13691  005614                     u7551:
 13692  005614  EF1B  F02B         	goto	l51
 13693  005618                     u7550:
 13694  005618                     
 13695                           ;./lcd.h: 59:  {;./lcd.h: 60:   temp = 0xC0 + b - 1;
 13696  005618  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 13697  00561A  0FBF               	addlw	191
 13698  00561C  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 13699                           
 13700                           ;./lcd.h: 61:   z = temp>>4;
 13701  00561E  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 13702  005620  0B0F               	andlw	15
 13703  005622  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 13704                           
 13705                           ;./lcd.h: 62:   y = temp & 0x0F;
 13706  005624  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 13707  005626  0B0F               	andlw	15
 13708  005628  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 13709  00562A                     
 13710                           ;./lcd.h: 63:   Lcd_Cmd(z);
 13711  00562A  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 13712  00562C  ECA7  F02D         	call	_Lcd_Cmd
 13713  005630                     
 13714                           ;./lcd.h: 64:   Lcd_Cmd(y);
 13715  005630  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 13716  005632  ECA7  F02D         	call	_Lcd_Cmd
 13717  005636                     l51:
 13718  005636  0012               	return		;funcret
 13719  005638                     __end_of_Lcd_Set_Cursor:
 13720                           	callstack 0
 13721                           
 13722 ;; *************** function _Lcd_Init *****************
 13723 ;; Defined at:
 13724 ;;		line 68 in file "./lcd.h"
 13725 ;; Parameters:    Size  Location     Type
 13726 ;;		None
 13727 ;; Auto vars:     Size  Location     Type
 13728 ;;		None
 13729 ;; Return value:  Size  Location     Type
 13730 ;;                  1    wreg      void 
 13731 ;; Registers used:
 13732 ;;		wreg, status,2, cstack
 13733 ;; Tracked objects:
 13734 ;;		On entry : 0/0
 13735 ;;		On exit  : 0/0
 13736 ;;		Unchanged: 0/0
 13737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13738 ;;      Params:         0       0       0       0       0       0       0
 13739 ;;      Locals:         0       0       0       0       0       0       0
 13740 ;;      Temps:          1       0       0       0       0       0       0
 13741 ;;      Totals:         1       0       0       0       0       0       0
 13742 ;;Total ram usage:        1 bytes
 13743 ;; Hardware stack levels used:    1
 13744 ;; Hardware stack levels required when called:    2
 13745 ;; This function calls:
 13746 ;;		_Lcd_Cmd
 13747 ;;		_Lcd_Port
 13748 ;; This function is called by:
 13749 ;;		_main
 13750 ;; This function uses a non-reentrant model
 13751 ;;
 13752                           
 13753                           	psect	text49
 13754  00555E                     __ptext49:
 13755                           	callstack 0
 13756  00555E                     _Lcd_Init:
 13757                           	callstack 28
 13758  00555E                     
 13759                           ;./lcd.h: 70:   Lcd_Port(0x00);
 13760  00555E  0E00               	movlw	0
 13761  005560  ECDA  F02B         	call	_Lcd_Port
 13762  005564                     
 13763                           ;./lcd.h: 71:    _delay((unsigned long)((20)*(16000000/4000.0)));
 13764  005564  0E68               	movlw	104
 13765  005566  6E04               	movwf	??_Lcd_Init^0,c
 13766  005568  0EE4               	movlw	228
 13767  00556A                     u7737:
 13768  00556A  2EE8               	decfsz	wreg,f,c
 13769  00556C  D7FE               	bra	u7737
 13770  00556E  2E04               	decfsz	??_Lcd_Init^0,f,c
 13771  005570  D7FC               	bra	u7737
 13772  005572  D000               	nop2	
 13773  005574                     
 13774                           ;./lcd.h: 72:   Lcd_Cmd(0x03);
 13775  005574  0E03               	movlw	3
 13776  005576  ECA7  F02D         	call	_Lcd_Cmd
 13777  00557A                     
 13778                           ;./lcd.h: 73:  _delay((unsigned long)((5)*(16000000/4000.0)));
 13779  00557A  0E1A               	movlw	26
 13780  00557C  6E04               	movwf	??_Lcd_Init^0,c
 13781  00557E  0EF8               	movlw	248
 13782  005580                     u7747:
 13783  005580  2EE8               	decfsz	wreg,f,c
 13784  005582  D7FE               	bra	u7747
 13785  005584  2E04               	decfsz	??_Lcd_Init^0,f,c
 13786  005586  D7FC               	bra	u7747
 13787  005588  D000               	nop2	
 13788  00558A                     
 13789                           ;./lcd.h: 74:   Lcd_Cmd(0x03);
 13790  00558A  0E03               	movlw	3
 13791  00558C  ECA7  F02D         	call	_Lcd_Cmd
 13792  005590                     
 13793                           ;./lcd.h: 75:  _delay((unsigned long)((11)*(16000000/4000.0)));
 13794  005590  0E3A               	movlw	58
 13795  005592  6E04               	movwf	??_Lcd_Init^0,c
 13796  005594  0E23               	movlw	35
 13797  005596                     u7757:
 13798  005596  2EE8               	decfsz	wreg,f,c
 13799  005598  D7FE               	bra	u7757
 13800  00559A  2E04               	decfsz	??_Lcd_Init^0,f,c
 13801  00559C  D7FC               	bra	u7757
 13802  00559E  F000               	nop	
 13803  0055A0                     
 13804                           ;./lcd.h: 76:   Lcd_Cmd(0x03);
 13805  0055A0  0E03               	movlw	3
 13806  0055A2  ECA7  F02D         	call	_Lcd_Cmd
 13807  0055A6                     
 13808                           ;./lcd.h: 78:   Lcd_Cmd(0x02);
 13809  0055A6  0E02               	movlw	2
 13810  0055A8  ECA7  F02D         	call	_Lcd_Cmd
 13811  0055AC                     
 13812                           ;./lcd.h: 79:   Lcd_Cmd(0x02);
 13813  0055AC  0E02               	movlw	2
 13814  0055AE  ECA7  F02D         	call	_Lcd_Cmd
 13815  0055B2                     
 13816                           ;./lcd.h: 80:   Lcd_Cmd(0x08);
 13817  0055B2  0E08               	movlw	8
 13818  0055B4  ECA7  F02D         	call	_Lcd_Cmd
 13819  0055B8                     
 13820                           ;./lcd.h: 81:   Lcd_Cmd(0x00);
 13821  0055B8  0E00               	movlw	0
 13822  0055BA  ECA7  F02D         	call	_Lcd_Cmd
 13823  0055BE                     
 13824                           ;./lcd.h: 82:   Lcd_Cmd(0x0C);
 13825  0055BE  0E0C               	movlw	12
 13826  0055C0  ECA7  F02D         	call	_Lcd_Cmd
 13827  0055C4                     
 13828                           ;./lcd.h: 83:   Lcd_Cmd(0x00);
 13829  0055C4  0E00               	movlw	0
 13830  0055C6  ECA7  F02D         	call	_Lcd_Cmd
 13831  0055CA                     
 13832                           ;./lcd.h: 84:   Lcd_Cmd(0x06);
 13833  0055CA  0E06               	movlw	6
 13834  0055CC  ECA7  F02D         	call	_Lcd_Cmd
 13835  0055D0  0012               	return		;funcret
 13836  0055D2                     __end_of_Lcd_Init:
 13837                           	callstack 0
 13838                           
 13839 ;; *************** function _Lcd_Cmd *****************
 13840 ;; Defined at:
 13841 ;;		line 32 in file "./lcd.h"
 13842 ;; Parameters:    Size  Location     Type
 13843 ;;  a               1    wreg     unsigned char 
 13844 ;; Auto vars:     Size  Location     Type
 13845 ;;  a               1    2[COMRAM] unsigned char 
 13846 ;; Return value:  Size  Location     Type
 13847 ;;                  1    wreg      void 
 13848 ;; Registers used:
 13849 ;;		wreg, status,2, cstack
 13850 ;; Tracked objects:
 13851 ;;		On entry : 0/0
 13852 ;;		On exit  : 0/0
 13853 ;;		Unchanged: 0/0
 13854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13855 ;;      Params:         0       0       0       0       0       0       0
 13856 ;;      Locals:         1       0       0       0       0       0       0
 13857 ;;      Temps:          1       0       0       0       0       0       0
 13858 ;;      Totals:         2       0       0       0       0       0       0
 13859 ;;Total ram usage:        2 bytes
 13860 ;; Hardware stack levels used:    1
 13861 ;; Hardware stack levels required when called:    1
 13862 ;; This function calls:
 13863 ;;		_Lcd_Port
 13864 ;; This function is called by:
 13865 ;;		_Lcd_Set_Cursor
 13866 ;;		_Lcd_Init
 13867 ;;		_Lcd_Clear
 13868 ;;		_Lcd_Shift_Right
 13869 ;;		_Lcd_Shift_Left
 13870 ;; This function uses a non-reentrant model
 13871 ;;
 13872                           
 13873                           	psect	text50
 13874  005B4E                     __ptext50:
 13875                           	callstack 0
 13876  005B4E                     _Lcd_Cmd:
 13877                           	callstack 28
 13878                           
 13879                           ;incstack = 0
 13880                           ;Lcd_Cmd@a stored from wreg
 13881  005B4E  6E03               	movwf	Lcd_Cmd@a^0,c
 13882  005B50                     
 13883                           ;./lcd.h: 32: void Lcd_Cmd(char a);./lcd.h: 33: {;./lcd.h: 34:  PORTDbits.RD4 = 0;
 13884  005B50  9883               	bcf	131,4,c	;volatile
 13885  005B52                     
 13886                           ;./lcd.h: 35:  Lcd_Port(a);
 13887  005B52  5003               	movf	Lcd_Cmd@a^0,w,c
 13888  005B54  ECDA  F02B         	call	_Lcd_Port
 13889  005B58                     
 13890                           ;./lcd.h: 36:  PORTDbits.RD5 = 1;
 13891  005B58  8A83               	bsf	131,5,c	;volatile
 13892  005B5A                     
 13893                           ;./lcd.h: 37:         _delay((unsigned long)((4)*(16000000/4000.0)));
 13894  005B5A  0E15               	movlw	21
 13895  005B5C  6E02               	movwf	??_Lcd_Cmd^0,c
 13896  005B5E  0EC6               	movlw	198
 13897  005B60                     u7767:
 13898  005B60  2EE8               	decfsz	wreg,f,c
 13899  005B62  D7FE               	bra	u7767
 13900  005B64  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 13901  005B66  D7FC               	bra	u7767
 13902  005B68  D000               	nop2	
 13903  005B6A                     
 13904                           ;./lcd.h: 38:         PORTDbits.RD5 = 0;
 13905  005B6A  9A83               	bcf	131,5,c	;volatile
 13906  005B6C  0012               	return		;funcret
 13907  005B6E                     __end_of_Lcd_Cmd:
 13908                           	callstack 0
 13909                           
 13910 ;; *************** function _Lcd_Port *****************
 13911 ;; Defined at:
 13912 ;;		line 10 in file "./lcd.h"
 13913 ;; Parameters:    Size  Location     Type
 13914 ;;  a               1    wreg     unsigned char 
 13915 ;; Auto vars:     Size  Location     Type
 13916 ;;  a               1    0[COMRAM] unsigned char 
 13917 ;; Return value:  Size  Location     Type
 13918 ;;                  1    wreg      void 
 13919 ;; Registers used:
 13920 ;;		wreg
 13921 ;; Tracked objects:
 13922 ;;		On entry : 0/0
 13923 ;;		On exit  : 0/0
 13924 ;;		Unchanged: 0/0
 13925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13926 ;;      Params:         0       0       0       0       0       0       0
 13927 ;;      Locals:         1       0       0       0       0       0       0
 13928 ;;      Temps:          0       0       0       0       0       0       0
 13929 ;;      Totals:         1       0       0       0       0       0       0
 13930 ;;Total ram usage:        1 bytes
 13931 ;; Hardware stack levels used:    1
 13932 ;; This function calls:
 13933 ;;		Nothing
 13934 ;; This function is called by:
 13935 ;;		_Lcd_Cmd
 13936 ;;		_Lcd_Init
 13937 ;;		_Lcd_Write_Char
 13938 ;; This function uses a non-reentrant model
 13939 ;;
 13940                           
 13941                           	psect	text51
 13942  0057B4                     __ptext51:
 13943                           	callstack 0
 13944  0057B4                     _Lcd_Port:
 13945                           	callstack 28
 13946                           
 13947                           ;incstack = 0
 13948                           ;Lcd_Port@a stored from wreg
 13949  0057B4  6E01               	movwf	Lcd_Port@a^0,c
 13950  0057B6                     
 13951                           ;./lcd.h: 10: void Lcd_Port(char a);./lcd.h: 11: {;./lcd.h: 12:  if(a & 1)
 13952  0057B6  A001               	btfss	Lcd_Port@a^0,0,c
 13953  0057B8  EFE0  F02B         	goto	u7441
 13954  0057BC  EFE2  F02B         	goto	u7440
 13955  0057C0                     u7441:
 13956  0057C0  EFE5  F02B         	goto	l31
 13957  0057C4                     u7440:
 13958  0057C4                     
 13959                           ;./lcd.h: 13:   PORTDbits.RD0 = 1;
 13960  0057C4  8083               	bsf	131,0,c	;volatile
 13961  0057C6  EFE6  F02B         	goto	l5547
 13962  0057CA                     l31:
 13963                           
 13964                           ;./lcd.h: 15:   PORTDbits.RD0 = 0;
 13965  0057CA  9083               	bcf	131,0,c	;volatile
 13966  0057CC                     l5547:
 13967                           
 13968                           ;./lcd.h: 17:  if(a & 2)
 13969  0057CC  A201               	btfss	Lcd_Port@a^0,1,c
 13970  0057CE  EFEB  F02B         	goto	u7451
 13971  0057D2  EFED  F02B         	goto	u7450
 13972  0057D6                     u7451:
 13973  0057D6  EFF0  F02B         	goto	l33
 13974  0057DA                     u7450:
 13975  0057DA                     
 13976                           ;./lcd.h: 18:   PORTDbits.RD1 = 1;
 13977  0057DA  8283               	bsf	131,1,c	;volatile
 13978  0057DC  EFF1  F02B         	goto	l5551
 13979  0057E0                     l33:
 13980                           
 13981                           ;./lcd.h: 20:   PORTDbits.RD1 = 0;
 13982  0057E0  9283               	bcf	131,1,c	;volatile
 13983  0057E2                     l5551:
 13984                           
 13985                           ;./lcd.h: 22:  if(a & 4)
 13986  0057E2  A401               	btfss	Lcd_Port@a^0,2,c
 13987  0057E4  EFF6  F02B         	goto	u7461
 13988  0057E8  EFF8  F02B         	goto	u7460
 13989  0057EC                     u7461:
 13990  0057EC  EFFB  F02B         	goto	l35
 13991  0057F0                     u7460:
 13992  0057F0                     
 13993                           ;./lcd.h: 23:   PORTDbits.RD2 = 1;
 13994  0057F0  8483               	bsf	131,2,c	;volatile
 13995  0057F2  EFFC  F02B         	goto	l5555
 13996  0057F6                     l35:
 13997                           
 13998                           ;./lcd.h: 25:   PORTDbits.RD2 = 0;
 13999  0057F6  9483               	bcf	131,2,c	;volatile
 14000  0057F8                     l5555:
 14001                           
 14002                           ;./lcd.h: 27:  if(a & 8)
 14003  0057F8  A601               	btfss	Lcd_Port@a^0,3,c
 14004  0057FA  EF01  F02C         	goto	u7471
 14005  0057FE  EF03  F02C         	goto	u7470
 14006  005802                     u7471:
 14007  005802  EF06  F02C         	goto	l37
 14008  005806                     u7470:
 14009  005806                     
 14010                           ;./lcd.h: 28:   PORTDbits.RD3 = 1;
 14011  005806  8683               	bsf	131,3,c	;volatile
 14012  005808  EF07  F02C         	goto	l39
 14013  00580C                     l37:
 14014                           
 14015                           ;./lcd.h: 30:   PORTDbits.RD3 = 0;
 14016  00580C  9683               	bcf	131,3,c	;volatile
 14017  00580E                     l39:
 14018  00580E  0012               	return		;funcret
 14019  005810                     __end_of_Lcd_Port:
 14020                           	callstack 0
 14021                           
 14022                           	psect	rparam
 14023  0000                     
 14024                           	psect	idloc
 14025                           
 14026                           ;Config register IDLOC0 @ 0x200000
 14027                           ;	unspecified, using default values
 14028  200000                     	org	2097152
 14029  200000  FF                 	db	255
 14030                           
 14031                           ;Config register IDLOC1 @ 0x200001
 14032                           ;	unspecified, using default values
 14033  200001                     	org	2097153
 14034  200001  FF                 	db	255
 14035                           
 14036                           ;Config register IDLOC2 @ 0x200002
 14037                           ;	unspecified, using default values
 14038  200002                     	org	2097154
 14039  200002  FF                 	db	255
 14040                           
 14041                           ;Config register IDLOC3 @ 0x200003
 14042                           ;	unspecified, using default values
 14043  200003                     	org	2097155
 14044  200003  FF                 	db	255
 14045                           
 14046                           ;Config register IDLOC4 @ 0x200004
 14047                           ;	unspecified, using default values
 14048  200004                     	org	2097156
 14049  200004  FF                 	db	255
 14050                           
 14051                           ;Config register IDLOC5 @ 0x200005
 14052                           ;	unspecified, using default values
 14053  200005                     	org	2097157
 14054  200005  FF                 	db	255
 14055                           
 14056                           ;Config register IDLOC6 @ 0x200006
 14057                           ;	unspecified, using default values
 14058  200006                     	org	2097158
 14059  200006  FF                 	db	255
 14060                           
 14061                           ;Config register IDLOC7 @ 0x200007
 14062                           ;	unspecified, using default values
 14063  200007                     	org	2097159
 14064  200007  FF                 	db	255
 14065                           
 14066                           	psect	config
 14067                           
 14068                           ; Padding undefined space
 14069  300000                     	org	3145728
 14070  300000  FF                 	db	255
 14071                           
 14072                           ;Config register CONFIG1H @ 0x300001
 14073                           ;	Oscillator Selection bits
 14074                           ;	FOSC = INTIO7, Internal oscillator block, CLKOUT function on OSC2
 14075                           ;	4X PLL Enable
 14076                           ;	PLLCFG = OFF, Oscillator used directly
 14077                           ;	Primary clock enable bit
 14078                           ;	PRICLKEN = ON, Primary clock is always enabled
 14079                           ;	Fail-Safe Clock Monitor Enable bit
 14080                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14081                           ;	Internal/External Oscillator Switchover bit
 14082                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14083  300001                     	org	3145729
 14084  300001  29                 	db	41
 14085                           
 14086                           ;Config register CONFIG2L @ 0x300002
 14087                           ;	Power-up Timer Enable bit
 14088                           ;	PWRTEN = OFF, Power up timer disabled
 14089                           ;	Brown-out Reset Enable bits
 14090                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 14091                           ;	Brown Out Reset Voltage bits
 14092                           ;	BORV = 190, VBOR set to 1.90 V nominal
 14093  300002                     	org	3145730
 14094  300002  1F                 	db	31
 14095                           
 14096                           ;Config register CONFIG2H @ 0x300003
 14097                           ;	Watchdog Timer Enable bits
 14098                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 14099                           ;	Watchdog Timer Postscale Select bits
 14100                           ;	WDTPS = 0xF, unprogrammed default
 14101  300003                     	org	3145731
 14102  300003  3C                 	db	60
 14103                           
 14104                           ; Padding undefined space
 14105  300004                     	org	3145732
 14106  300004  FF                 	db	255
 14107                           
 14108                           ;Config register CONFIG3H @ 0x300005
 14109                           ;	CCP2 MUX bit
 14110                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 14111                           ;	PORTB A/D Enable bit
 14112                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 14113                           ;	P3A/CCP3 Mux bit
 14114                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 14115                           ;	HFINTOSC Fast Start-up
 14116                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 14117                           ;	Timer3 Clock input mux bit
 14118                           ;	T3CMX = PORTC0, T3CKI is on RC0
 14119                           ;	ECCP2 B output mux bit
 14120                           ;	P2BMX = PORTD2, P2B is on RD2
 14121                           ;	MCLR Pin Enable bit
 14122                           ;	MCLRE = INTMCLR, RE3 input pin enabled; MCLR disabled
 14123  300005                     	org	3145733
 14124  300005  3F                 	db	63
 14125                           
 14126                           ;Config register CONFIG4L @ 0x300006
 14127                           ;	Stack Full/Underflow Reset Enable bit
 14128                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14129                           ;	Single-Supply ICSP Enable bit
 14130                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 14131                           ;	Extended Instruction Set Enable bit
 14132                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14133                           ;	Background Debug
 14134                           ;	DEBUG = 0x1, unprogrammed default
 14135  300006                     	org	3145734
 14136  300006  85                 	db	133
 14137                           
 14138                           ; Padding undefined space
 14139  300007                     	org	3145735
 14140  300007  FF                 	db	255
 14141                           
 14142                           ;Config register CONFIG5L @ 0x300008
 14143                           ;	Code Protection Block 0
 14144                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 14145                           ;	Code Protection Block 1
 14146                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 14147                           ;	Code Protection Block 2
 14148                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 14149                           ;	Code Protection Block 3
 14150                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 14151  300008                     	org	3145736
 14152  300008  0F                 	db	15
 14153                           
 14154                           ;Config register CONFIG5H @ 0x300009
 14155                           ;	Boot Block Code Protection bit
 14156                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 14157                           ;	Data EEPROM Code Protection bit
 14158                           ;	CPD = OFF, Data EEPROM not code-protected
 14159  300009                     	org	3145737
 14160  300009  C0                 	db	192
 14161                           
 14162                           ;Config register CONFIG6L @ 0x30000A
 14163                           ;	Write Protection Block 0
 14164                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 14165                           ;	Write Protection Block 1
 14166                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 14167                           ;	Write Protection Block 2
 14168                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 14169                           ;	Write Protection Block 3
 14170                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 14171  30000A                     	org	3145738
 14172  30000A  0F                 	db	15
 14173                           
 14174                           ;Config register CONFIG6H @ 0x30000B
 14175                           ;	Configuration Register Write Protection bit
 14176                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 14177                           ;	Boot Block Write Protection bit
 14178                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 14179                           ;	Data EEPROM Write Protection bit
 14180                           ;	WRTD = OFF, Data EEPROM not write-protected
 14181  30000B                     	org	3145739
 14182  30000B  E0                 	db	224
 14183                           
 14184                           ;Config register CONFIG7L @ 0x30000C
 14185                           ;	Table Read Protection Block 0
 14186                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 14187                           ;	Table Read Protection Block 1
 14188                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 14189                           ;	Table Read Protection Block 2
 14190                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 14191                           ;	Table Read Protection Block 3
 14192                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 14193  30000C                     	org	3145740
 14194  30000C  0F                 	db	15
 14195                           
 14196                           ;Config register CONFIG7H @ 0x30000D
 14197                           ;	Boot Block Table Read Protection bit
 14198                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 14199  30000D                     	org	3145741
 14200  30000D  40                 	db	64
 14201                           tosu	equ	0xFFF
 14202                           tosh	equ	0xFFE
 14203                           tosl	equ	0xFFD
 14204                           stkptr	equ	0xFFC
 14205                           pclatu	equ	0xFFB
 14206                           pclath	equ	0xFFA
 14207                           pcl	equ	0xFF9
 14208                           tblptru	equ	0xFF8
 14209                           tblptrh	equ	0xFF7
 14210                           tblptrl	equ	0xFF6
 14211                           tablat	equ	0xFF5
 14212                           prodh	equ	0xFF4
 14213                           prodl	equ	0xFF3
 14214                           indf0	equ	0xFEF
 14215                           postinc0	equ	0xFEE
 14216                           postdec0	equ	0xFED
 14217                           preinc0	equ	0xFEC
 14218                           plusw0	equ	0xFEB
 14219                           fsr0h	equ	0xFEA
 14220                           fsr0l	equ	0xFE9
 14221                           wreg	equ	0xFE8
 14222                           indf1	equ	0xFE7
 14223                           postinc1	equ	0xFE6
 14224                           postdec1	equ	0xFE5
 14225                           preinc1	equ	0xFE4
 14226                           plusw1	equ	0xFE3
 14227                           fsr1h	equ	0xFE2
 14228                           fsr1l	equ	0xFE1
 14229                           bsr	equ	0xFE0
 14230                           indf2	equ	0xFDF
 14231                           postinc2	equ	0xFDE
 14232                           postdec2	equ	0xFDD
 14233                           preinc2	equ	0xFDC
 14234                           plusw2	equ	0xFDB
 14235                           fsr2h	equ	0xFDA
 14236                           fsr2l	equ	0xFD9
 14237                           status	equ	0xFD8

Data Sizes:
    Strings     97
    Constant    0
    Data        7
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160    121     155
    BANK1           256      0      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_116(CODE[3]), STR_112(CODE[3]), STR_107(CODE[3]), STR_103(CODE[3]), 
		 -> STR_98(CODE[4]), STR_94(CODE[4]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[4]), STR_74(CODE[3]), STR_69(CODE[3]), STR_64(CODE[4]), 
		 -> STR_59(CODE[3]), STR_54(CODE[3]), STR_49(CODE[4]), STR_44(CODE[3]), 
		 -> STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[3]), STR_26(CODE[3]), 
		 -> STR_21(CODE[4]), STR_17(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_116(CODE[3]), STR_112(CODE[3]), STR_107(CODE[3]), STR_103(CODE[3]), 
		 -> STR_98(CODE[4]), STR_94(CODE[4]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[4]), STR_74(CODE[3]), STR_69(CODE[3]), STR_64(CODE[4]), 
		 -> STR_59(CODE[3]), STR_54(CODE[3]), STR_49(CODE[4]), STR_44(CODE[3]), 
		 -> STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[3]), STR_26(CODE[3]), 
		 -> STR_21(CODE[4]), STR_17(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), STR_6(CODE[3]), STR_5(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), STR_6(CODE[3]), STR_5(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_snprintf(BANK0[2]), result(BANK0[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ?_snprintf(BANK0[2]), result(BANK0[2]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> i(BANK1[6]), v(BANK0[6]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), result(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), result(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), result(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), result(BANK0[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> i(BANK1[6]), v(BANK0[6]), 

    S912_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> i(BANK1[6]), v(BANK0[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> i(BANK1[6]), v(BANK0[6]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> i(BANK1[6]), v(BANK0[6]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 11
		 -> i(BANK1[6]), v(BANK0[6]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   83321
                                             92 COMRAM     2     2      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   78205
                                            107 BANK0     14     4     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           23    15      8   77597
                                             84 COMRAM     8     0      8
                                             92 BANK0     15    15      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   76834
                                             76 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   76362
                                             66 COMRAM    10     4      6
                                             56 BANK0     36    36      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8823
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7483
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5241
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2595
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    6928
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   25356
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2960
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8082
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5977
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2147
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    2101
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1746
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     724
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     836
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      5D       6       36.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     79      9B       4       96.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     156       9        0.0%
DATA                 0      0     156      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Jan 09 13:55:00 2021

             ___fldiv@aexp 0019               ___fldiv@bexp 0018                          _i 0150  
                        _v 00F3               ___fldiv@sign 0011                         l31 57CA  
                       l33 57E0                         l42 5B6C                         l35 57F6  
                       l51 5636                         l37 580C                         l54 55D0  
                       l39 580E                         l63 555C                         l57 5AC0  
                       l93 5B4C               ___awdiv@sign 0006        ___wmul@multiplicand 0003  
                      l220 495A                        l207 4670                        l324 5384  
                      l352 54DE                        l337 5434                        l363 4D9A  
                      l531 4F68                        l621 2954                        l541 5110  
                      l358 4D54                        l630 2C24                        l622 2942  
                      l390 4C96                        l711 304E                        l367 5A50  
                      l623 2908                        l714 2EE0                        l538 4F88  
                      l707 2CEA                        l724 3010                        l716 2F58  
                      l548 5130                        l717 2F46                        l638 2A6E  
                      l751 4358                        l647 2B3E                        l663 58A6  
                      l680 320C                        l648 2B2C                        l833 5242  
                      l762 42F0                        l755 4294                        l675 33E8  
                      l771 5B26                        l748 41FC                        l852 5032  
                      l836 5284                        l860 348A                        l916 1EFA  
                      l677 3248                        l854 5060                        l838 52C0  
                      l862 3492                        l686 328E                        l880 36CC  
                      l688 3306                        l944 233A                        l784 4A56  
                      l849 4FF0                        l689 32F4                        l779 4A76  
                      l980 3FF6                        l898 2764                        l978 3FEE  
                      l987 413E                        l996 46F2                        l989 41A4  
                      l998 46FA                        _abs 592E                        _pad 51FC  
             ___awmod@sign 0006                        wreg 000FE8               ___flmul@aexp 0020  
             ___flmul@bexp 0021               ___flmul@sign 001B               ___flmul@temp 0026  
             ___flmul@prod 0022               ___fltol@exp1 000A                       l1012 47F6  
                     l1007 47A4                       l1008 47EE                       l1032 3706  
                     l1017 3BF2                       l1041 37A4                       l1034 370E  
                     l1027 3DBC                       l1019 3BFA                       ?_abs 0013  
                     l1116 0F40                       l1301 574E                       l1222 5A88  
                     l1230 5860                       l1206 3BB8                       l1055 3942  
                     l1071 0756                       l1216 59A8                       l1312 59E0  
                     l1209 3AFC                       l1057 39A6                       l1306 5756  
                     l1251 51FA                       l1164 5964                       l1236 5A18  
                     l1148 5690                       l1149 5698                       l1262 5B76  
                     l1167 596C                       l1159 4E98                       l1096 1B0C  
                     l4001 3246                       l1274 5AF6                       l1195 44E0  
                     l1259 58EA                       l4011 328C                       l4003 3258  
                     l1268 57B2                       l4021 32EC                       l4005 326E  
                     l4013 329E                       l4101 2D34                       l1293 56F8  
                     l1198 44E8                       l1278 4B90                       l4031 335A  
                     l4015 32AC                       l4007 3274                       l4111 2D86  
                     l4103 2D4A                       l1288 56F0                       l4201 52E0  
                     l4041 33C4                       l4025 3316                       l4033 335E  
                     l4017 32B0                       l4009 327E                       l4121 2DCC  
                     l4113 2D94                       l4105 2D56                       l4211 5314  
                     l4203 52EE                       l4043 33C8                       l4035 3378  
                     l4027 3322                       l4019 32BE                       l4131 2E3A  
                     l4123 2DE6                       l4115 2DA0                       l4107 2D6E  
                     l5003 47B8                       l5011 3BCA                       l4221 534E  
                     l4213 531C                       l4205 52F6                       l4045 33D6  
                     l4037 338E                       l4029 3330                       l4301 4D34  
                     l4141 2ED0                       l4133 2E64                       l4125 2DF6  
                     l4117 2DB0                       l4109 2D7A                       l4061 2C40  
                     l5005 47CC                       l5021 3C34                       l5013 3BCC  
                     l5101 3952                       l5111 435A                       l4231 5374  
                     l4223 5356                       l4215 5324                       l4207 52FA  
                     l4047 33DC                       l4039 33A8                       l4303 4D42  
                     l4151 2F10                       l4143 2EDE                       l4135 2E9A  
                     l4127 2E12                       l4119 2DBC                       l4071 2C78  
                     l4063 2C42                       l4311 5A1A                       l5007 47D0  
                     l5023 3C3A                       l5031 3D20                       l5015 3BE6  
                     l5103 3958                       l5121 43C8                       l5113 436E  
                     l3601 51B4                       l4401 51FC                       l4233 537C  
                     l4225 5358                       l4217 5332                       l4209 5302  
                     l4241 5398                       l4049 33DE                       l4305 4D92  
                     l4161 2F82                       l4153 2F3E                       l4145 2EF0  
                     l4137 2EA8                       l4129 2E1E                       l4081 2CA4  
                     l4073 2C88                       l4065 2C52                       l4057 2C26  
                     l4313 5A30                       l4321 4BA8                       l5033 3D32  
                     l5041 3D94                       l5025 3CB0                       l5017 3C22  
                     l5009 3BBA                       l5105 3968                       l5131 43F0  
                     l5123 43CC                       l5115 4372                       l4411 524E  
                     l4403 520C                       l4227 535E                       l4219 5338  
                     l4251 53CC                       l4243 53A0                       l4307 4D98  
                     l4171 2FF8                       l4163 2FAC                       l4147 2EFE  
                     l4139 2EC6                       l4091 2CFA                       l4083 2CB4  
                     l4075 2C8E                       l4067 2C62                       l4059 2C32  
                     l4315 5A40                       l3611 2782                       l4331 4BF8  
                     l5035 3D50                       l5027 3CB6                       l5019 3C2A  
                     l5107 397E                       l5051 36FA                       l5211 0764  
                     l5203 06E4                       l5133 43F8                       l5117 4376  
                     l4413 5262                       l4405 5220                       l4229 5364  
                     l4261 5408                       l4253 53D4                       l4245 53A4  
                     l4237 5386                       l4173 3014                       l4181 303A  
                     l4157 2F68                       l4165 2FB0                       l4149 2F02  
                     l4093 2D0A                       l4085 2CC4                       l4077 2C94  
                     l4069 2C72                       l3701 2936                       l3613 2792  
                     l3621 27BC                       l3605 2766                       l4341 4C22  
                     l4333 4BFC                       l4325 4BBC                       l5037 3D6A  
                     l5029 3CBC                       l4501 5742                       l5061 375E  
                     l5053 3724                       l5045 36CE                       l5301 0D12  
                     l5221 07DC                       l5213 0766                       l4511 5814  
                     l5143 44A0                       l5135 442C                       l5127 43D2  
                     l5119 4392                       l4423 592E                       l4415 5266  
                     l4407 522E                       l4263 540E                       l4255 53DC  
                     l4247 53B2                       l4239 538A                       l4183 303E  
                     l4175 3024                       l4167 2FCA                       l4159 2F74  
                     l4087 2CD4                       l4079 2CA2                       l3711 2986  
                     l3703 2940                       l3631 27EC                       l3623 27CC  
                     l3615 27A2                       l3607 2772                       l4351 4C4A  
                     l4343 4C2C                       l4335 4C0A                       l4327 4BE6  
                     l4319 4B92                       l4431 4DFA                       l5039 3D84  
                     l5063 3764                       l5055 372C                       l5047 36DE  
                     l5311 0DAE                       l5303 0D48                       l5223 07FC  
                     l5231 0864                       l5215 078A                       l5207 06F0  
                     l4505 5A52                       l4513 5828                       l5145 44B2  
                     l5129 43E8                       l4521 4F8A                       l4425 5948  
                     l4417 5294                       l4409 523A                       l4601 3680  
                     l4193 52C2                       l4257 53EA                       l4265 5414  
                     l4249 53BA                       l4281 54B2                       l4273 5436  
                     l4177 3032                       l4169 2FDE                       l4097 2D1E  
                     l4089 2CDA                       l3801 2C12                       l3721 29C2  
                     l3713 2996                       l3705 2962                       l3641 282C  
                     l3633 27FA                       l3625 27D2                       l3617 27B2  
                     l3609 2780                       l4353 4C56                       l4345 4C36  
                     l4329 4BE8                       l4441 4E4C                       l4433 4E22  
                     l5161 4ABC                       l5153 4A78                       l5081 3836  
                     l5073 37D8                       l5065 376C                       l5057 374C  
                     l5049 36E0                       l5401 133A                       l5313 0DC4  
                     l5321 0E2E                       l5241 08FC                       l5233 0888  
                     l5225 080A                       l5217 07C0                       l5209 0744  
                     l4515 5856                       l5147 44C4                       l5139 4462  
                     l4531 4FD6                       l4523 4F9E                       l3811 58C6  
                     l4419 52A8                       l4603 368C                       l4195 52C6  
                     l4267 5424                       l4259 5400                       l4283 54D6  
                     l4275 5464                       l4291 4CC6                       l4179 3034  
                     l4099 2D2A                       l3803 2C14                       l3731 2A08  
                     l3723 29D0                       l3715 29A4                       l3707 2972  
                     l3651 2866                       l3643 282E                       l3635 27FC  
                     l3627 27E4                       l3619 27B4                       l4187 5862  
                     l4355 4C66                       l4435 4E2E                       l4427 4D9C  
                     l4451 5768                       l4611 1B0E                       l5163 4AEC  
                     l5155 4AA2                       l4371 4EE0                       l4363 4E9A  
                     l5075 37EA                       l5083 384A                       l5067 3788  
                     l5091 38C4                       l5059 3754                       l5411 13AA  
                     l5403 1372                       l5331 0F10                       l5323 0E5C  
                     l5315 0DD2                       l5243 091C                       l5235 0890  
                     l5251 0984                       l5219 07CE                       l4517 585A  
                     l4509 5810                       l4541 5014                       l4525 4FAA  
                     l3901 4896                       l3813 58CA                       l3821 5AEA  
                     l4605 3694                       l4197 52D4                       l4269 542C  
                     l4285 54DC                       l4277 5474                       l4293 4CD6  
                     l3741 2A84                       l3733 2A3C                       l3725 29D2  
                     l3717 29B2                       l3661 287A                       l3653 286A  
                     l3637 280C                       l3645 2836                       l3629 27E6  
                     l4189 5872                       l4357 4C76                       l4445 4E90  
                     l4429 4DBC                       l4453 569A                       l4701 1EBA  
                     l4621 1B62                       l4613 1B18                       l5165 4B08  
                     l4381 4F50                       l4373 4EEE                       l4365 4EA6  
                     l5093 38E0                       l5085 385A                       l5069 3798  
                     l5501 19C4                       l5421 148C                       l5413 13F6  
                     l5341 0FD2                       l5317 0E02                       l5309 0D9A  
                     l5261 0A2A                       l5253 09A6                       l5245 092A  
                     l5237 089E                       l5229 0852                       l5181 06AC  
                     l5173 0664                       ?_pad 0011                       l3591 5132  
                     l4543 5042                       l4535 4FE8                       l4527 4FB6  
                     l3903 48A4                       l3911 490A                       l3807 58A8  
                     l3815 5AC2                       l4607 36A4                       l4551 340A  
                     l4199 52DC                       l4279 54A2                       l4295 4D04  
                     l3751 2AC0                       l3743 2A94                       l3735 2A3E  
                     l3727 29DC                       l3719 29BE                       l3671 288E  
                     l3663 287E                       l3655 286E                       l3647 2846  
                     l3639 281C                       l4359 4C86                       l4439 4E3A  
                     l4471 3A40                       l4463 39A8                       l4703 1ECC  
                     l4631 1BA6                       l4623 1B6C                       l4615 1B28  
                     l5167 4B1A                       l5159 4AAE                       l4383 4F62  
                     l4375 4F00                       l4367 4EC4                       l4391 509C  
                     l5095 38FE                       l5087 3860                       l5079 3824  
                     l5503 19FA                       l5327 0ECA                       l5271 0AD2  
                     l5263 0A4E                       l5255 09B6                       l5239 08C2  
                     l5191 06D2                       l5183 06B8                       l5175 0688  
                     l3833 5B28                       l3593 5144                       l4545 5054  
                     l4537 4FFC                       l4529 4FC4                       l3841 44EE  
                     l3913 491A                       l3905 48D2                       l3809 58B4  
                     l3817 5ACE                       l4561 347E                       l4553 3432  
                     l3921 305C                       l4297 4D14                       l4289 4C98  
                     l3761 2AEC                       l3753 2AC2                       l3737 2A4E  
                     l3729 29E2                       l3681 28A2                       l3673 2892  
                     l3665 2882                       l3657 2872                       l3649 2858  
                     l4481 3B5C                       l4465 39C8                       l4449 5758  
                     l3825 59E2                       l4457 56D0                       l4801 23EE  
                     l4721 1F7C                       l4705 1ED4                       l4633 1BB2  
                     l4641 1BC8                       l4625 1B74                       l4617 1B36  
                     l5169 4B58                       l4377 4F2E                       l4369 4ECC  
                     l4393 50AA                       l4385 5062                       l5097 3918  
                     l5089 3866                       l5505 1A20                       l5513 1A72  
                     l5441 15EA                       l5433 1562                       l5425 14AC  
                     l5417 1432                       l5409 1386                       l5361 1106  
                     l5353 1092                       l5345 100A                       l5329 0EDC  
                     l5337 0F54                       l5281 0BC0                       l5273 0B08  
                     l5265 0A80                       l5257 09E8                       l5249 0972  
                     l5185 06BA                       l5177 0696                       l5601 4978  
                     l3835 5B44                       l3595 5156                       l4539 5010  
                     l3851 454E                       l3843 44FC                       l3915 493A  
                     l3907 48F2                       l3819 5AD2                       l4571 34C8  
                     l4563 349A                       l4555 3452                       l3931 309C  
                     l3923 306A                       l4299 4D22                       l3771 2B24  
                     l3755 2AD0                       l3747 2AA8                       l3763 2AEE  
                     l3739 2A5E                       l3691 2900                       l3675 2896  
                     l3667 2886                       l3659 2876                       l3683 28A6  
                     l4483 3B70                       l4475 3AB0                       l4467 3A1E  
                     l4459 56E2                       l4811 2434                       l4803 23FC  
                     l4731 1FB4                       l4723 1F84                       l4715 1F18  
                     l4707 1EEE                       l4651 1C52                       l4643 1BEE  
                     l4635 1BBA                       l4627 1B86                       l4619 1B3E  
                     l4379 4F4E                       l4395 50D8                       l4387 5080  
                     l4491 596E                       l5099 3932                       l5531 1AFA  
                     l5515 1A96                       l5523 1AC4                       l5507 1A30  
                     l5451 1694                       l5443 160E                       l5435 1598  
                     l5427 14E2                       l5419 1456                       l5371 11C4  
                     l5363 113C                       l5355 10B6                       l5347 1040  
                     l5339 0F8A                       l5291 0C6A                       l5283 0BF6  
                     l5275 0B52                       l5259 09F8                       l5195 06D8  
                     l5187 06CC                       l5179 06A8                       l5611 49B8  
                     l5701 423E                       l3597 5160                       l3861 4598  
                     l3853 4552                       l3845 451C                       l3909 4904  
                     l4581 3566                       l4573 34D2                       l4565 34AC  
                     l4557 3462                       l4549 33EA                       l3941 30C2  
                     l3933 309E                       l3925 306C                       l3781 2BA2  
                     l3757 2AD8                       l3749 2AB2                       l3765 2AFC  
                     l3693 2916                       l3685 28AA                       l3677 289A  
                     l3669 288A                       l4485 3B98                       l4477 3AEC  
                     l4469 3A32                       l4821 245E                       l4813 2438  
                     l4805 2404                       l4741 1FFE                       l4733 1FC2  
                     l4717 1F2A                       l4725 1F88                       l4709 1F06  
                     l4661 1CC2                       l4653 1C6A                       l4637 1BBE  
                     l4629 1B94                       l4397 50F8                       l4389 5088  
                     l3829 59AA                       l5517 1AA4                       l5461 1752  
                     l5429 152A                       l5381 124A                       l5373 11FC  
                     l5293 0C8E                       l5269 0A9C                       l5621 4A46  
                     l5613 49CA                       l5605 4980                       l5551 57E2  
                     l5543 57B6                       l5631 55E4                       l5711 42C6  
                     l5703 424A                       l3599 517E                       l3871 4608  
                     l3863 45A6                       l3855 455E                       l3847 4520  
                     l3839 44EA                       l4591 3636                       l4575 34D8  
                     l4583 35CA                       l4567 34BA                       l4559 3464  
                     l3951 3102                       l3943 30D0                       l3927 307C  
                     l3935 30A6                       l3919 3050                       l3791 2BE8  
                     l3775 2B4E                       l3783 2BA4                       l3767 2B00  
                     l3759 2ADC                       l3695 2922                       l3687 28D4  
                     l3679 289E                       l4487 3BA8                       l4479 3B20  
                     l4911 273E                       l4903 2708                       l4831 2492  
                     l4823 2464                       l4815 243E                       l4807 2416  
                     l4751 2044                       l4743 2010                       l4735 1FC6  
                     l4727 1F90                       l4719 1F46                       l4655 1C74  
                     l4647 1C24                       l4639 1BC2                       l4399 510A  
                     l4495 56FA                       l5519 1AB8                       l5463 1778  
                     l5471 17FC                       l5391 12BA                       l5383 1282  
                     l5375 1208                       l5279 0B8A                       l5199 06DE  
                     l5623 4A5E                       l5615 49EE                       l5607 499E  
                     l5553 57F0                       l5545 57C4                       l5641 562A  
                     l5633 55F6                       l5721 4304                       l5713 42D2  
                     l5705 427C                       l3873 461A                       l3865 45B8  
                     l3857 457C                       l3849 452E                       l4585 35E4  
                     l4593 3646                       l4577 355A                       l4569 34C0  
                     l3961 3142                       l3953 3104                       l3945 30D2  
                     l3937 30B6                       l3929 308C                       l3793 2BF6  
                     l3785 2BB4                       l3777 2B5A                       l3769 2B0E  
                     l3697 2926                       l3689 28F0                       l4913 2744  
                     l4905 271A                       l4817 244A                       l4809 2424  
                     l4825 246A                       l4833 2498                       l4841 2530  
                     l4761 2158                       l4753 20A8                       l4737 1FD8  
                     l4745 2018                       l4729 1FA2                       l4665 1CF8  
                     l4649 1C36                       l4921 3FC6                       l5473 1832  
                     l5465 1788                       l5457 16E6                       l5449 165E  
                     l5393 12F0                       l5369 118E                       l5289 0C46  
                     l5529 1AD6                       l5561 5640                       l5617 4A00  
                     l5625 4A6E                       l5609 49AC                       l5555 57F8  
                     l5547 57CC                       l5571 5B58                       l5651 557A  
                     l5643 5630                       l5635 55FC                       l5723 4328  
                     l5715 42E0                       l5707 427E                       l3867 45E6  
                     l3859 4584                       l3875 4620                       l3891 482E  
                     l3883 47F8                       l4595 3658                       l4587 3602  
                     l4579 3560                       l3971 3172                       l3963 314A  
                     l3947 30E2                       l3955 310C                       l3939 30BC  
                     l3795 2BFC                       l3787 2BC4                       l3779 2B68  
                     l3699 2934                       l4907 2726                       l4851 259A  
                     l4843 254E                       l4835 24F0                       l4827 247C  
                     l4819 245A                       l4771 2216                       l4763 218C  
                     l4755 2100                       l4747 2020                       l4739 1FE6  
                     l4691 1E5A                       l4683 1D92                       l4667 1D0A  
                     l4659 1C9C                       l4931 402C                       l4923 3FC8  
                     l4499 5730                       l5491 193E                       l5475 1868  
                     l5467 17C0                       l5459 171C                       l5379 1214  
                     l5299 0CDC                       l5563 564E                       l5619 4A10  
                     l5557 5806                       l5549 57DA                       l5573 5B5A  
                     l5661 55AC                       l5653 558A                       l5645 555E  
                     l5637 5606                       l5629 55D4                       l5581 5A9A  
                     l5725 4338                       l5717 42FE                       l5709 428A  
                     l3877 4630                       l3869 4606                       l3893 483C  
                     l3885 47FC                       l4597 3668                       l4589 361C  
                     l3981 31B0                       l3973 3172                       l3965 314E  
                     l3957 311C                       l3949 30F2                       l3797 2BFE  
                     l3789 2BE4                       l4909 272E                       l4861 25D8  
                     l4853 259E                       l4845 256A                       l4837 2524  
                     l4829 248E                       l4781 22EA                       l4773 2226  
                     l4765 21BE                       l4757 2134                       l4749 2030  
                     l4693 1E62                       l4685 1DC6                       l4669 1D26  
                     l4677 1D42                       l4941 405E                       l4933 4038  
                     l4925 3FE2                       l5493 194C                       l5477 188E  
                     l5485 18E0                       l5389 1296                       l5565 5674  
                     l5741 3DCC                       l5575 5B6A                       l5567 5B50  
                     l5671 55CA                       l5663 55B2                       l5655 5590  
                     l5647 5564                       l5639 5618                       l5591 5AB4  
                     l5583 5AA2                       l5727 4346                       l5719 4300  
                     l3879 4650                       l3895 485C                       l3887 480A  
                     l4599 366E                       l3991 31FC                       l3983 31C0  
                     l3959 3132                       l3799 2C04                       l4871 260A  
                     l4863 25E0                       l4855 25AE                       l4847 257C  
                     l4839 252C                       l4791 2332                       l4783 22FE  
                     l4775 225A                       l4767 21D4                       l4759 213A  
                     l4687 1DCC                       l4695 1E94                       l4679 1D5C  
                     l4951 4114                       l4943 4064                       l4935 403E  
                     l4927 401E                       l4919 3FB6                       l5487 1904  
                     l5479 189E                       l5399 1304                       l5559 5638  
                     l5751 3DF4                       l5743 3DCE                       l5569 5B52  
                     l5665 55B8                       l5657 55A0                       l5649 5574  
                     l5593 5AB6                       l5585 5AA4                       l5577 5A8C  
                     l5673 54E0                       l5729 4348                       l3897 487A  
                     l3889 482A                       l3993 320A                       l3985 31D0  
                     l3977 3186                       l3969 3162                       l4873 2610  
                     l4881 2660                       l4865 25EE                       l4857 25C0  
                     l4849 258A                       l4793 2356                       l4777 22B0  
                     l4785 2302                       l4769 2206                       l4697 1EA4  
                     l4689 1E26                       l4961 4176                       l4953 412E  
                     l4937 4046                       l4945 40C2                       l4929 4026  
                     l5489 1928                       l5681 5AF8                       l5761 3E2A  
                     l5753 3DFE                       l5745 3DD4                       l5667 55BE  
                     l5659 55A6                       l5595 5ABE                       l5587 5AAC  
                     l5579 5A98                       l5675 54EC                       l5691 41C6  
                     l3899 4882                       l3995 3216                       l3987 31D8  
                     l3979 31A0                       l4891 26B0                       l4883 2672  
                     l4875 2636                       l4867 25F6                       l4859 25C8  
                     l4795 23BA                       l4787 2312                       l4779 22B6  
                     l4699 1EA8                       l4955 414E                       l4963 417C  
                     l4947 40DC                       l4939 4058                       l4971 468C  
                     l5499 198E                       l5683 5B02                       l5771 3E5C  
                     l5763 3E36                       l5755 3E0A                       l5747 3DE6  
                     l5739 3DBE                       l5669 55C4                       l5589 5AAE  
                     l5677 551C                       l5693 420C                       l3997 3234  
                     l3989 31E8                       l4893 26B8                       l4885 268C  
                     l4877 2652                       l4869 25FE                       l4797 23CA  
                     l4789 2326                       l4957 4160                       l4949 40FA  
                     l4981 46D0                       l4973 469E                       l5845 0716  
                     l5597 495C                       l5781 3F22                       l5773 3E62  
                     l5765 3E40                       l5757 3E14                       l5749 3DF0  
                     l5679 5520                       l5695 4222                       l5687 41A8  
                     l5847 4416                       l3999 3236                       l4895 26C8  
                     l4887 2692                       l4879 265A                       l4799 23DC  
                     l4959 4166                       l4991 4754                       l4975 46A6  
                     l4967 4672                       l5599 496E                       l5783 3F2C  
                     l5775 3E74                       l5791 3F7C                       l5767 3E4C  
                     l5759 3E20                       l5689 41B8                       l4897 26CE  
                     l4889 26A4                       l4993 4760                       l4985 471E  
                     l4977 46BA                       l4969 4684                       l5793 3F8A  
                     l5785 3F38                       l5777 3EC0                       l5769 3E52  
                     l5699 4236                       l4899 26D4                       l4995 477E  
                     l4987 4732                       l4979 46C2                       l5787 3F66  
                     l5779 3EF4                       l4997 4782                       l4989 4736  
                     l5789 3F70                       l4999 4786                       STR_1 0601  
                     STR_2 060C                       STR_3 0660                       STR_4 065E  
                     STR_5 065B                       STR_6 065B                       STR_7 0617  
                     STR_8 0627                       u4000 28EC                       u4001 28E6  
                     u4010 28EE                       u4100 2A08                       u4020 2916  
                     u4101 2A04                       u4021 2912                       u4110 2A4E  
                     u4030 2934                       u4111 2A4A                       u4031 2930  
                     u5000 5400                       u4200 2B3A                       u4120 2A84  
                     u4040 2954                       u5001 53FC                       u4201 2B36  
                     u4121 2A80                       u4041 2950                       u5010 5424  
                     u4210 2B4E                       u4130 2A94                       u4050 2962  
                     u5011 5420                       u4211 2B4A                       u4131 2A90  
                     u4051 295E                       u4300 5AEA                       u5020 5464  
                     u5100 5A30                       u4220 2B68                       u4140 2AC0  
                     u4060 2972                       u4301 5AE6                       u5021 5460  
                     u5101 5A2C                       u4221 2B64                       u4141 2ABC  
                     u4061 296E                       u5030 54A2                       u4230 2BA2  
                     u4150 2AD0                       u4070 29A4                       u5110 4BA8  
                     u4310 5A12                       u5031 549E                       u4231 2B9E  
                     u4151 2ACC                       u4071 29A0                       u5111 4BA4  
                     u4311 5A0C                       u4400 45E6                       u5040 54D6  
                     u4240 2BB4                       u4160 2AEC                       u4080 29B2  
                     u5120 4BDC                       u4320 5A14                       u6000 1F2A  
                     u5200 4EEE                       u4401 45E2                       u5041 54D2  
                     u4241 2BB0                       u4161 2AE8                       u4081 29AE  
                     u6001 1F26                       u5201 4EEA                       u4410 4630  
                     u5050 4CC6                       u4250 2BC4                       u4170 2AFC  
                     u4090 29D0                       u5130 4C0A                       u6010 1F46  
                     u5210 4F2E                       u4330 59DA                       u4411 462C  
                     u5051 4CC2                       u4251 2BC0                       u4171 2AF8  
                     u4091 29CC                       u5131 4C06                       u6011 1F42  
                     u5211 4F2A                       u4331 59D4                       u4420 480A  
                     u4500 308C                       u5060 4D04                       u4260 2BE4  
                     u4180 2B0E                       u5140 4C1E                       u5300 4DDC  
                     u6100 21BE                       u6020 1F7C                       u5220 5080  
                     u4340 59DC                       u4421 4806                       u4501 3088  
                     u5061 4D00                       u4261 2BE0                       u4181 2B0A  
                     u5141 4C1A                       u5125 4BD2                       u6101 21BA  
                     u6021 1F78                       u5221 507C                       u4350 44FC  
                     u4430 483C                       u4510 30D0                       u5070 4D22  
                     u4270 2BF6                       u4190 2B24                       u5150 4C46  
                     u5310 4DFA                       u6110 2206                       u6030 1FA2  
                     u5230 50AA                       u4351 44F8                       u4431 4838  
                     u4511 30CC                       u5071 4D1E                       u4271 2BF2  
                     u4191 2B20                       u5151 4C42                       u5311 4DF6  
                     u6111 2202                       u6031 1F9E                       u5231 50A6  
                     u4360 452E                       u4440 487A                       u4600 326E  
                     u4520 30E2                       u5080 4D42                       u4280 2C12  
                     u5160 4C66                       u5320 4E22                       u5400 56CC  
                     u6200 2416                       u6120 2216                       u6040 1FB4  
                     u5240 50D8                       u7000 0888                       u4361 452A  
                     u4441 4876                       u4601 326A                       u4521 30DE  
                     u5081 4D3E                       u4281 2C0E                       u5161 4C62  
                     u5321 4E1E                       u5305 4DD2                       u6201 2412  
                     u6121 2212                       u6041 1FB0                       u5241 50D4  
                     u7001 0884                       u4450 48A4                       u4290 58EA  
                     u5250 520C                       u4610 328C                       u4530 30F2  
                     u5090 4D92                       u5170 4C76                       u5330 4E4C  
                     u5410 56E2                       u6210 2424                       u6130 22B0  
                     u6050 1FC2                       u7010 08C2                       u4371 4558  
                     u4451 48A0                       u4291 58E6                       u5251 5208  
                     u4611 3288                       u4531 30EE                       u5091 4D8E  
                     u5171 4C72                       u5331 4E48                       u5411 56DE  
                     u6211 2420                       u6131 22AC                       u6051 1FBE  
                     u7011 08BE                       u4380 457C                       u4460 48D2  
                     u5260 522E                       u4700 33D6                       u4620 32AC  
                     u4540 3132                       u3900 2780                       u5500 3B5C  
                     u5420 39F0                       u6300 268C                       u6220 247C  
                     u6140 22FE                       u6060 1FD8                       u7100 0BC0  
                     u7020 096A                       u4381 4578                       u4461 48CE  
                     u5261 522A                       u4701 33D2                       u4621 32A8  
                     u4541 312E                       u3901 277C                       u5501 3B58  
                     u6301 2688                       u6221 2478                       u6141 22FA  
                     u6061 1FD4                       u5181 4EA0                       u7101 0BBC  
                     u7021 0964                       u4390 45A6                       u4470 491A  
                     u5270 5284                       u4630 32BE                       u4550 3172  
                     u4710 2C40                       u3910 2792                       u5350 4E86  
                     u5510 3B98                       u5430 3A1E                       u6310 26A4  
                     u6230 254E                       u6150 2326                       u6070 1FE6  
                     u5190 4EC4                       u7110 0BF6                       u7030 096C  
                     u4391 45A2                       u4471 4916                       u5271 5280  
                     u4631 32BA                       u4551 316E                       u4711 2C3C  
                     u3911 278E                       u5351 4E80                       u5511 3B94  
                     u5431 3A1A                       u6311 26A0                       u6231 254A  
                     u6151 2322                       u6071 1FE2                       u5191 4EC0  
                     u7111 0BF2                       u5600 5856                       u5280 5294  
                     u4640 32EC                       u4560 31E8                       u4480 306A  
                     u4800 2EDE                       u4720 2C52                       u3920 27A2  
                     u5360 4E88                       u5440 3A40                       u6320 2702  
                     u6240 256A                       u6160 23CA                       u6080 2010  
                     u6400 4114                       u5520 59A2                       u7200 0EDC  
                     u7120 0C6A                       u7040 0984                       u5601 5852  
                     u5281 5290                       u4641 32E8                       u4561 31E4  
                     u4481 3066                       u4801 2EDA                       u4721 2C4E  
                     u3921 279E                       u5345 4E5E                       u5441 3A3C  
                     u5425 39E6                       u6321 26FC                       u6241 2566  
                     u6161 23C6                       u6081 200C                       u6401 4110  
                     u5521 599C                       u7201 0ED8                       u7121 0C66  
                     u7041 0980                       u5610 4F9E                       u5290 5948  
                     u4650 3302                       u4570 320A                       u4490 307C  
                     u4810 2EFE                       u4730 2C62                       u3930 27E4  
                     u5370 57A0                       u6330 2704                       u6250 257C  
                     u6170 23DC                       u6090 2158                       u6410 412E  
                     u5530 59A4                       u7210 0F8A                       u7130 0C8E  
                     u7050 09B6                       u5611 4F9A                       u5291 5944  
                     u4651 32FE                       u4571 3206                       u4491 3078  
                     u4811 2EFA                       u4731 2C5E                       u3931 27E0  
                     u6251 2578                       u6171 23D8                       u6091 2154  
                     u6411 412A                       u7211 0F86                       u7131 0C8A  
                     u7051 09B2                       u3860 5144                       u5620 4FC4  
                     u5700 347E                       u4900 52D4                       u4660 3316  
                     u4580 3234                       u4820 2F10                       u4740 2CA2  
                     u3940 27FA                       u5460 3AAC                       u5380 57B2  
                     u6340 271A                       u6260 258A                       u6180 23EE  
                     u6420 413E                       u6500 4754                       u5540 572A  
                     u7300 1456                       u7220 1040                       u7140 0D12  
                     u7060 09F8                       u3861 5140                       u5621 4FC0  
                     u5701 347A                       u4901 52D0                       u4661 3312  
                     u4581 3230                       u4821 2F0C                       u4741 2C9E  
                     u3941 27F6                       u5461 3AA8                       u5381 57AE  
                     u6341 2716                       u6261 2586                       u6181 23EA  
                     u6421 413A                       u6501 4750                       u5541 5724  
                     u7301 1452                       u7221 103C                       u7141 0D0E  
                     u7061 09F4                       u3870 5156                       u5630 4FE4  
                     u5710 34AC                       u4910 52EE                       u4670 3330  
                     u4590 3258                       u4830 2F3E                       u4750 2CB4  
                     u3950 280C                       u5470 3AD0                       u5390 56CA  
                     u6270 25C0                       u6190 23FC                       u6430 414E  
                     u6350 3FC6                       u6510 47A4                       u5550 572C  
                     u7310 14E2                       u7230 10B6                       u7150 0D48  
                     u7070 0A4E                       u3871 5152                       u5631 4FE0  
                     u5711 34A8                       u4911 52EA                       u4671 332C  
                     u4591 3254                       u4831 2F3A                       u4751 2CB0  
                     u3951 2808                       u5455 3A54                       u5391 56C4  
                     u6271 25BC                       u6191 23F8                       u6431 414A  
                     u6351 3FC2                       u6511 47A0                       u7311 14DE  
                     u7231 10B2                       u7151 0D44                       u7071 0A4A  
                     u3880 517E                       u5640 5032                       u5800 3680  
                     u5720 34BA                       u4920 5314                       u4680 3378  
                     u4840 2F54                       u4760 2CC4                       u3960 281C  
                     u5480 3AEC                       u5456 3A5E                       u6280 25EE  
                     u6440 4160                       u6360 3FE2                       u6520 47B4  
                     u6600 3D94                       u5560 5742                       u7400 1928  
                     u7320 1598                       u7240 113C                       u7160 0DAE  
                     u7080 0AD2                       u3881 517A                       u5641 502E  
                     u5801 367C                       u5721 34B6                       u4921 5310  
                     u4681 3374                       u4841 2F50                       u4761 2CC0  
                     u3961 2818                       u5481 3AE8                       u5457 3A6E  
                     u5377 5796                       u6281 25EA                       u6441 415C  
                     u6361 3FDE                       u6521 47B0                       u6601 3D90  
                     u5561 573E                       u7401 1924                       u7321 1594  
                     u7241 1138                       u7161 0DAA                       u7081 0ACE  
                     u5570 5A82                       u3890 51B4                       u5650 5042  
                     u5730 35E4                       u4930 5332                       u4690 33A8  
                     u4850 2F68                       u4770 2CFA                       u3970 2858  
                     u5490 3B40                       u6290 2672                       u5810 1B36  
                     u6370 409C                       u6530 47EE                       u6610 36DE  
                     u7410 19C4                       u7330 160E                       u7250 11C4  
                     u7170 0E5C                       u7090 0B08                       u5571 5A7C  
                     u3891 51B0                       u5651 503E                       u5731 35E0  
                     u4931 532E                       u4691 33A4                       u4851 2F64  
                     u4771 2CF6                       u3971 2854                       u5475 3AC6  
                     u6291 266E                       u5811 1B32                       u6531 47EA  
                     u6451 467C                       u6611 36DA                       u7411 19C0  
                     u7331 160A                       u7251 11C0                       u7171 0E58  
                     u7091 0B04                       u5580 5A84                       u5740 3602  
                     u5660 341A                       u4940 534E                       u4860 2F82  
                     u4780 2D0A                       u3980 2866                       u5900 1CF0  
                     u5820 1B86                       u6380 40DC                       u6460 469E  
                     u6540 3BCA                       u6700 3836                       u6620 36FA  
                     u7420 19FA                       u7340 1694                       u7260 124A  
                     u7180 0EC2                       u7500 499E                       u5741 35FE  
                     u5661 3414                       u4941 534A                       u4861 2F7E  
                     u4781 2D06                       u3981 2862                       u5901 1CEA  
                     u5821 1B82                       u6381 40D8                       u6461 469A  
                     u6541 3BC6                       u6701 3832                       u6621 36F6  
                     u7421 19F6                       u7341 1690                       u7261 1246  
                     u7181 0EBC                       u7501 499A                       u5590 5828  
                     u5750 361C                       u5670 341C                       u4950 5374  
                     u4870 2FCA                       u4790 2E84                       u3990 28D4  
                     u5910 1CF2                       u5830 1B94                       u6390 40FA  
                     u6470 46D0                       u6550 3BE6                       u6710 389E  
                     u6630 3724                       u7430 1A96                       u7350 171C  
                     u7270 12BA                       u7190 0EC4                       u7510 4A00  
                     u5591 5824                       u5751 3618                       u4951 5370  
                     u4871 2FC6                       u3991 28D0                       u5495 3B36  
                     u5831 1B90                       u6391 40F6                       u6375 408A  
                     u6471 46CC                       u6551 3BE2                       u6631 3720  
                     u7431 1A92                       u7351 1718                       u7271 12B6  
                     u7511 49FC                       u7440 57C4                       u7600 41C6  
                     u6800 43E4                       u5760 3636                       u5680 3432  
                     u4960 5398                       u4880 2FF8                       u5920 1D0A  
                     u5840 1BA6                       u6480 46EE                       u6560 3D32  
                     u6720 38E0                       u6640 3788                       u7360 1752  
                     u7280 133A                       u7520 4A10                       u7441 57C0  
                     u7601 41C2                       u6801 43E0                       u5761 3632  
                     u5681 342E                       u4961 5394                       u4881 2FF4  
                     u5921 1D06                       u5841 1BA2                       u6481 46EA  
                     u6561 3D2E                       u6721 38DC                       u6641 3784  
                     u7361 174E                       u7281 1336                       u7521 4A0C  
                     u7450 57DA                       u7610 4222                       u6810 449A  
                     u5770 3646                       u5690 3462                       u4970 53B2  
                     u4890 3032                       u5930 1D8E                       u5850 1BEE  
                     u6490 471A                       u6570 3D50                       u6730 38FE  
                     u6650 37D2                       u7370 1832                       u7290 13AA  
                     u7530 4A46                       u7451 57D6                       u7611 421E  
                     u6811 4494                       u5771 3642                       u5691 345E  
                     u4971 53AE                       u4891 302E                       u4795 2E7A  
                     u5931 1D8A                       u5851 1BEA                       u6491 4716  
                     u6571 3D4C                       u6731 38FA                       u6715 388C  
                     u6651 37CC                       u7371 182E                       u7291 13A6  
                     u7531 4A42                       u7460 57F0                       u7540 55E4  
                     u7620 4278                       u6820 449C                       u5780 3658  
                     u4980 53CC                       u5940 1E22                       u5860 1C1C  
                     u6900 4B58                       u6580 3D6A                       u6740 3918  
                     u6660 37D4                       u7380 1868                       u7700 3F9A  
                     u7461 57EC                       u7541 55E0                       u7621 4274  
                     u5781 3654                       u4981 53C8                       u5941 1E1E  
                     u5861 1C16                       u6901 4B54                       u6581 3D66  
                     u6741 3914                       u7381 1864                       u7701 3F94  
                     u7470 5806                       u7550 5618                       u7630 42C2  
                     u6830 44B2                       u5790 3668                       u4990 53EA  
                     u5950 1E94                       u5870 1C1E                       u6910 4B78  
                     u6590 3D84                       u6750 3932                       u6670 37EA  
                     u7390 1904                       u7471 5802                       u7551 5614  
                     u7631 42BE                       u6831 44AE                       u5791 3664  
                     u4991 53E6                       u5951 1E90                       u6591 3D80  
                     u6751 392E                       u6671 37E6                       u7391 1900  
                     u7560 5518                       u7640 42E0                       u6840 44C4  
                     u5960 1EBA                       u5880 1C36                       u6760 3942  
                     u6680 381E                       u6920 0688                       u7480 5690  
                     u7641 42DC                       u6841 44C0                       u5961 1EB6  
                     u5881 1C32                       u6905 4B48                       u6761 393E  
                     u6681 3818                       u6921 0684                       u7481 568C  
                     u7570 554C                       u7650 42F0                       u5970 1ECC  
                     u5890 1CC2                       u6850 4AA2                       u6770 3952  
                     u6690 3820                       u6930 0756                       u7490 496E  
                     u7706 3F9C                       u7651 42EC                       u5971 1EC8  
                     u5891 1CBE                       u6907 4B3E                       u6851 4A9E  
                     u6771 394E                       u6931 0752                       u7491 496A  
                     u7580 555C                       u7660 42FE                       u6780 4392  
                     u5980 1EEE                       u6860 4ADC                       u6940 0764  
                     u7717 5AA6                       u7581 5558                       u7661 42FA  
                     u6781 438E                       u5981 1EEA                       u6917 4B6E  
                     u6941 0760                       u7670 4338                       u7590 41B8  
                     u6790 43C8                       u5990 1F14                       u6870 4AEC  
                     u6950 078A                       u7727 5AB8                       u7567 550E  
                     u7671 4334                       u7591 41B4                       u6791 43C4  
                     u5991 1F10                       u6871 4AE8                       u6951 0786  
                     u7680 4346                       u6880 4B08                       u6960 07CE  
                     u7737 556A                       u7577 5542                       u7681 4342  
                     u6881 4B04                       u6961 07CA                       u6890 4B1A  
                     u6970 084A                       u7690 3F8A                       u7747 5580  
                     u6891 4B16                       u6867 4AD2                       u6971 0844  
                     u7691 3F86                       u6980 084C                       u7757 5596  
                     u6990 0864                       u7767 5B60                       u6991 0860  
                     abs@a 0013          ?_Lcd_Write_String 0005                       _dbuf 0100  
                     _atoi 435A                       _ctoa 4F8A                       _main 3DBE  
                     _dtoa 33EA                       _prec 00ED                       _otoa 3FB6  
                     _nout 00E9                       pad@i 0018                       pad@p 0015  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf1 000FE7  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 001A  
                     fsr2l 000FD9                       _stoa 4672                       _utoa 3BBA  
                     _xtoa 36CE              ___fpclassifyf 4D9C                       prodh 000FF4  
                     prodl 000FF3                       start 0000         ??_Lcd_Write_String 0007  
          ___fldiv@new_exp 0012            __end_of_Lcd_Cmd 5B6E               _tolower$1378 000D  
             ___param_bank 000000                      ??_abs 0015                      ??_pad 0017  
            ___fltol@sign1 0009            __end_of___aodiv 4672                      ?_atoi 0008  
                    ?_ctoa 000A            __end_of___fladd 2C26                      ?_main 0001  
                    ?_dtoa 001C            __end_of___aomod 495C            __end_of___fldiv 33EA  
          __end_of___awdiv 5386            __end_of___flneg 5A52                      STR_11 061B  
                    STR_12 062F                      STR_21 062B                      STR_30 062C  
                    STR_15 0623                      STR_17 0623                      STR_33 0646  
                    STR_26 0624                      STR_42 0649                      STR_35 0646  
                    STR_19 062B                      STR_44 0649            __end_of___awmod 5436  
                    STR_37 064C                      STR_54 0638                      STR_62 0633  
                    STR_39 064C                      STR_47 0637                      STR_64 0633  
                    STR_72 064F                      STR_49 0637                      STR_57 0652  
                    STR_74 064F                      STR_59 0652                      STR_84 063C  
                    STR_92 063F                      STR_69 0634                      STR_77 063B  
                    STR_94 063F                      STR_79 063B                      STR_87 0655  
                    STR_96 061F            __end_of___flmul 3050                      STR_89 0655  
                    STR_98 061F                      ?_otoa 001C            __end_of___flsub 58A8  
          __end_of___fltol 4C98                      ?_stoa 000A                      ?_utoa 001C  
          __end_of___lodiv 4F8A            ___awdiv@divisor 0003                      ?_xtoa 001C  
          __end_of___lomod 5132            ___awdiv@counter 0005               vfpfcnvrt@fmt 0045  
             vfpfcnvrt@llu 00B4    __size_of_Lcd_Set_Cursor 0066                      _TRISD 000F95  
                    _flags 00EF                      _errno 00F1                      _fputc 5132  
          __end_of_isalpha 59AA                      _fputs 58A8            __end_of_isdigit 5A8A  
                    atoi@n 0015                      pad@fp 0011                      atoi@s 0008  
                    _width 00EB                      ctoa@c 000C                      _putch 5B76  
                    ctoa@l 000E                      ctoa@w 0010                      dtoa@d 001E  
                    dtoa@i 003E                      dtoa@n 0036                      dtoa@p 0030  
                    dtoa@s 0034                      dtoa@w 0032            __end_of_islower 59E2  
          __end_of_isspace 5862            __end_of_isupper 5A1A                      tablat 000FF5  
                    otoa@d 001E                      otoa@i 003C                      otoa@n 0034  
                    otoa@p 002E                      otoa@t 0030                      otoa@w 0032  
                    plusw1 000FE3                      plusw2 000FDB                      stoa@i 0016  
                    stoa@l 001E                      stoa@p 001C                      stoa@s 000C  
                    stoa@w 0018                      utoa@d 001E                      utoa@i 003A  
                    utoa@n 0032                      utoa@p 002E                      utoa@w 0030  
                    status 000FD8             ?___fpclassifyf 0001            __end_of_tolower 56FA  
                    xtoa@c 0041                      xtoa@d 001E                      xtoa@i 003F  
                    xtoa@n 0037                      xtoa@p 0033                      xtoa@w 0035  
                    xtoa@x 0026            __end_of_strncmp 4B92            __end_of_toupper 5758  
         ___lodiv@dividend 0001           __end_of_Lcd_Init 55D2               _toupper$1393 000D  
         __end_of_Lcd_Port 5810            __initialization 58EC               __end_of_atoi 44EA  
             __end_of_ctoa 5062               __end_of_main 3FB6               __end_of_dtoa 36CE  
             __end_of_otoa 41A6               __end_of_stoa 47F8               __end_of_utoa 3DBE  
             __end_of_xtoa 39A8                     ??_atoi 000A                     ??_ctoa 000D  
                   ??_main 005D                     ??_dtoa 0026                     ??_otoa 0026  
                   ??_stoa 000E                     ??_utoa 0026                     ??_xtoa 0027  
            __activetblptr 000002           ___lodiv@quotient 0011                     _ADCON0 000FC2  
                   ?_fputc 0001                     STR_110 0658                     ?_fputs 000A  
                   STR_103 0640                     STR_112 0658                     STR_114 0643  
                   _ADRESH 000FC4                     STR_107 0620                     STR_116 0643  
                   _ADRESL 000FC3           ___awdiv@dividend 0001                     ?_putch 0001  
                   _ANSELD 000F3B                  ??_Lcd_Cmd 0002              vfpfcnvrt@done 009A  
  __size_of_Lcd_Write_Char 0038           __end_of___xxtofl 435A               vfprintf@cfmt 0053  
                   ___flge 4C98                     ___fleq 5436                  ??___aodiv 0011  
                ??___fladd 0009                  ??___aomod 0011                     ___wmul 5B28  
                ??___fldiv 0009                  ??___awdiv 0005                  ??___flneg 0005  
                ??___awmod 0005                  ??___flmul 0017                  ??___flsub 0030  
                ??___fltol 0005                  ??___lodiv 0011                  ??___lomod 0011  
                   _efgtoa 1B0E                     _floorf 39A8                     clear_0 5912  
                   clear_1 591E           ___awdiv@quotient 0007            ___awmod@divisor 0003  
                   _result 00F9            ___awmod@counter 0005                     pad@buf 0013  
                   ctoa@fp 000A                     dtoa@fp 001C                     _strcpy 5758  
                   _strlen 5AC2                     fputc@c 0001                     fputs@c 000E  
                   fputs@i 000F                     fputs@s 000A                  ??_isalpha 0003  
                ??_isdigit 0003            ___fpclassifyf@e 0009            ___fpclassifyf@u 000B  
          ___fpclassifyf@x 0001                  ??_islower 0003               __mediumconst 0000  
                ??_isspace 0003                     otoa@fp 001C                     tblptrh 000FF7  
                ??_isupper 0003                     tblptrl 000FF6                     tblptru 000FF8  
                   stoa@cp 001A                     stoa@fp 000A                     putch@c 0001  
         __end_of_vfprintf 569A                     utoa@fp 001C           __end_of_snprintf 5B28  
                ??_tolower 0009                     xtoa@fp 001C                  ??_strncmp 0007  
                ??_toupper 0009            Lcd_Set_Cursor@a 0005            Lcd_Set_Cursor@b 0004  
          Lcd_Set_Cursor@y 0007            Lcd_Set_Cursor@z 0006                 ___flge@ff1 0028  
               ___flge@ff2 002C            ??___fpclassifyf 0005               ___xxtofl@arg 000B  
             ___xxtofl@exp 000A               ___xxtofl@val 0001                 ___fleq@ff1 0001  
               ___fleq@ff2 0005                 __accesstop 0060    __end_of__initialization 5924  
               ___flneg@f1 0001              ___rparam_used 000001                 ___fltol@f1 0001  
           __pcstackCOMRAM 0001               __pidataBANK1 5B6E              __end_of_fputc 51FC  
            __end_of_fputs 58EC              __end_of_putch 5B78             _Lcd_Set_Cursor 55D2  
                ?_Lcd_Init 0001                  ?_Lcd_Port 0001                    ??_fputc 0005  
                  ??_fputs 000E                    ??_putch 0001                 __pbssBANK0 00D9  
               __pbssBANK1 0100                    ?___flge 0028                    ?___fleq 0001  
                  ?___wmul 0001                    ?_efgtoa 0034                    ?_floorf 001A  
__size_of_Lcd_Write_String 007E     __end_of_Lcd_Set_Cursor 5638                    ?_strcpy 0001  
                  ?_strlen 0001                  ?___xxtofl 0001         __size_of_vfpfcnvrt 14AA  
               ??_Lcd_Init 0004                 ??_Lcd_Port 0001           ___lomod@dividend 0001  
           _Lcd_Write_Char 5A8A                    _Lcd_Cmd 5B4E                    __Hparam 0000  
                  __Lparam 0000         __size_of_vsnprintf 011C            __size_of___flge 0104  
          __size_of___fleq 00AA                    ___aodiv 44EA                    ___fladd 2766  
                  ___aomod 47F8                    ___fldiv 3050                    ___awdiv 52C2  
                  ___flneg 5A1A                    ___awmod 5386                    ___flmul 2C26  
                  ___flsub 5862                    ___fltol 4B92            __size_of___wmul 0026  
                  ___lodiv 4E9A                    ___lomod 5062                  ?_vfprintf 004D  
             __psmallconst 0600            __size_of_efgtoa 0C58                  ?_snprintf 00CB  
          __size_of_floorf 0212                    __pcinit 58EC                    __ramtop 0600  
          ?_Lcd_Set_Cursor 0004                    __ptext0 3DBE                    __ptext1 5AF8  
                  __ptext2 495C                    __ptext3 5638                    __ptext4 0664  
                  __ptext5 36CE                    __ptext6 56FA                    __ptext7 59AA  
                  __ptext8 596E                    __ptext9 3BBA            __size_of_strcpy 005C  
          __size_of_strlen 0036               __size_of_abs 0040                    _current 00E1  
             __size_of_pad 00C6                    _isalpha 596E                    _isdigit 5A52  
               ??___xxtofl 0005           ___awmod@dividend 0001                    _islower 59AA  
                  _isspace 5810                    _isupper 59E2                    efgtoa@c 003A  
                  efgtoa@d 0078                    efgtoa@e 0090                    efgtoa@f 0036  
                  efgtoa@g 008C                    efgtoa@h 0082                    efgtoa@i 008A  
                  efgtoa@l 0086                    efgtoa@m 0072                    efgtoa@n 0092  
                  efgtoa@p 007C                    efgtoa@t 006C                    efgtoa@u 0094  
                  efgtoa@w 007E                    atoi@neg 000E                    _tolower 569A  
                  _voltage 00E5     __end_of_Lcd_Write_Char 5AC2                    _strncmp 4A78  
                  _toupper 56FA       end_of_initialization 5924                    floorf@e 0028  
                  floorf@m 0024                    floorf@u 002A                    floorf@x 001A  
                  fputc@fp 0003              __Lmediumconst 0000                    fputs@fp 000C  
        __end_of_vfpfcnvrt 1B0E                 efgtoa@mode 0081                 efgtoa@sign 007A  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                  Lcd_Port@a 0001  
               ??_vfprintf 0053                 ??_snprintf 005D              _vsnprintf$936 00C1  
                  strcpy@d 0009                    strlen@a 0003                    strcpy@s 0007  
                  strlen@s 0001                  _PORTDbits 000F83                ___fladd@grs 0010  
            ___xxtofl@sign 0009                  _TRISAbits 000F92          __end_of_vsnprintf 4A78  
              ___fldiv@grs 0014                ___fldiv@rem 000D            ?_Lcd_Write_Char 0001  
        Lcd_Write_String@a 0005          Lcd_Write_String@i 0009                ___flmul@grs 001C  
           __end_of___flge 4D9C             __end_of___fleq 54E0                vfpfcnvrt@ap 0047  
              vfpfcnvrt@cp 0098                vfpfcnvrt@ct 00A6                vfpfcnvrt@fp 0043  
              vfpfcnvrt@ll 00A9             __end_of___wmul 5B4E                vfpfcnvrt@vp 00B1  
         _Lcd_Write_String 54E0             __end_of_efgtoa 2766             __end_of_floorf 3BBA  
               floorf@F527 00D9             __end_of_strcpy 57B4             __end_of_strlen 5AF8  
      start_initialization 58EC            ___lodiv@divisor 0009            ___lodiv@counter 0019  
              __end_of_abs 596E                __end_of_pad 52C2          __size_of_Lcd_Init 0074  
        __size_of_Lcd_Port 005C      __end_of___fpclassifyf 4E9A                vfprintf@fmt 004F  
                 ??___flge 0030                   ??___fleq 0009                   ??___wmul 0005  
                 ??_efgtoa 003B                __pdataBANK1 0156                   ??_floorf 001E  
          Lcd_Write_Char@a 0004            Lcd_Write_Char@y 0003                   ??_strcpy 0005  
                 ??_strlen 0003                  ___fladd@a 0005                  ___fladd@b 0001  
             vsnprintf@cnt 00C3               vsnprintf@fmt 0059                  ___fldiv@a 0005  
                ___fldiv@b 0001                  ___flmul@a 0013                  ___flmul@b 000F  
                ___flsub@a 002C                  ___flsub@b 0028              __pcstackBANK0 0060  
         ___aodiv@dividend 0001                snprintf@fmt 00CF          __size_of___xxtofl 01B4  
                 ?_Lcd_Cmd 0001                  _atoi$1274 0010                  _atoi$1275 0014  
                _atoi$1276 0012                _efgtoa$1071 0064                _efgtoa$1066 0060  
              _efgtoa$1075 0066                _efgtoa$1067 0062                _efgtoa$1076 0068  
              _efgtoa$1077 006A                  _dtoa$1042 002E           ??_Lcd_Set_Cursor 0005  
                 ?___aodiv 0001                   ?___fladd 0001                   ?___aomod 0001  
                 ?___fldiv 0001                   ?___awdiv 0001           ___aodiv@quotient 0013  
                 ?___flneg 0001                   ?___awmod 0001                   ?___flmul 000F  
                 ?___flsub 0028                   ?___fltol 0001                   ?___lodiv 0001  
                 ?___lomod 0001          __size_of_vfprintf 0062          __size_of_snprintf 0030  
          ___lomod@divisor 0009                __smallconst 0600            ___lomod@counter 0011  
                 ?_isalpha 0001                   ?_isdigit 0001                   ?_islower 0001  
                 ?_isspace 0001                   ?_isupper 0001                   ?_tolower 0007  
           __size_of_fputc 00CA             __size_of_fputs 0044                   ?_strncmp 0001  
                 ?_toupper 0007             __size_of_putch 0002             ___wmul@product 0005  
                 Lcd_Cmd@a 0003                  _vfpfcnvrt 0664                  _xtoa$1113 002F  
                _xtoa$1114 0031                 _ADCON0bits 000FC2                 _ADCON1bits 000FC1  
               _ADCON2bits 000FC0          ___wmul@multiplier 0001           ??_Lcd_Write_Char 0002  
             _isspace$1315 0007                   _Lcd_Init 555E                   _Lcd_Port 57B4  
               vfpfcnvrt@c 00B3                 vfpfcnvrt@f 00A2                  copy_data0 5900  
                _vsnprintf 495C   __end_of_Lcd_Write_String 555E           __size_of_Lcd_Cmd 0020  
                 __Hrparam 0000                 vfprintf@ap 0051                   __Lrparam 0000  
               vfprintf@fp 004D           __size_of___aodiv 0188           __size_of___fladd 04C0  
         __size_of___aomod 0164           __size_of___fldiv 039A           __size_of___awdiv 00C4  
         __size_of___flneg 0038           __size_of___awmod 00B0                vsnprintf@ap 005B  
         __size_of___flmul 042A           __size_of___flsub 0046           __size_of___fltol 0106  
         __size_of___lodiv 00F0           __size_of___lomod 00D0                 ?_vfpfcnvrt 0043  
               snprintf@ap 00D7            ___aodiv@divisor 0009            ___aodiv@counter 0011  
               _ANSELAbits 000F38         ___fpclassifyf@F465 00DD                   ___xxtofl 41A6  
         __size_of_isalpha 003C           __size_of_isdigit 0038           __size_of_islower 0038  
         __size_of_isspace 0052                   __ptext10 5062                   __ptext11 4E9A  
                 __ptext20 4D9C                   __ptext12 4A78                   __ptext21 4B92  
                 __ptext13 4672                   __ptext30 52C2                   __ptext22 5862  
                 __ptext14 3FB6                   __ptext31 33EA                   __ptext23 2766  
                 __ptext15 1B0E                   __ptext40 5B76                   __ptext32 51FC  
                 __ptext24 5A1A                   __ptext16 569A                   __ptext41 435A  
                 __ptext33 5AC2                   __ptext25 2C26                   __ptext17 59E2  
                 __ptext50 5B4E                   __ptext42 5810                   __ptext34 58A8  
                 __ptext26 4C98                   __ptext18 5758                   __ptext51 57B4  
                 __ptext43 5A52                   __ptext35 592E                   __ptext27 5436  
                 __ptext19 39A8                   __ptext44 5B28                   __ptext36 47F8  
                 __ptext28 3050                   __ptext45 41A6                   __ptext37 44EA  
                 __ptext29 5386                   __ptext46 54E0                   __ptext38 4F8A  
                 __ptext47 5A8A                   __ptext39 5132                   __ptext48 55D2  
                 __ptext49 555E           __size_of_isupper 0038           __size_of_tolower 0060  
               strcpy@dest 0001           __size_of_strncmp 011A           __size_of_toupper 005E  
               ?_vsnprintf 0055              __size_of_atoi 0190              __size_of_ctoa 00D8  
            __size_of_main 01F8              __size_of_dtoa 02E4              __size_of_otoa 01F0  
            __size_of_stoa 0186              __size_of_utoa 0204              __size_of_xtoa 02DA  
                 efgtoa@fp 0034                   efgtoa@ne 0070                   efgtoa@pp 006E  
                 efgtoa@ou 0074                  stoa@F1176 0156                   _vfprintf 5638  
                 _snprintf 5AF8           ___aomod@dividend 0001             _vfpfcnvrt$1150 00A0  
           _vfpfcnvrt$1128 009C             _vfpfcnvrt$1129 009E                   isalpha@c 0001  
                 isdigit@c 0001                 vsnprintf@f 00C5                 vsnprintf@n 0057  
               vsnprintf@s 0055                  snprintf@n 00CD                  snprintf@s 00CB  
       Lcd_Write_Char@temp 0002                   islower@c 0001                   isspace@c 0001  
                strcpy@src 0003                   isupper@c 0001                  strncmp@_l 0001  
                strncmp@_r 0003                 _OSCCONbits 000FD3                efgtoa@nmode 0080  
          ___aomod@divisor 0009                ??_vfpfcnvrt 0049                   stoa@nuls 000F  
          ___aomod@counter 0011         Lcd_Set_Cursor@temp 0008                   tolower@c 0007  
   __size_of___fpclassifyf 00FE                   strncmp@l 0008                   strncmp@n 0005  
                 strncmp@r 000A                   toupper@c 0007              ___fladd@signs 000D  
             ___aodiv@sign 0012                ??_vsnprintf 00BC               ___fladd@aexp 000E  
             ___fladd@bexp 000F               ___aomod@sign 0012  
